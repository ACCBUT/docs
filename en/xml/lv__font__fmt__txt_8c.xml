<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="lv__font__fmt__txt_8c" kind="file" language="C++">
    <compoundname>lv_font_fmt_txt.c</compoundname>
    <includes refid="lv__font_8h" local="yes">lv_font.h</includes>
    <includes refid="lv__font__fmt__txt_8h" local="yes">lv_font_fmt_txt.h</includes>
    <includes refid="lv__log_8h" local="yes">../lv_misc/lv_log.h</includes>
    <includes refid="lv__utils_8h" local="yes">../lv_misc/lv_utils.h</includes>
    <incdepgraph>
      <node id="1807">
        <label>stdbool.h</label>
      </node>
      <node id="1808">
        <label>lv_symbol_def.h</label>
        <link refid="lv__symbol__def_8h"/>
        <childnode refid="1804" relation="include">
        </childnode>
      </node>
      <node id="1805">
        <label>stdint.h</label>
      </node>
      <node id="1803">
        <label>lv_font.h</label>
        <link refid="lv__font_8h"/>
        <childnode refid="1804" relation="include">
        </childnode>
        <childnode refid="1805" relation="include">
        </childnode>
        <childnode refid="1806" relation="include">
        </childnode>
        <childnode refid="1807" relation="include">
        </childnode>
        <childnode refid="1808" relation="include">
        </childnode>
      </node>
      <node id="1806">
        <label>stddef.h</label>
      </node>
      <node id="1804">
        <label>../../../lv_conf.h</label>
      </node>
      <node id="1810">
        <label>../lv_misc/lv_log.h</label>
        <link refid="lv__log_8h"/>
        <childnode refid="1804" relation="include">
        </childnode>
        <childnode refid="1805" relation="include">
        </childnode>
      </node>
      <node id="1802">
        <label>/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_font/lv_font_fmt_txt.c</label>
        <link refid="lv__font__fmt__txt_8c"/>
        <childnode refid="1803" relation="include">
        </childnode>
        <childnode refid="1809" relation="include">
        </childnode>
        <childnode refid="1810" relation="include">
        </childnode>
        <childnode refid="1811" relation="include">
        </childnode>
      </node>
      <node id="1809">
        <label>lv_font_fmt_txt.h</label>
        <link refid="lv__font__fmt__txt_8h"/>
        <childnode refid="1804" relation="include">
        </childnode>
        <childnode refid="1805" relation="include">
        </childnode>
        <childnode refid="1806" relation="include">
        </childnode>
        <childnode refid="1807" relation="include">
        </childnode>
        <childnode refid="1803" relation="include">
        </childnode>
      </node>
      <node id="1811">
        <label>../lv_misc/lv_utils.h</label>
        <link refid="lv__utils_8h"/>
        <childnode refid="1805" relation="include">
        </childnode>
        <childnode refid="1806" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="lv__font__fmt__txt_8c_1a7754a628c71a38d7ffb7bd1988e538c5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t get_glyph_dsc_id</definition>
        <argsstring>(const lv_font_t *font, uint32_t letter)</argsstring>
        <name>get_glyph_dsc_id</name>
        <param>
          <type>const <ref refid="lv__font_8h_1aa379967edc40a171f22ab760d1292cf0" kindref="member">lv_font_t</ref> *</type>
          <declname>font</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>letter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_font/lv_font_fmt_txt.c" line="26" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_font/lv_font_fmt_txt.c" bodystart="110" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="lv__font__fmt__txt_8c_1a7e302ef81f7a1f200e48b4385b36931b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>static int8_t get_kern_value</definition>
        <argsstring>(const lv_font_t *font, uint32_t gid_left, uint32_t gid_right)</argsstring>
        <name>get_kern_value</name>
        <param>
          <type>const <ref refid="lv__font_8h_1aa379967edc40a171f22ab760d1292cf0" kindref="member">lv_font_t</ref> *</type>
          <declname>font</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>gid_left</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>gid_right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_font/lv_font_fmt_txt.c" line="27" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_font/lv_font_fmt_txt.c" bodystart="165" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="lv__font__fmt__txt_8c_1a9475cc4cb9bcbc4e6f69a98fbd6df4e8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t unicode_list_compare</definition>
        <argsstring>(const void *ref, const void *element)</argsstring>
        <name>unicode_list_compare</name>
        <param>
          <type>const void *</type>
          <declname>ref</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Code Comparator.</para><para>Compares the value of both input arguments.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pRef</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the reference. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pElement</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the element to compare.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Result of comparison. </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;</parametername>
</parameternamelist>
<parameterdescription>
<para>0 Reference is greater than element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>=</parametername>
</parameternamelist>
<parameterdescription>
<para>0 Reference is equal to element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>0 Reference is less than element. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_font/lv_font_fmt_txt.c" line="28" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_font/lv_font_fmt_txt.c" bodystart="254" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="lv__font__fmt__txt_8c_1a3b137ae553c271ef58bdaf5c307966e0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t kern_pair_8_compare</definition>
        <argsstring>(const void *ref, const void *element)</argsstring>
        <name>kern_pair_8_compare</name>
        <param>
          <type>const void *</type>
          <declname>ref</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_font/lv_font_fmt_txt.c" line="29" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_font/lv_font_fmt_txt.c" bodystart="220" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="lv__font__fmt__txt_8c_1a87194f3b98924ce599ed460d44addee8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t kern_pair_16_compare</definition>
        <argsstring>(const void *ref, const void *element)</argsstring>
        <name>kern_pair_16_compare</name>
        <param>
          <type>const void *</type>
          <declname>ref</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_font/lv_font_fmt_txt.c" line="30" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_font/lv_font_fmt_txt.c" bodystart="231" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="lv__font__fmt__txt_8c_1a225199a3e0865ae7d498f2de1a6e3fa0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const uint8_t *</type>
        <definition>const uint8_t* lv_font_get_bitmap_fmt_txt</definition>
        <argsstring>(const lv_font_t *font, uint32_t unicode_letter)</argsstring>
        <name>lv_font_get_bitmap_fmt_txt</name>
        <param>
          <type>const <ref refid="lv__font_8h_1aa379967edc40a171f22ab760d1292cf0" kindref="member">lv_font_t</ref> *</type>
          <declname>font</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>unicode_letter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Used as <computeroutput>get_glyph_bitmap</computeroutput> callback in LittelvGL&apos;s native font format if the font is uncompressed. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>font</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to font </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unicode_letter</parametername>
</parameternamelist>
<parameterdescription>
<para>an unicode letter which bitmap should be get </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the bitmap or NULL if not found </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_font/lv_font_fmt_txt.c" line="54" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_font/lv_font_fmt_txt.c" bodystart="54" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="lv__font__fmt__txt_8c_1a3d3da99be985754e7ece9aec210bff97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_font_get_glyph_dsc_fmt_txt</definition>
        <argsstring>(const lv_font_t *font, lv_font_glyph_dsc_t *dsc_out, uint32_t unicode_letter, uint32_t unicode_letter_next)</argsstring>
        <name>lv_font_get_glyph_dsc_fmt_txt</name>
        <param>
          <type>const <ref refid="lv__font_8h_1aa379967edc40a171f22ab760d1292cf0" kindref="member">lv_font_t</ref> *</type>
          <declname>font</declname>
        </param>
        <param>
          <type><ref refid="structlv__font__glyph__dsc__t" kindref="compound">lv_font_glyph_dsc_t</ref> *</type>
          <declname>dsc_out</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>unicode_letter</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>unicode_letter_next</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Used as <computeroutput>get_glyph_dsc</computeroutput> callback in LittelvGL&apos;s native font format if the font is uncompressed. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>font_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to font </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dsc_out</parametername>
</parameternamelist>
<parameterdescription>
<para>store the result descriptor here </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>letter</parametername>
</parameternamelist>
<parameterdescription>
<para>an UNICODE letter code </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true: descriptor is successfully loaded into <computeroutput>dsc_out</computeroutput>. false: the letter was not found, no data is loaded to <computeroutput>dsc_out</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_font/lv_font_fmt_txt.c" line="76" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_font/lv_font_fmt_txt.c" bodystart="76" bodyend="104"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>INCLUDES</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lv__font_8h" kindref="compound">lv_font.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lv__font__fmt__txt_8h" kindref="compound">lv_font_fmt_txt.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_misc/lv_log.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_misc/lv_utils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>DEFINES</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>TYPEDEFS</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/><sp/>STATIC<sp/>PROTOTYPES</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>get_glyph_dsc_id(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__font__struct" kindref="compound">lv_font_t</ref><sp/>*<sp/>font,<sp/>uint32_t<sp/>letter);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int8_t<sp/>get_kern_value(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__font__struct" kindref="compound">lv_font_t</ref><sp/>*<sp/>font,<sp/>uint32_t<sp/>gid_left,<sp/>uint32_t<sp/>gid_right);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32_t<sp/>unicode_list_compare(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>ref,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>element);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32_t<sp/>kern_pair_8_compare(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>ref,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>element);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32_t<sp/>kern_pair_16_compare(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>ref,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>element);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/>STATIC<sp/>VARIABLES</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>GLOBAL<sp/>PROTOTYPES</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>MACROS</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/><sp/><sp/>GLOBAL<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*<sp/><ref refid="lv__font__fmt__txt_8c_1a225199a3e0865ae7d498f2de1a6e3fa0" kindref="member">lv_font_get_bitmap_fmt_txt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__font__struct" kindref="compound">lv_font_t</ref><sp/>*<sp/>font,<sp/>uint32_t<sp/>unicode_letter)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__font__fmt__txt__dsc__t" kindref="compound">lv_font_fmt_txt_dsc_t</ref><sp/>*<sp/>fdsc<sp/>=<sp/>(<ref refid="structlv__font__fmt__txt__dsc__t" kindref="compound">lv_font_fmt_txt_dsc_t</ref><sp/>*)<sp/>font-&gt;<ref refid="struct__lv__font__struct_1a28778b10b3613a97709a11069c8743db" kindref="member">dsc</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>gid<sp/>=<sp/>get_glyph_dsc_id(font,<sp/>unicode_letter);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!gid)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__font__fmt__txt__glyph__dsc__t" kindref="compound">lv_font_fmt_txt_glyph_dsc_t</ref><sp/>*<sp/>gdsc<sp/>=<sp/>&amp;fdsc-&gt;<ref refid="structlv__font__fmt__txt__dsc__t_1a4b25946088a7b3db95cbac3ce05d31d4" kindref="member">glyph_dsc</ref>[gid];</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(gdsc)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;fdsc-&gt;<ref refid="structlv__font__fmt__txt__dsc__t_1ae41fdc5fd272a201e233220ca63e3ae5" kindref="member">glyph_bitmap</ref>[gdsc-&gt;<ref refid="structlv__font__fmt__txt__glyph__dsc__t_1aa97c9efbff255f0f86ca12ecea8bdab1" kindref="member">bitmap_index</ref>];</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*If<sp/>not<sp/>returned<sp/>earlier<sp/>then<sp/>the<sp/>letter<sp/>is<sp/>not<sp/>found<sp/>in<sp/>this<sp/>font*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__font__fmt__txt_8c_1a3d3da99be985754e7ece9aec210bff97" kindref="member">lv_font_get_glyph_dsc_fmt_txt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__font__struct" kindref="compound">lv_font_t</ref><sp/>*<sp/>font,<sp/><ref refid="structlv__font__glyph__dsc__t" kindref="compound">lv_font_glyph_dsc_t</ref><sp/>*<sp/>dsc_out,<sp/>uint32_t<sp/>unicode_letter,<sp/>uint32_t<sp/>unicode_letter_next)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__font__fmt__txt__dsc__t" kindref="compound">lv_font_fmt_txt_dsc_t</ref><sp/>*<sp/>fdsc<sp/>=<sp/>(<ref refid="structlv__font__fmt__txt__dsc__t" kindref="compound">lv_font_fmt_txt_dsc_t</ref><sp/>*)<sp/>font-&gt;<ref refid="struct__lv__font__struct_1a28778b10b3613a97709a11069c8743db" kindref="member">dsc</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>gid<sp/>=<sp/>get_glyph_dsc_id(font,<sp/>unicode_letter);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!gid)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/>kvalue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fdsc-&gt;<ref refid="structlv__font__fmt__txt__dsc__t_1a5fe9159017e5e4aaf858a2a4cbfe22a7" kindref="member">kern_dsc</ref>)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>gid_next<sp/>=<sp/>get_glyph_dsc_id(font,<sp/>unicode_letter_next);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(gid_next)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kvalue<sp/>=<sp/>get_kern_value(font,<sp/>gid,<sp/>gid_next);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Put<sp/>together<sp/>a<sp/>glyph<sp/>dsc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__font__fmt__txt__glyph__dsc__t" kindref="compound">lv_font_fmt_txt_glyph_dsc_t</ref><sp/>*<sp/>gdsc<sp/>=<sp/>&amp;fdsc-&gt;<ref refid="structlv__font__fmt__txt__dsc__t_1a4b25946088a7b3db95cbac3ce05d31d4" kindref="member">glyph_dsc</ref>[gid];</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>adv_w<sp/>=<sp/>gdsc-&gt;<ref refid="structlv__font__fmt__txt__glyph__dsc__t_1ac98ffed9a7ee43bf20202a2f1c5651fc" kindref="member">adv_w</ref><sp/>+<sp/>((int32_t)((int32_t)kvalue<sp/>*<sp/>fdsc-&gt;<ref refid="structlv__font__fmt__txt__dsc__t_1a90a8059b2a1e445b4e5a5972314ea549" kindref="member">kern_scale</ref>)<sp/>&gt;&gt;<sp/>4);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>adv_w<sp/><sp/>=<sp/>(adv_w<sp/>+<sp/>(1<sp/>&lt;&lt;<sp/>3))<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>dsc_out-&gt;<ref refid="structlv__font__glyph__dsc__t_1af270ea3d337c8aabde5fde0eaf89c03d" kindref="member">adv_w</ref><sp/>=<sp/>adv_w;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>dsc_out-&gt;<ref refid="structlv__font__glyph__dsc__t_1a755c65c2c6d9a790d726e67dbcc0df3d" kindref="member">box_h</ref><sp/>=<sp/>gdsc-&gt;<ref refid="structlv__font__fmt__txt__glyph__dsc__t_1a793149a8472c3c37c16be9b16cbf153e" kindref="member">box_h</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>dsc_out-&gt;<ref refid="structlv__font__glyph__dsc__t_1a46cc6fdf09582367cb0f0b2f12343196" kindref="member">box_w</ref><sp/>=<sp/>gdsc-&gt;<ref refid="structlv__font__fmt__txt__glyph__dsc__t_1adaf0864bd7cf0e5b344a8ef5e3857d0c" kindref="member">box_w</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>dsc_out-&gt;<ref refid="structlv__font__glyph__dsc__t_1a7dfed1ac8b3f543b7df6d28ba9d8fa79" kindref="member">ofs_x</ref><sp/>=<sp/>gdsc-&gt;<ref refid="structlv__font__fmt__txt__glyph__dsc__t_1a87c0bac3e7ceb27ffbdb63d791676f62" kindref="member">ofs_x</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>dsc_out-&gt;<ref refid="structlv__font__glyph__dsc__t_1ad23c3c4fe94d93c3b27571d80b043293" kindref="member">ofs_y</ref><sp/>=<sp/>gdsc-&gt;<ref refid="structlv__font__fmt__txt__glyph__dsc__t_1a4e0f1cfe3bc200d48d578c0b8bfecff8" kindref="member">ofs_y</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>dsc_out-&gt;<ref refid="structlv__font__glyph__dsc__t_1aeeddfdcd24731d3b4e7cab1284368c52" kindref="member">bpp</ref><sp/><sp/><sp/>=<sp/>fdsc-&gt;<ref refid="structlv__font__fmt__txt__dsc__t_1ae2fb6b84b48ae89984dd377fbb713448" kindref="member">bpp</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/><sp/><sp/>STATIC<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>get_glyph_dsc_id(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__font__struct" kindref="compound">lv_font_t</ref><sp/>*<sp/>font,<sp/>uint32_t<sp/>letter)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(letter<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__font__fmt__txt__dsc__t" kindref="compound">lv_font_fmt_txt_dsc_t</ref><sp/>*<sp/>fdsc<sp/>=<sp/>(<ref refid="structlv__font__fmt__txt__dsc__t" kindref="compound">lv_font_fmt_txt_dsc_t</ref><sp/>*)<sp/>font-&gt;<ref refid="struct__lv__font__struct_1a28778b10b3613a97709a11069c8743db" kindref="member">dsc</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Check<sp/>the<sp/>chacge<sp/>first*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(letter<sp/>==<sp/>fdsc-&gt;<ref refid="structlv__font__fmt__txt__dsc__t_1a9d82bb3901531c59699eb46528da8aaa" kindref="member">last_letter</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fdsc-&gt;<ref refid="structlv__font__fmt__txt__dsc__t_1a2ffa8e488d38a177c5138bcfee15895c" kindref="member">last_glyph_id</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>i;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fdsc-&gt;<ref refid="structlv__font__fmt__txt__dsc__t_1ab807f5078f12759fd740d37413ad7516" kindref="member">cmap_num</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Relative<sp/>code<sp/>point*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>rcp<sp/>=<sp/>letter<sp/>-<sp/>fdsc-&gt;<ref refid="structlv__font__fmt__txt__dsc__t_1a2673563209b2090ef0f27a5755b8f846" kindref="member">cmaps</ref>[i].<ref refid="structlv__font__fmt__txt__cmap__t_1a6e07da091a4aa509c10fcedafe423868" kindref="member">range_start</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rcp<sp/>&gt;<sp/>fdsc-&gt;<ref refid="structlv__font__fmt__txt__dsc__t_1a2673563209b2090ef0f27a5755b8f846" kindref="member">cmaps</ref>[i].<ref refid="structlv__font__fmt__txt__cmap__t_1a27fc43146e0f7c451a2396e738238d09" kindref="member">range_length</ref>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>glyph_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fdsc-&gt;<ref refid="structlv__font__fmt__txt__dsc__t_1a2673563209b2090ef0f27a5755b8f846" kindref="member">cmaps</ref>[i].<ref refid="structlv__font__fmt__txt__cmap__t_1aff6823f2731c5559e030bd7a3bd25fdc" kindref="member">type</ref><sp/>==<sp/><ref refid="lv__font__fmt__txt_8h_1a124895b1853f8f1b2e975871d3f39d3fa23c51550bec2136d7282e62a75b7e4ae" kindref="member">LV_FONT_FMT_TXT_CMAP_FORMAT0_TINY</ref>)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glyph_id<sp/>=<sp/>fdsc-&gt;<ref refid="structlv__font__fmt__txt__dsc__t_1a2673563209b2090ef0f27a5755b8f846" kindref="member">cmaps</ref>[i].<ref refid="structlv__font__fmt__txt__cmap__t_1a86e5835332a5ae348024d372f233a032" kindref="member">glyph_id_start</ref><sp/>+<sp/>rcp;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fdsc-&gt;<ref refid="structlv__font__fmt__txt__dsc__t_1a2673563209b2090ef0f27a5755b8f846" kindref="member">cmaps</ref>[i].<ref refid="structlv__font__fmt__txt__cmap__t_1aff6823f2731c5559e030bd7a3bd25fdc" kindref="member">type</ref><sp/>==<sp/><ref refid="lv__font__fmt__txt_8h_1a124895b1853f8f1b2e975871d3f39d3faa31835704b85f0d6b7e4507e072e3dc6" kindref="member">LV_FONT_FMT_TXT_CMAP_FORMAT0_FULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*<sp/>gid_ofs_8<sp/>=<sp/>fdsc-&gt;<ref refid="structlv__font__fmt__txt__dsc__t_1a2673563209b2090ef0f27a5755b8f846" kindref="member">cmaps</ref>[i].<ref refid="structlv__font__fmt__txt__cmap__t_1aaca496a8e79bea1bed763143af8fa79a" kindref="member">glyph_id_ofs_list</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glyph_id<sp/>=<sp/>fdsc-&gt;<ref refid="structlv__font__fmt__txt__dsc__t_1a2673563209b2090ef0f27a5755b8f846" kindref="member">cmaps</ref>[i].<ref refid="structlv__font__fmt__txt__cmap__t_1a86e5835332a5ae348024d372f233a032" kindref="member">glyph_id_start</ref><sp/>+<sp/>gid_ofs_8[rcp];</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fdsc-&gt;<ref refid="structlv__font__fmt__txt__dsc__t_1a2673563209b2090ef0f27a5755b8f846" kindref="member">cmaps</ref>[i].<ref refid="structlv__font__fmt__txt__cmap__t_1aff6823f2731c5559e030bd7a3bd25fdc" kindref="member">type</ref><sp/>==<sp/><ref refid="lv__font__fmt__txt_8h_1a124895b1853f8f1b2e975871d3f39d3fab3075fa1e5f9f0851ae631a02dfcd319" kindref="member">LV_FONT_FMT_TXT_CMAP_SPARSE_TINY</ref>)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*<sp/>p<sp/>=<sp/><ref refid="lv__utils_8c_1a8dd480f581157e31d2918953900eb503" kindref="member">lv_utils_bsearch</ref>(&amp;rcp,<sp/>fdsc-&gt;<ref refid="structlv__font__fmt__txt__dsc__t_1a2673563209b2090ef0f27a5755b8f846" kindref="member">cmaps</ref>[i].<ref refid="structlv__font__fmt__txt__cmap__t_1af5ee5bd8ed8cf8746e608479035f581d" kindref="member">unicode_list</ref>,<sp/>fdsc-&gt;<ref refid="structlv__font__fmt__txt__dsc__t_1a2673563209b2090ef0f27a5755b8f846" kindref="member">cmaps</ref>[i].<ref refid="structlv__font__fmt__txt__cmap__t_1afd6421799da4717cfc9082220c9b1110" kindref="member">list_length</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(fdsc-&gt;<ref refid="structlv__font__fmt__txt__dsc__t_1a2673563209b2090ef0f27a5755b8f846" kindref="member">cmaps</ref>[i].<ref refid="structlv__font__fmt__txt__cmap__t_1af5ee5bd8ed8cf8746e608479035f581d" kindref="member">unicode_list</ref>[0]),<sp/>unicode_list_compare);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>ofs<sp/>=<sp/>(uintptr_t)p<sp/>-<sp/>(uintptr_t)<sp/>fdsc-&gt;<ref refid="structlv__font__fmt__txt__dsc__t_1a2673563209b2090ef0f27a5755b8f846" kindref="member">cmaps</ref>[i].<ref refid="structlv__font__fmt__txt__cmap__t_1af5ee5bd8ed8cf8746e608479035f581d" kindref="member">unicode_list</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ofs<sp/>=<sp/>ofs<sp/>&gt;&gt;<sp/>1;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*The<sp/>list<sp/>stores<sp/>`uint16_t`<sp/>so<sp/>the<sp/>get<sp/>the<sp/>index<sp/>divide<sp/>by<sp/>2*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glyph_id<sp/>=<sp/>fdsc-&gt;<ref refid="structlv__font__fmt__txt__dsc__t_1a2673563209b2090ef0f27a5755b8f846" kindref="member">cmaps</ref>[i].<ref refid="structlv__font__fmt__txt__cmap__t_1a86e5835332a5ae348024d372f233a032" kindref="member">glyph_id_start</ref><sp/>+<sp/>ofs;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fdsc-&gt;<ref refid="structlv__font__fmt__txt__dsc__t_1a2673563209b2090ef0f27a5755b8f846" kindref="member">cmaps</ref>[i].<ref refid="structlv__font__fmt__txt__cmap__t_1aff6823f2731c5559e030bd7a3bd25fdc" kindref="member">type</ref><sp/>==<sp/><ref refid="lv__font__fmt__txt_8h_1a124895b1853f8f1b2e975871d3f39d3fad55cd0983c428200ccaafeb5d127a690" kindref="member">LV_FONT_FMT_TXT_CMAP_SPARSE_FULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*<sp/>p<sp/>=<sp/><ref refid="lv__utils_8c_1a8dd480f581157e31d2918953900eb503" kindref="member">lv_utils_bsearch</ref>(&amp;rcp,<sp/>fdsc-&gt;<ref refid="structlv__font__fmt__txt__dsc__t_1a2673563209b2090ef0f27a5755b8f846" kindref="member">cmaps</ref>[i].<ref refid="structlv__font__fmt__txt__cmap__t_1af5ee5bd8ed8cf8746e608479035f581d" kindref="member">unicode_list</ref>,<sp/>fdsc-&gt;<ref refid="structlv__font__fmt__txt__dsc__t_1a2673563209b2090ef0f27a5755b8f846" kindref="member">cmaps</ref>[i].<ref refid="structlv__font__fmt__txt__cmap__t_1afd6421799da4717cfc9082220c9b1110" kindref="member">list_length</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(fdsc-&gt;<ref refid="structlv__font__fmt__txt__dsc__t_1a2673563209b2090ef0f27a5755b8f846" kindref="member">cmaps</ref>[i].<ref refid="structlv__font__fmt__txt__cmap__t_1af5ee5bd8ed8cf8746e608479035f581d" kindref="member">unicode_list</ref>[0]),<sp/>unicode_list_compare);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>ofs<sp/>=<sp/>(uintptr_t)p<sp/>-<sp/>(uintptr_t)<sp/>fdsc-&gt;<ref refid="structlv__font__fmt__txt__dsc__t_1a2673563209b2090ef0f27a5755b8f846" kindref="member">cmaps</ref>[i].<ref refid="structlv__font__fmt__txt__cmap__t_1af5ee5bd8ed8cf8746e608479035f581d" kindref="member">unicode_list</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ofs<sp/>=<sp/>ofs<sp/>&gt;&gt;<sp/>1;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*The<sp/>list<sp/>stores<sp/>`uint16_t`<sp/>so<sp/>the<sp/>get<sp/>the<sp/>index<sp/>divide<sp/>by<sp/>2*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*<sp/>gid_ofs_16<sp/>=<sp/>fdsc-&gt;<ref refid="structlv__font__fmt__txt__dsc__t_1a2673563209b2090ef0f27a5755b8f846" kindref="member">cmaps</ref>[i].<ref refid="structlv__font__fmt__txt__cmap__t_1aaca496a8e79bea1bed763143af8fa79a" kindref="member">glyph_id_ofs_list</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glyph_id<sp/>=<sp/>fdsc-&gt;<ref refid="structlv__font__fmt__txt__dsc__t_1a2673563209b2090ef0f27a5755b8f846" kindref="member">cmaps</ref>[i].<ref refid="structlv__font__fmt__txt__cmap__t_1a86e5835332a5ae348024d372f233a032" kindref="member">glyph_id_start</ref><sp/>+<sp/>gid_ofs_16[ofs];</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Update<sp/>the<sp/>cache*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fdsc-&gt;<ref refid="structlv__font__fmt__txt__dsc__t_1a9d82bb3901531c59699eb46528da8aaa" kindref="member">last_letter</ref><sp/>=<sp/>letter;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fdsc-&gt;<ref refid="structlv__font__fmt__txt__dsc__t_1a2ffa8e488d38a177c5138bcfee15895c" kindref="member">last_glyph_id</ref><sp/>=<sp/>glyph_id;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>glyph_id;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>fdsc-&gt;<ref refid="structlv__font__fmt__txt__dsc__t_1a9d82bb3901531c59699eb46528da8aaa" kindref="member">last_letter</ref><sp/>=<sp/>letter;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>fdsc-&gt;<ref refid="structlv__font__fmt__txt__dsc__t_1a2ffa8e488d38a177c5138bcfee15895c" kindref="member">last_glyph_id</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int8_t<sp/>get_kern_value(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__font__struct" kindref="compound">lv_font_t</ref><sp/>*<sp/>font,<sp/>uint32_t<sp/>gid_left,<sp/>uint32_t<sp/>gid_right)</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__font__fmt__txt__dsc__t" kindref="compound">lv_font_fmt_txt_dsc_t</ref><sp/>*<sp/>fdsc<sp/>=<sp/>(<ref refid="structlv__font__fmt__txt__dsc__t" kindref="compound">lv_font_fmt_txt_dsc_t</ref><sp/>*)<sp/>font-&gt;<ref refid="struct__lv__font__struct_1a28778b10b3613a97709a11069c8743db" kindref="member">dsc</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/>value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fdsc-&gt;<ref refid="structlv__font__fmt__txt__dsc__t_1a163a6ee3dcd4ef2db799ef6beabaaf17" kindref="member">kern_classes</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Kern<sp/>pairs*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__font__fmt__txt__kern__pair__t" kindref="compound">lv_font_fmt_txt_kern_pair_t</ref><sp/>*<sp/>kdsc<sp/>=<sp/>fdsc-&gt;<ref refid="structlv__font__fmt__txt__dsc__t_1a5fe9159017e5e4aaf858a2a4cbfe22a7" kindref="member">kern_dsc</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(kdsc-&gt;<ref refid="structlv__font__fmt__txt__kern__pair__t_1a86976db1791f3300d81365f8ce296614" kindref="member">glyph_ids_size</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Use<sp/>binary<sp/>search<sp/>to<sp/>find<sp/>the<sp/>kern<sp/>value.</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>pairs<sp/>are<sp/>ordered<sp/>left_id<sp/>first,<sp/>then<sp/>right_id<sp/>secondly.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*<sp/>g_ids<sp/>=<sp/>kdsc-&gt;<ref refid="structlv__font__fmt__txt__kern__pair__t_1ae9e734b1a027e2b646157fe64155a5f3" kindref="member">glyph_ids</ref>;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>g_id_both<sp/>=<sp/>(gid_right<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>gid_left;<sp/></highlight><highlight class="comment">/*Create<sp/>one<sp/>number<sp/>from<sp/>the<sp/>ids*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*<sp/>kid_p<sp/>=<sp/><ref refid="lv__utils_8c_1a8dd480f581157e31d2918953900eb503" kindref="member">lv_utils_bsearch</ref>(&amp;g_id_both,<sp/>g_ids,<sp/>kdsc-&gt;<ref refid="structlv__font__fmt__txt__kern__pair__t_1a3a5c50557f0d2cb8cd4a9b8cafeb4a1e" kindref="member">pair_cnt</ref>,<sp/>2,<sp/>kern_pair_8_compare);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*If<sp/>the<sp/>`g_id_both`<sp/>were<sp/>found<sp/>get<sp/>its<sp/>index<sp/>from<sp/>the<sp/>pointer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(kid_p)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uintptr_t<sp/>ofs<sp/>=<sp/>(uintptr_t)kid_p<sp/>-<sp/>(uintptr_t)g_ids;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ofs<sp/>=<sp/>ofs<sp/>&gt;&gt;<sp/>1;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*ofs<sp/>is<sp/>for<sp/>pair,<sp/>divide<sp/>by<sp/>2<sp/>to<sp/>refer<sp/>as<sp/>a<sp/>single<sp/>value*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>kdsc-&gt;<ref refid="structlv__font__fmt__txt__kern__pair__t_1a8ae0fd73c5c371aea43de75e630f3870" kindref="member">values</ref>[ofs];</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(kdsc-&gt;<ref refid="structlv__font__fmt__txt__kern__pair__t_1a86976db1791f3300d81365f8ce296614" kindref="member">glyph_ids_size</ref><sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Use<sp/>binary<sp/>search<sp/>to<sp/>find<sp/>the<sp/>kern<sp/>value.</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>pairs<sp/>are<sp/>ordered<sp/>left_id<sp/>first,<sp/>then<sp/>right_id<sp/>secondly.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>*<sp/>g_ids<sp/>=<sp/>kdsc-&gt;<ref refid="structlv__font__fmt__txt__kern__pair__t_1ae9e734b1a027e2b646157fe64155a5f3" kindref="member">glyph_ids</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>g_id_both<sp/>=<sp/>(uint32_t)((uint32_t)gid_right<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>gid_left;<sp/></highlight><highlight class="comment">/*Create<sp/>one<sp/>number<sp/>from<sp/>the<sp/>ids*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*<sp/>kid_p<sp/>=<sp/><ref refid="lv__utils_8c_1a8dd480f581157e31d2918953900eb503" kindref="member">lv_utils_bsearch</ref>(&amp;g_id_both,<sp/>g_ids,<sp/>kdsc-&gt;<ref refid="structlv__font__fmt__txt__kern__pair__t_1a3a5c50557f0d2cb8cd4a9b8cafeb4a1e" kindref="member">pair_cnt</ref>,<sp/>4,<sp/>kern_pair_16_compare);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*If<sp/>the<sp/>`g_id_both`<sp/>were<sp/>found<sp/>get<sp/>its<sp/>index<sp/>from<sp/>the<sp/>pointer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(kid_p)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uintptr_t<sp/>ofs<sp/>=<sp/>(uintptr_t)kid_p<sp/>-<sp/>(uintptr_t)g_ids;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ofs<sp/>=<sp/>ofs<sp/>&gt;&gt;<sp/>4;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*ofs<sp/>is<sp/>4<sp/>byte<sp/>pairs,<sp/>divide<sp/>by<sp/>4<sp/>to<sp/>refer<sp/>as<sp/>a<sp/>single<sp/>value*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>kdsc-&gt;<ref refid="structlv__font__fmt__txt__kern__pair__t_1a8ae0fd73c5c371aea43de75e630f3870" kindref="member">values</ref>[ofs];</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Invalid<sp/>value*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Kern<sp/>classes*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__font__fmt__txt__kern__classes__t" kindref="compound">lv_font_fmt_txt_kern_classes_t</ref><sp/>*<sp/>kdsc<sp/>=<sp/>fdsc-&gt;<ref refid="structlv__font__fmt__txt__dsc__t_1a5fe9159017e5e4aaf858a2a4cbfe22a7" kindref="member">kern_dsc</ref>;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>left_class<sp/>=<sp/>kdsc-&gt;<ref refid="structlv__font__fmt__txt__kern__classes__t_1a207fb64790d8cbcd87d1603a8fe23c14" kindref="member">left_class_mapping</ref>[gid_left];</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>right_class<sp/>=<sp/>kdsc-&gt;<ref refid="structlv__font__fmt__txt__kern__classes__t_1a207fb64790d8cbcd87d1603a8fe23c14" kindref="member">left_class_mapping</ref>[gid_right];</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>class<sp/>=<sp/>0,<sp/>kerning<sp/>not<sp/>exist<sp/>for<sp/>that<sp/>glyph</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>else<sp/>got<sp/>the<sp/>value<sp/>form<sp/>`class_pair_values`<sp/>2D<sp/>array*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(left_class<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>right_class<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>kdsc-&gt;<ref refid="structlv__font__fmt__txt__kern__classes__t_1a0aa43904a9376d15b9bf22ee8e0a288c" kindref="member">class_pair_values</ref>[(left_class-1)*<sp/>kdsc-&gt;<ref refid="structlv__font__fmt__txt__kern__classes__t_1a23834cf39f7005d7bb0559ecda674bd0" kindref="member">right_class_cnt</ref><sp/>+<sp/>(right_class-1)];</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32_t<sp/>kern_pair_8_compare(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>ref,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>element)</highlight></codeline>
<codeline lineno="221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*<sp/>ref8_p<sp/>=<sp/>ref;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*<sp/>element8_p<sp/>=<sp/>element;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*If<sp/>the<sp/>MSB<sp/>is<sp/>different<sp/>it<sp/>will<sp/>matter.<sp/>If<sp/>not<sp/>return<sp/>the<sp/>diff.<sp/>of<sp/>the<sp/>LSB*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ref8_p[0]<sp/>!=<sp/>element8_p[0])<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(int32_t)ref8_p[0]<sp/>-<sp/>element8_p[0];</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(int32_t)<sp/>ref8_p[1]<sp/>-<sp/>element8_p[1];</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32_t<sp/>kern_pair_16_compare(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>ref,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>element)</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>*<sp/>ref16_p<sp/>=<sp/>ref;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>*<sp/>element16_p<sp/>=<sp/>element;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*If<sp/>the<sp/>MSB<sp/>is<sp/>different<sp/>it<sp/>will<sp/>matter.<sp/>If<sp/>not<sp/>return<sp/>the<sp/>diff.<sp/>of<sp/>the<sp/>LSB*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ref16_p[0]<sp/>!=<sp/>element16_p[0])<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(int32_t)ref16_p[0]<sp/>-<sp/>element16_p[0];</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(int32_t)<sp/>ref16_p[1]<sp/>-<sp/>element16_p[1];</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32_t<sp/>unicode_list_compare(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>ref,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>element)</highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*(uint16_t<sp/>*)ref)<sp/>-<sp/>(*(uint16_t<sp/>*)element);</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_font/lv_font_fmt_txt.c"/>
  </compounddef>
</doxygen>
