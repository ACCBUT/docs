<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="lv__objx__templ_8c" kind="file" language="C++">
    <compoundname>lv_objx_templ.c</compoundname>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="lv__objx__templ_8c_1a2284aefddc9422ed19308d01cc492a1f" prot="public" static="no">
        <type>int</type>
        <definition>typedef int keep_pedantic_happy</definition>
        <argsstring></argsstring>
        <name>keep_pedantic_happy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_objx/lv_objx_templ.c" line="228" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_objx/lv_objx_templ.c" bodystart="228" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="comment">/*<sp/>TODO<sp/>Remove<sp/>these<sp/>instructions</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Search<sp/>an<sp/>replace:<sp/>template<sp/>-&gt;<sp/>object<sp/>normal<sp/>name<sp/>with<sp/>lower<sp/>case<sp/>(e.g.<sp/>button,<sp/>label<sp/>etc.)</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>templ<sp/>-&gt;<sp/>object<sp/>short<sp/>name<sp/>with<sp/>lower<sp/>case(e.g.<sp/>btn,<sp/>label<sp/>etc)</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEMPL<sp/>-&gt;<sp/>object<sp/>short<sp/>name<sp/>with<sp/>upper<sp/>case<sp/>(e.g.<sp/>BTN,<sp/>LABEL<sp/>etc.)</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>You<sp/>can<sp/>remove<sp/>the<sp/>defined()<sp/>clause<sp/>from<sp/>the<sp/>#if<sp/>statement<sp/>below.<sp/>This<sp/>exists<sp/>because</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>LV_USE_TEMPL<sp/>is<sp/>not<sp/>in<sp/>lv_conf.h<sp/>or<sp/>lv_conf_templ.h<sp/>by<sp/>default.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>INCLUDES</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&quot;lv_templ.h&quot;<sp/>/*TODO<sp/>uncomment<sp/>this*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(LV_USE_TEMPL)<sp/>&amp;&amp;<sp/>LV_USE_TEMPL<sp/>!=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>DEFINES</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>TYPEDEFS</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/>STATIC<sp/>PROTOTYPES</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lv_templ_design(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>templ,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>mask,<sp/><ref refid="lv__obj_8h_1a56836b6e5426fe0b9190a6adb32120c2" kindref="member">lv_design_mode_t</ref><sp/>mode);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="lv__types_8h_1a5c71f43250ed3699f40a8b634e342228" kindref="member">lv_res_t</ref><sp/>lv_templ_signal(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>templ,<sp/><ref refid="lv__obj_8h_1aaec725321f7abe33a79d04cdc91498ce" kindref="member">lv_signal_t</ref><sp/>sign,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>param);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/><sp/>STATIC<sp/>VARIABLES</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>lv_signal_func_t<sp/>ancestor_signal;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>lv_design_func_t<sp/>ancestor_design;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>MACROS</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/><sp/><sp/>GLOBAL<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>lv_templ_create(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>par,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>copy)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__log_8h_1a524d5f1e3687502a6c288bb5c136cf0c" kindref="member">LV_LOG_TRACE</ref>(</highlight><highlight class="stringliteral">&quot;template<sp/>create<sp/>started&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Create<sp/>the<sp/>ancestor<sp/>of<sp/>template*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*TODO<sp/>modify<sp/>it<sp/>to<sp/>the<sp/>ancestor<sp/>create<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>new_templ<sp/>=<sp/>lv_ANCESTOR_create(par,<sp/>copy);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__mem_8h_1a2600d9be0e0cffe1a8899ab69660c428" kindref="member">lv_mem_assert</ref>(new_templ);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(new_templ<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Allocate<sp/>the<sp/>template<sp/>type<sp/>specific<sp/>extended<sp/>data*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_templ_ext_t<sp/>*<sp/>ext<sp/>=<sp/><ref refid="lv__obj_8c_1aeb8dea7afde33b8851b8e3386c7314a4" kindref="member">lv_obj_allocate_ext_attr</ref>(new_templ,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(lv_templ_ext_t));</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__mem_8h_1a2600d9be0e0cffe1a8899ab69660c428" kindref="member">lv_mem_assert</ref>(ext);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ext<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ancestor_signal<sp/>==<sp/>NULL)<sp/>ancestor_signal<sp/>=<sp/>lv_obj_get_signal_func(new_templ);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ancestor_design<sp/>==<sp/>NULL)<sp/>ancestor_design<sp/>=<sp/>lv_obj_get_design_func(new_templ);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Initialize<sp/>the<sp/>allocated<sp/>&apos;ext&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>ext-&gt;xyz<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*The<sp/>signal<sp/>and<sp/>design<sp/>functions<sp/>are<sp/>not<sp/>copied<sp/>so<sp/>set<sp/>them<sp/>here*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_obj_set_signal_func(new_templ,<sp/>lv_templ_signal);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_obj_set_design_func(new_templ,<sp/>lv_templ_design);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Init<sp/>the<sp/>new<sp/>template<sp/>template*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(copy<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Copy<sp/>an<sp/>existing<sp/>template*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lv_templ_ext_t<sp/>*<sp/>copy_ext<sp/>=<sp/><ref refid="lv__obj_8c_1a0c06278b59453b3bfa04bd63981bca3b" kindref="member">lv_obj_get_ext_attr</ref>(copy);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Refresh<sp/>the<sp/>style<sp/>with<sp/>new<sp/>signal<sp/>function*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__obj_8c_1a35d75d3cd63a55ada122bbef8a79048f" kindref="member">lv_obj_refresh_style</ref>(new_templ);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__log_8h_1a016d37adec3fad7bc3358b32a895f944" kindref="member">LV_LOG_INFO</ref>(</highlight><highlight class="stringliteral">&quot;template<sp/>created&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_templ;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">/*======================</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/>Add/remove<sp/>functions</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*=====================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/>New<sp/>object<sp/>specific<sp/>&quot;add&quot;<sp/>or<sp/>&quot;remove&quot;<sp/>functions<sp/>come<sp/>here</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">/*=====================</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*<sp/>Setter<sp/>functions</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*====================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*<sp/>New<sp/>object<sp/>specific<sp/>&quot;set&quot;<sp/>functions<sp/>come<sp/>here</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lv_templ_set_style(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>templ,<sp/>lv_templ_style_t<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__style__t" kindref="compound">lv_style_t</ref><sp/>*<sp/>style)</highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_templ_ext_t<sp/>*<sp/>ext<sp/>=<sp/><ref refid="lv__obj_8c_1a0c06278b59453b3bfa04bd63981bca3b" kindref="member">lv_obj_get_ext_attr</ref>(templ);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(type)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LV_TEMPL_STYLE_X:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LV_TEMPL_STYLE_Y:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">/*=====================</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*<sp/>Getter<sp/>functions</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*====================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*<sp/>New<sp/>object<sp/>specific<sp/>&quot;get&quot;<sp/>functions<sp/>come<sp/>here</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><ref refid="structlv__style__t" kindref="compound">lv_style_t</ref><sp/>*<sp/>lv_templ_get_style(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>templ,<sp/>lv_templ_style_t<sp/>type)</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_templ_ext_t<sp/>*<sp/>ext<sp/>=<sp/><ref refid="lv__obj_8c_1a0c06278b59453b3bfa04bd63981bca3b" kindref="member">lv_obj_get_ext_attr</ref>(templ);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__style__t" kindref="compound">lv_style_t</ref><sp/>*<sp/>style<sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(type)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LV_TEMPL_STYLE_X:<sp/>style<sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">/*Replace<sp/>NULL<sp/>with<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>style*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LV_TEMPL_STYLE_Y:<sp/>style<sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">/*Replace<sp/>NULL<sp/>with<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>style*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>style<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>style;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">/*=====================</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/>*<sp/>Other<sp/>functions</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*====================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*<sp/>New<sp/>object<sp/>specific<sp/>&quot;other&quot;<sp/>functions<sp/>come<sp/>here</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*<sp/><sp/><sp/>STATIC<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lv_templ_design(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>templ,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>mask,<sp/><ref refid="lv__obj_8h_1a56836b6e5426fe0b9190a6adb32120c2" kindref="member">lv_design_mode_t</ref><sp/>mode)</highlight></codeline>
<codeline lineno="180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Return<sp/>false<sp/>if<sp/>the<sp/>object<sp/>is<sp/>not<sp/>covers<sp/>the<sp/>mask_p<sp/>area*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mode<sp/>==<sp/><ref refid="lv__obj_8h_1a99fb83031ce9923c84392b4e92f956b5a48e3eef6dffe9314f142ac9b38752c40" kindref="member">LV_DESIGN_COVER_CHK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Draw<sp/>the<sp/>object*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mode<sp/>==<sp/><ref refid="lv__obj_8h_1a99fb83031ce9923c84392b4e92f956b5a1f3afabd4deede77515858ad0308728c" kindref="member">LV_DESIGN_DRAW_MAIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Post<sp/>draw<sp/>when<sp/>the<sp/>children<sp/>are<sp/>drawn*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mode<sp/>==<sp/><ref refid="lv__obj_8h_1a99fb83031ce9923c84392b4e92f956b5a52e693710212c03f55ec0dd3927f1d2e" kindref="member">LV_DESIGN_DRAW_POST</ref>)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="lv__types_8h_1a5c71f43250ed3699f40a8b634e342228" kindref="member">lv_res_t</ref><sp/>lv_templ_signal(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>templ,<sp/><ref refid="lv__obj_8h_1aaec725321f7abe33a79d04cdc91498ce" kindref="member">lv_signal_t</ref><sp/>sign,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>param)</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__types_8h_1a5c71f43250ed3699f40a8b634e342228" kindref="member">lv_res_t</ref><sp/>res;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Include<sp/>the<sp/>ancient<sp/>signal<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>ancestor_signal(templ,<sp/>sign,<sp/>param);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(res<sp/>!=<sp/><ref refid="lv__types_8h_1a1f9aebf1de3ebbf4283a4dcf73308562a90ea5295fdbeeda6f5816f49204dd860" kindref="member">LV_RES_OK</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sign<sp/>==<sp/><ref refid="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06cadbc2556344c61af73876d1119e16ed39" kindref="member">LV_SIGNAL_CLEANUP</ref>)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Nothing<sp/>to<sp/>cleanup.<sp/>(No<sp/>dynamically<sp/>allocated<sp/>memory<sp/>in<sp/>&apos;ext&apos;)*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sign<sp/>==<sp/><ref refid="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06caa34afa204372de2536c237cf3ef9f706" kindref="member">LV_SIGNAL_GET_TYPE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlv__obj__type__t" kindref="compound">lv_obj_type_t</ref><sp/>*<sp/>buf<sp/>=<sp/>param;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>i;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="lv__obj_8h_1a928740e591ee641940bec3cb501e63e7" kindref="member">LV_MAX_ANCESTOR_NUM</ref><sp/>-<sp/>1;<sp/>i++)<sp/>{<sp/></highlight><highlight class="comment">/*Find<sp/>the<sp/>last<sp/>set<sp/>data*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(buf-&gt;<ref refid="structlv__obj__type__t_1ae24e59ffdb8f2e285b26a743b03f1469" kindref="member">type</ref>[i]<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf-&gt;<ref refid="structlv__obj__type__t_1ae24e59ffdb8f2e285b26a743b03f1469" kindref="member">type</ref>[i]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;lv_templ&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>this<sp/>file<sp/>at<sp/>the<sp/>top<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>dummy<sp/>typedef<sp/>exists<sp/>purely<sp/>to<sp/>silence<sp/>-Wpedantic.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lv__objx__templ_8c_1a2284aefddc9422ed19308d01cc492a1f" kindref="member">keep_pedantic_happy</ref>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_objx/lv_objx_templ.c"/>
  </compounddef>
</doxygen>
