<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="lv__spinbox_8c" kind="file" language="C++">
    <compoundname>lv_spinbox.c</compoundname>
    <includes refid="lv__spinbox_8h" local="yes">lv_spinbox.h</includes>
    <includes refid="lv__theme_8h" local="yes">../lv_themes/lv_theme.h</includes>
    <includes refid="lv__math_8h" local="yes">../lv_misc/lv_math.h</includes>
    <includes refid="lv__utils_8h" local="yes">../lv_misc/lv_utils.h</includes>
    <incdepgraph>
      <node id="5770">
        <label>lv_theme_mono.h</label>
        <link refid="lv__theme__mono_8h"/>
        <childnode refid="5726" relation="include">
        </childnode>
      </node>
      <node id="5729">
        <label>stdbool.h</label>
      </node>
      <node id="5733">
        <label>lv_symbol_def.h</label>
        <link refid="lv__symbol__def_8h"/>
        <childnode refid="5726" relation="include">
        </childnode>
      </node>
      <node id="5735">
        <label>../lv_misc/lv_area.h</label>
        <link refid="lv__area_8h"/>
        <childnode refid="5736" relation="include">
        </childnode>
        <childnode refid="5729" relation="include">
        </childnode>
        <childnode refid="5732" relation="include">
        </childnode>
        <childnode refid="5726" relation="include">
        </childnode>
      </node>
      <node id="5743">
        <label>lv_hal_disp.h</label>
        <link refid="lv__hal__disp_8h"/>
        <childnode refid="5732" relation="include">
        </childnode>
        <childnode refid="5729" relation="include">
        </childnode>
        <childnode refid="5742" relation="include">
        </childnode>
        <childnode refid="5734" relation="include">
        </childnode>
        <childnode refid="5735" relation="include">
        </childnode>
        <childnode refid="5741" relation="include">
        </childnode>
        <childnode refid="5744" relation="include">
        </childnode>
      </node>
      <node id="5753">
        <label>../lv_misc/lv_txt.h</label>
        <link refid="lv__txt_8h"/>
        <childnode refid="5726" relation="include">
        </childnode>
        <childnode refid="5729" relation="include">
        </childnode>
        <childnode refid="5735" relation="include">
        </childnode>
        <childnode refid="5731" relation="include">
        </childnode>
      </node>
      <node id="5763">
        <label>lv_draw_arc.h</label>
        <link refid="lv__draw__arc_8h"/>
        <childnode refid="5754" relation="include">
        </childnode>
      </node>
      <node id="5737">
        <label>../lv_misc/lv_anim.h</label>
        <link refid="lv__anim_8h"/>
        <childnode refid="5726" relation="include">
        </childnode>
        <childnode refid="5732" relation="include">
        </childnode>
        <childnode refid="5729" relation="include">
        </childnode>
        <childnode refid="5736" relation="include">
        </childnode>
      </node>
      <node id="5746">
        <label>lv_hal_tick.h</label>
        <link refid="lv__hal__tick_8h"/>
        <childnode refid="5726" relation="include">
        </childnode>
        <childnode refid="5732" relation="include">
        </childnode>
        <childnode refid="5729" relation="include">
        </childnode>
      </node>
      <node id="5732">
        <label>stdint.h</label>
      </node>
      <node id="5756">
        <label>../lv_misc/lv_fs.h</label>
        <link refid="lv__fs_8h"/>
        <childnode refid="5726" relation="include">
        </childnode>
        <childnode refid="5732" relation="include">
        </childnode>
        <childnode refid="5729" relation="include">
        </childnode>
        <childnode refid="5739" relation="include">
        </childnode>
      </node>
      <node id="5742">
        <label>../lv_hal/lv_hal.h</label>
        <link refid="lv__hal_8h"/>
        <childnode refid="5743" relation="include">
        </childnode>
        <childnode refid="5745" relation="include">
        </childnode>
        <childnode refid="5746" relation="include">
        </childnode>
      </node>
      <node id="5741">
        <label>../lv_misc/lv_ll.h</label>
        <link refid="lv__ll_8h"/>
        <childnode refid="5739" relation="include">
        </childnode>
        <childnode refid="5732" relation="include">
        </childnode>
        <childnode refid="5728" relation="include">
        </childnode>
        <childnode refid="5729" relation="include">
        </childnode>
      </node>
      <node id="5745">
        <label>lv_hal_indev.h</label>
        <link refid="lv__hal__indev_8h"/>
        <childnode refid="5726" relation="include">
        </childnode>
        <childnode refid="5729" relation="include">
        </childnode>
        <childnode refid="5732" relation="include">
        </childnode>
        <childnode refid="5735" relation="include">
        </childnode>
        <childnode refid="5744" relation="include">
        </childnode>
      </node>
      <node id="5748">
        <label>lv_page.h</label>
        <link refid="lv__page_8h"/>
        <childnode refid="5726" relation="include">
        </childnode>
        <childnode refid="5749" relation="include">
        </childnode>
        <childnode refid="5750" relation="include">
        </childnode>
        <childnode refid="5737" relation="include">
        </childnode>
      </node>
      <node id="5752">
        <label>lv_label.h</label>
        <link refid="lv__label_8h"/>
        <childnode refid="5726" relation="include">
        </childnode>
        <childnode refid="5727" relation="include">
        </childnode>
        <childnode refid="5731" relation="include">
        </childnode>
        <childnode refid="5733" relation="include">
        </childnode>
        <childnode refid="5753" relation="include">
        </childnode>
        <childnode refid="5754" relation="include">
        </childnode>
      </node>
      <node id="5730">
        <label>lv_style.h</label>
        <link refid="lv__style_8h"/>
        <childnode refid="5729" relation="include">
        </childnode>
        <childnode refid="5731" relation="include">
        </childnode>
        <childnode refid="5734" relation="include">
        </childnode>
        <childnode refid="5735" relation="include">
        </childnode>
        <childnode refid="5737" relation="include">
        </childnode>
      </node>
      <node id="5731">
        <label>../lv_font/lv_font.h</label>
        <link refid="lv__font_8h"/>
        <childnode refid="5726" relation="include">
        </childnode>
        <childnode refid="5732" relation="include">
        </childnode>
        <childnode refid="5728" relation="include">
        </childnode>
        <childnode refid="5729" relation="include">
        </childnode>
        <childnode refid="5733" relation="include">
        </childnode>
      </node>
      <node id="5751">
        <label>../lv_core/lv_group.h</label>
        <link refid="lv__group_8h"/>
        <childnode refid="5726" relation="include">
        </childnode>
        <childnode refid="5727" relation="include">
        </childnode>
      </node>
      <node id="5764">
        <label>../lv_themes/lv_theme.h</label>
        <link refid="lv__theme_8h"/>
        <childnode refid="5726" relation="include">
        </childnode>
        <childnode refid="5730" relation="include">
        </childnode>
        <childnode refid="5751" relation="include">
        </childnode>
        <childnode refid="5765" relation="include">
        </childnode>
        <childnode refid="5766" relation="include">
        </childnode>
        <childnode refid="5767" relation="include">
        </childnode>
        <childnode refid="5768" relation="include">
        </childnode>
        <childnode refid="5769" relation="include">
        </childnode>
        <childnode refid="5770" relation="include">
        </childnode>
        <childnode refid="5771" relation="include">
        </childnode>
        <childnode refid="5772" relation="include">
        </childnode>
      </node>
      <node id="5765">
        <label>lv_theme_templ.h</label>
        <link refid="lv__theme__templ_8h"/>
        <childnode refid="5726" relation="include">
        </childnode>
      </node>
      <node id="5727">
        <label>../lv_core/lv_obj.h</label>
        <link refid="lv__obj_8h"/>
        <childnode refid="5726" relation="include">
        </childnode>
        <childnode refid="5728" relation="include">
        </childnode>
        <childnode refid="5729" relation="include">
        </childnode>
        <childnode refid="5730" relation="include">
        </childnode>
        <childnode refid="5738" relation="include">
        </childnode>
        <childnode refid="5735" relation="include">
        </childnode>
        <childnode refid="5739" relation="include">
        </childnode>
        <childnode refid="5741" relation="include">
        </childnode>
        <childnode refid="5734" relation="include">
        </childnode>
        <childnode refid="5740" relation="include">
        </childnode>
        <childnode refid="5742" relation="include">
        </childnode>
      </node>
      <node id="5767">
        <label>lv_theme_alien.h</label>
        <link refid="lv__theme__alien_8h"/>
        <childnode refid="5726" relation="include">
        </childnode>
      </node>
      <node id="5728">
        <label>stddef.h</label>
      </node>
      <node id="5762">
        <label>lv_draw_triangle.h</label>
        <link refid="lv__draw__triangle_8h"/>
        <childnode refid="5754" relation="include">
        </childnode>
      </node>
      <node id="5747">
        <label>../lv_objx/lv_ta.h</label>
        <link refid="lv__ta_8h"/>
        <childnode refid="5726" relation="include">
        </childnode>
        <childnode refid="5727" relation="include">
        </childnode>
        <childnode refid="5748" relation="include">
        </childnode>
        <childnode refid="5752" relation="include">
        </childnode>
      </node>
      <node id="5726">
        <label>../../../lv_conf.h</label>
      </node>
      <node id="5754">
        <label>../lv_draw/lv_draw.h</label>
        <link refid="lv__draw_8h"/>
        <childnode refid="5726" relation="include">
        </childnode>
        <childnode refid="5730" relation="include">
        </childnode>
        <childnode refid="5753" relation="include">
        </childnode>
        <childnode refid="5755" relation="include">
        </childnode>
        <childnode refid="5757" relation="include">
        </childnode>
        <childnode refid="5758" relation="include">
        </childnode>
        <childnode refid="5759" relation="include">
        </childnode>
        <childnode refid="5760" relation="include">
        </childnode>
        <childnode refid="5761" relation="include">
        </childnode>
        <childnode refid="5762" relation="include">
        </childnode>
        <childnode refid="5763" relation="include">
        </childnode>
      </node>
      <node id="5744">
        <label>../lv_misc/lv_task.h</label>
        <link refid="lv__task_8h"/>
        <childnode refid="5726" relation="include">
        </childnode>
        <childnode refid="5732" relation="include">
        </childnode>
        <childnode refid="5729" relation="include">
        </childnode>
        <childnode refid="5739" relation="include">
        </childnode>
        <childnode refid="5741" relation="include">
        </childnode>
      </node>
      <node id="5758">
        <label>lv_draw_rect.h</label>
        <link refid="lv__draw__rect_8h"/>
        <childnode refid="5754" relation="include">
        </childnode>
      </node>
      <node id="5736">
        <label>string.h</label>
      </node>
      <node id="5769">
        <label>lv_theme_zen.h</label>
        <link refid="lv__theme__zen_8h"/>
        <childnode refid="5726" relation="include">
        </childnode>
      </node>
      <node id="5734">
        <label>../lv_misc/lv_color.h</label>
        <link refid="lv__color_8h"/>
        <childnode refid="5726" relation="include">
        </childnode>
        <childnode refid="5732" relation="include">
        </childnode>
      </node>
      <node id="5740">
        <label>lv_log.h</label>
        <link refid="lv__log_8h"/>
        <childnode refid="5726" relation="include">
        </childnode>
        <childnode refid="5732" relation="include">
        </childnode>
      </node>
      <node id="5760">
        <label>lv_draw_img.h</label>
        <link refid="lv__draw__img_8h"/>
        <childnode refid="5754" relation="include">
        </childnode>
        <childnode refid="5755" relation="include">
        </childnode>
      </node>
      <node id="5749">
        <label>lv_cont.h</label>
        <link refid="lv__cont_8h"/>
        <childnode refid="5726" relation="include">
        </childnode>
        <childnode refid="5727" relation="include">
        </childnode>
      </node>
      <node id="5766">
        <label>lv_theme_default.h</label>
        <link refid="lv__theme__default_8h"/>
        <childnode refid="5726" relation="include">
        </childnode>
      </node>
      <node id="5772">
        <label>lv_theme_material.h</label>
        <link refid="lv__theme__material_8h"/>
        <childnode refid="5726" relation="include">
        </childnode>
      </node>
      <node id="5755">
        <label>lv_img_decoder.h</label>
        <link refid="lv__img__decoder_8h"/>
        <childnode refid="5726" relation="include">
        </childnode>
        <childnode refid="5732" relation="include">
        </childnode>
        <childnode refid="5756" relation="include">
        </childnode>
        <childnode refid="5738" relation="include">
        </childnode>
        <childnode refid="5735" relation="include">
        </childnode>
        <childnode refid="5730" relation="include">
        </childnode>
      </node>
      <node id="5724">
        <label>/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_objx/lv_spinbox.c</label>
        <link refid="lv__spinbox_8c"/>
        <childnode refid="5725" relation="include">
        </childnode>
        <childnode refid="5764" relation="include">
        </childnode>
        <childnode refid="5773" relation="include">
        </childnode>
        <childnode refid="5774" relation="include">
        </childnode>
      </node>
      <node id="5725">
        <label>lv_spinbox.h</label>
        <link refid="lv__spinbox_8h"/>
        <childnode refid="5726" relation="include">
        </childnode>
        <childnode refid="5727" relation="include">
        </childnode>
        <childnode refid="5747" relation="include">
        </childnode>
      </node>
      <node id="5768">
        <label>lv_theme_night.h</label>
        <link refid="lv__theme__night_8h"/>
        <childnode refid="5726" relation="include">
        </childnode>
      </node>
      <node id="5773">
        <label>../lv_misc/lv_math.h</label>
        <link refid="lv__math_8h"/>
        <childnode refid="5732" relation="include">
        </childnode>
      </node>
      <node id="5757">
        <label>lv_draw_basic.h</label>
        <link refid="lv__draw__basic_8h"/>
        <childnode refid="5726" relation="include">
        </childnode>
        <childnode refid="5731" relation="include">
        </childnode>
        <childnode refid="5734" relation="include">
        </childnode>
        <childnode refid="5735" relation="include">
        </childnode>
      </node>
      <node id="5738">
        <label>../lv_misc/lv_types.h</label>
        <link refid="lv__types_8h"/>
      </node>
      <node id="5774">
        <label>../lv_misc/lv_utils.h</label>
        <link refid="lv__utils_8h"/>
        <childnode refid="5732" relation="include">
        </childnode>
        <childnode refid="5728" relation="include">
        </childnode>
      </node>
      <node id="5761">
        <label>lv_draw_line.h</label>
        <link refid="lv__draw__line_8h"/>
      </node>
      <node id="5759">
        <label>lv_draw_label.h</label>
        <link refid="lv__draw__label_8h"/>
        <childnode refid="5754" relation="include">
        </childnode>
      </node>
      <node id="5750">
        <label>../lv_core/lv_indev.h</label>
        <link refid="lv__indev_8h"/>
        <childnode refid="5727" relation="include">
        </childnode>
        <childnode refid="5745" relation="include">
        </childnode>
        <childnode refid="5751" relation="include">
        </childnode>
      </node>
      <node id="5771">
        <label>lv_theme_nemo.h</label>
        <link refid="lv__theme__nemo_8h"/>
        <childnode refid="5726" relation="include">
        </childnode>
      </node>
      <node id="5739">
        <label>../lv_misc/lv_mem.h</label>
        <link refid="lv__mem_8h"/>
        <childnode refid="5726" relation="include">
        </childnode>
        <childnode refid="5732" relation="include">
        </childnode>
        <childnode refid="5728" relation="include">
        </childnode>
        <childnode refid="5740" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="lv__spinbox_8c_1a2bca8383f5316aeadeb5cbb00d8c2222" prot="public" static="yes" mutable="no">
        <type><ref refid="lv__obj_8h_1a5277b3d9138e4423e14e45b4f2a3b4c2" kindref="member">lv_signal_cb_t</ref></type>
        <definition>lv_signal_cb_t ancestor_signal</definition>
        <argsstring></argsstring>
        <name>ancestor_signal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_objx/lv_spinbox.c" line="33" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_objx/lv_spinbox.c" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="lv__spinbox_8c_1ada8bdd45eaf11cf4bd5ec175cb262f73" prot="public" static="yes" mutable="no">
        <type><ref refid="lv__obj_8h_1a8589c55e59ae3d8b9125911bf4f28362" kindref="member">lv_design_cb_t</ref></type>
        <definition>lv_design_cb_t ancestor_design</definition>
        <argsstring></argsstring>
        <name>ancestor_design</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_objx/lv_spinbox.c" line="34" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_objx/lv_spinbox.c" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="lv__spinbox_8c_1a53882c38acb12bcaa271c8aee3766f87" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lv__types_8h_1a5c71f43250ed3699f40a8b634e342228" kindref="member">lv_res_t</ref></type>
        <definition>static lv_res_t lv_spinbox_signal</definition>
        <argsstring>(lv_obj_t *spinbox, lv_signal_t sign, void *param)</argsstring>
        <name>lv_spinbox_signal</name>
        <param>
          <type><ref refid="lv__obj_8h_1a38023c894dabf8ae85bf86aa79981ceb" kindref="member">lv_obj_t</ref> *</type>
          <declname>spinbox</declname>
        </param>
        <param>
          <type><ref refid="lv__obj_8h_1aaec725321f7abe33a79d04cdc91498ce" kindref="member">lv_signal_t</ref></type>
          <declname>sign</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Signal function of the spinbox <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spinbox</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a spinbox object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sign</parametername>
</parameternamelist>
<parameterdescription>
<para>a signal type from lv_signal_t enum </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a signal specific variable </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>LV_RES_OK: the object is not deleted in the function; LV_RES_INV: the object is deleted </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_objx/lv_spinbox.c" line="27" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_objx/lv_spinbox.c" bodystart="307" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="lv__spinbox_8c_1a4f8df3d91b862f33899fb01fcb4a2e1d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void lv_spinbox_updatevalue</definition>
        <argsstring>(lv_obj_t *spinbox)</argsstring>
        <name>lv_spinbox_updatevalue</name>
        <param>
          <type><ref refid="lv__obj_8h_1a38023c894dabf8ae85bf86aa79981ceb" kindref="member">lv_obj_t</ref> *</type>
          <declname>spinbox</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_objx/lv_spinbox.c" line="28" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_objx/lv_spinbox.c" bodystart="375" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="lv__spinbox_8c_1a3be387e9a81afe2e5e4a027e5ebcd4ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lv__obj_8h_1a38023c894dabf8ae85bf86aa79981ceb" kindref="member">lv_obj_t</ref> *</type>
        <definition>lv_obj_t* lv_spinbox_create</definition>
        <argsstring>(lv_obj_t *par, const lv_obj_t *copy)</argsstring>
        <name>lv_spinbox_create</name>
        <param>
          <type><ref refid="lv__obj_8h_1a38023c894dabf8ae85bf86aa79981ceb" kindref="member">lv_obj_t</ref> *</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const <ref refid="lv__obj_8h_1a38023c894dabf8ae85bf86aa79981ceb" kindref="member">lv_obj_t</ref> *</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a spinbox object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object, it will be the parent of the new spinbox </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>copy</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a spinbox object, if not NULL then the new object will be copied from it </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the created spinbox </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_objx/lv_spinbox.c" line="50" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_objx/lv_spinbox.c" bodystart="50" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="lv__spinbox_8c_1a596c05f521026b722a06c3314ffdd824" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_spinbox_set_value</definition>
        <argsstring>(lv_obj_t *spinbox, int32_t i)</argsstring>
        <name>lv_spinbox_set_value</name>
        <param>
          <type><ref refid="lv__obj_8h_1a38023c894dabf8ae85bf86aa79981ceb" kindref="member">lv_obj_t</ref> *</type>
          <declname>spinbox</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set spinbox value <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spinbox</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to spinbox </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>value to be set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_objx/lv_spinbox.c" line="121" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_objx/lv_spinbox.c" bodystart="121" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="lv__spinbox_8c_1aa7e92d5294f1ba7150da3ecc1516f760" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_spinbox_set_digit_format</definition>
        <argsstring>(lv_obj_t *spinbox, uint8_t digit_count, uint8_t separator_position)</argsstring>
        <name>lv_spinbox_set_digit_format</name>
        <param>
          <type><ref refid="lv__obj_8h_1a38023c894dabf8ae85bf86aa79981ceb" kindref="member">lv_obj_t</ref> *</type>
          <declname>spinbox</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>digit_count</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>separator_position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set spinbox digit format (digit count and decimal format) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spinbox</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to spinbox </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>digit_count</parametername>
</parameternamelist>
<parameterdescription>
<para>number of digit excluding the decimal separator and the sign </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>separator_position</parametername>
</parameternamelist>
<parameterdescription>
<para>number of digit before the decimal point. If 0, decimal point is not shown </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_objx/lv_spinbox.c" line="141" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_objx/lv_spinbox.c" bodystart="141" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="lv__spinbox_8c_1a3c38ae3f6dd3f596ed3963bd0b2d872f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_spinbox_set_step</definition>
        <argsstring>(lv_obj_t *spinbox, uint32_t step)</argsstring>
        <name>lv_spinbox_set_step</name>
        <param>
          <type><ref refid="lv__obj_8h_1a38023c894dabf8ae85bf86aa79981ceb" kindref="member">lv_obj_t</ref> *</type>
          <declname>spinbox</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set spinbox step <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spinbox</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to spinbox </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>step</parametername>
</parameternamelist>
<parameterdescription>
<para>steps on increment/decrement </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_objx/lv_spinbox.c" line="161" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_objx/lv_spinbox.c" bodystart="161" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="lv__spinbox_8c_1ab308848003544c0fc54505ae1ed7cea7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_spinbox_set_range</definition>
        <argsstring>(lv_obj_t *spinbox, int32_t range_min, int32_t range_max)</argsstring>
        <name>lv_spinbox_set_range</name>
        <param>
          <type><ref refid="lv__obj_8h_1a38023c894dabf8ae85bf86aa79981ceb" kindref="member">lv_obj_t</ref> *</type>
          <declname>spinbox</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>range_min</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>range_max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set spinbox value range <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spinbox</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to spinbox </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range_min</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value, inclusive </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range_max</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value, inclusive </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_objx/lv_spinbox.c" line="175" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_objx/lv_spinbox.c" bodystart="175" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="lv__spinbox_8c_1aa2235aa2900d41f1d8e1973dae9f9fed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_spinbox_set_padding_left</definition>
        <argsstring>(lv_obj_t *spinbox, uint8_t padding)</argsstring>
        <name>lv_spinbox_set_padding_left</name>
        <param>
          <type><ref refid="lv__obj_8h_1a38023c894dabf8ae85bf86aa79981ceb" kindref="member">lv_obj_t</ref> *</type>
          <declname>spinbox</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set spinbox left padding in digits count (added between sign and first digit) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spinbox</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to spinbox </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback function called on value change event </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_objx/lv_spinbox.c" line="198" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_objx/lv_spinbox.c" bodystart="198" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="lv__spinbox_8c_1a85347e74e9cd4ff203244448c5b483a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t lv_spinbox_get_value</definition>
        <argsstring>(lv_obj_t *spinbox)</argsstring>
        <name>lv_spinbox_get_value</name>
        <param>
          <type><ref refid="lv__obj_8h_1a38023c894dabf8ae85bf86aa79981ceb" kindref="member">lv_obj_t</ref> *</type>
          <declname>spinbox</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the spinbox numeral value (user has to convert to float according to its digit format) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spinbox</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to spinbox </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>value integer value of the spinbox </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_objx/lv_spinbox.c" line="214" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_objx/lv_spinbox.c" bodystart="214" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="lv__spinbox_8c_1a4ba35a86d06bf4af1b1abee5ebab4f4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_spinbox_step_next</definition>
        <argsstring>(lv_obj_t *spinbox)</argsstring>
        <name>lv_spinbox_step_next</name>
        <param>
          <type><ref refid="lv__obj_8h_1a38023c894dabf8ae85bf86aa79981ceb" kindref="member">lv_obj_t</ref> *</type>
          <declname>spinbox</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Select next lower digit for edition by dividing the step by 10 <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spinbox</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to spinbox </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_objx/lv_spinbox.c" line="229" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_objx/lv_spinbox.c" bodystart="229" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="lv__spinbox_8c_1ac444998d2d61ce2c0e634cf57e3c1e9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_spinbox_step_previous</definition>
        <argsstring>(lv_obj_t *spinbox)</argsstring>
        <name>lv_spinbox_step_previous</name>
        <param>
          <type><ref refid="lv__obj_8h_1a38023c894dabf8ae85bf86aa79981ceb" kindref="member">lv_obj_t</ref> *</type>
          <declname>spinbox</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Select next higher digit for edition by multiplying the step by 10 <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spinbox</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to spinbox </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_objx/lv_spinbox.c" line="246" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_objx/lv_spinbox.c" bodystart="246" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="lv__spinbox_8c_1abf28619a10f48ccfcb736b51b9ee5e46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_spinbox_increment</definition>
        <argsstring>(lv_obj_t *spinbox)</argsstring>
        <name>lv_spinbox_increment</name>
        <param>
          <type><ref refid="lv__obj_8h_1a38023c894dabf8ae85bf86aa79981ceb" kindref="member">lv_obj_t</ref> *</type>
          <declname>spinbox</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Increment spinbox value by one step <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spinbox</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to spinbox </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_objx/lv_spinbox.c" line="261" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_objx/lv_spinbox.c" bodystart="261" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="lv__spinbox_8c_1ad5971885a5b53fc67b46b82c27b43a4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_spinbox_decrement</definition>
        <argsstring>(lv_obj_t *spinbox)</argsstring>
        <name>lv_spinbox_decrement</name>
        <param>
          <type><ref refid="lv__obj_8h_1a38023c894dabf8ae85bf86aa79981ceb" kindref="member">lv_obj_t</ref> *</type>
          <declname>spinbox</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Decrement spinbox value by one step <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spinbox</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to spinbox </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_objx/lv_spinbox.c" line="281" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_objx/lv_spinbox.c" bodystart="281" bodyend="294"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>INCLUDES</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lv__spinbox_8h" kindref="compound">lv_spinbox.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_USE_SPINBOX<sp/>!=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_themes/lv_theme.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_misc/lv_math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_misc/lv_utils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>DEFINES</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>TYPEDEFS</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/>STATIC<sp/>PROTOTYPES</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="lv__types_8h_1a5c71f43250ed3699f40a8b634e342228" kindref="member">lv_res_t</ref><sp/>lv_spinbox_signal(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>spinbox,<sp/><ref refid="lv__obj_8h_1aaec725321f7abe33a79d04cdc91498ce" kindref="member">lv_signal_t</ref><sp/>sign,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>param);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lv_spinbox_updatevalue(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>spinbox);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/>STATIC<sp/>VARIABLES</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a5277b3d9138e4423e14e45b4f2a3b4c2" kindref="member">lv_signal_cb_t</ref><sp/>ancestor_signal;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a8589c55e59ae3d8b9125911bf4f28362" kindref="member">lv_design_cb_t</ref><sp/>ancestor_design;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>MACROS</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/><sp/><sp/>GLOBAL<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/><ref refid="lv__spinbox_8c_1a3be387e9a81afe2e5e4a027e5ebcd4ba" kindref="member">lv_spinbox_create</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>par,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>copy)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__log_8h_1a524d5f1e3687502a6c288bb5c136cf0c" kindref="member">LV_LOG_TRACE</ref>(</highlight><highlight class="stringliteral">&quot;spinbox<sp/>create<sp/>started&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Create<sp/>the<sp/>ancestor<sp/>of<sp/>spinbox*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>new_spinbox<sp/>=<sp/><ref refid="lv__ta_8c_1ae641aaf6cc431cddb56e1f1f8b839735" kindref="member">lv_ta_create</ref>(par,<sp/>copy);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__mem_8h_1a2600d9be0e0cffe1a8899ab69660c428" kindref="member">lv_mem_assert</ref>(new_spinbox);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(new_spinbox<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Allocate<sp/>the<sp/>spinbox<sp/>type<sp/>specific<sp/>extended<sp/>data*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__spinbox__ext__t" kindref="compound">lv_spinbox_ext_t</ref><sp/>*<sp/>ext<sp/>=<sp/><ref refid="lv__obj_8c_1aeb8dea7afde33b8851b8e3386c7314a4" kindref="member">lv_obj_allocate_ext_attr</ref>(new_spinbox,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structlv__spinbox__ext__t" kindref="compound">lv_spinbox_ext_t</ref>));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__mem_8h_1a2600d9be0e0cffe1a8899ab69660c428" kindref="member">lv_mem_assert</ref>(ext);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ext<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ancestor_signal<sp/>==<sp/>NULL)<sp/>ancestor_signal<sp/>=<sp/><ref refid="lv__obj_8c_1ad1b1dc4d61fd765cfd8958254af36b29" kindref="member">lv_obj_get_signal_cb</ref>(new_spinbox);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ancestor_design<sp/>==<sp/>NULL)<sp/>ancestor_design<sp/>=<sp/><ref refid="lv__obj_8c_1a5bafa0af4ab8c37e722cb8c65da04131" kindref="member">lv_obj_get_design_cb</ref>(new_spinbox);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Initialize<sp/>the<sp/>allocated<sp/>&apos;ext&apos;*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2a1be1a5e637fbbb873ddce337c485c3" kindref="member">value</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1accecf8d7c98b2d4ffc6a7da93c52ee94" kindref="member">dec_point_pos</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a0e9357de3fa46cd05e59a43b4cab7f67" kindref="member">digit_count</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1adb61f0ebf5c0a728cc1739733e3dbc07" kindref="member">digit_padding_left</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a0e8b850af6e27fa038cf0075c056ecbb" kindref="member">step</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2ed345ed52f555466060cb3e2e50be5c" kindref="member">range_max</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>99999;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2db2a6dc923e5fdeb18d85491cf165ee" kindref="member">range_min</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-99999;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__ta_8c_1a52654ba16955368c74de05367b4db9e7" kindref="member">lv_ta_set_cursor_type</ref>(new_spinbox,<sp/><ref refid="lv__ta_8h_1aa57e16cd48de3b9a989056ff8df26f84ac45af5be6dd346e5071e21b582c8e4ae" kindref="member">LV_CURSOR_BLOCK</ref><sp/>|<sp/><ref refid="lv__ta_8h_1aa57e16cd48de3b9a989056ff8df26f84aa97006ac18d16e07c3ef51c598b71d8d" kindref="member">LV_CURSOR_HIDDEN</ref>);<sp/></highlight><highlight class="comment">/*hidden<sp/>by<sp/>default*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__ta_8c_1a2d30e71ae26e143cc7a08e12b6fae214" kindref="member">lv_ta_set_one_line</ref>(new_spinbox,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*The<sp/>signal<sp/>and<sp/>design<sp/>functions<sp/>are<sp/>not<sp/>copied<sp/>so<sp/>set<sp/>them<sp/>here*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8c_1a9b15e80bc5b1fa338dcec4eab720796b" kindref="member">lv_obj_set_signal_cb</ref>(new_spinbox,<sp/>lv_spinbox_signal);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8c_1aa97d824b977176ad1d8eb1b9e1675e0f" kindref="member">lv_obj_set_design_cb</ref>(new_spinbox,<sp/>ancestor_design);<sp/></highlight><highlight class="comment">/*Leave<sp/>the<sp/>Text<sp/>area&apos;s<sp/>design<sp/>function*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Init<sp/>the<sp/>new<sp/>spinbox<sp/>spinbox*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(copy<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Set<sp/>the<sp/>default<sp/>styles*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlv__theme__t" kindref="compound">lv_theme_t</ref><sp/>*<sp/>th<sp/>=<sp/><ref refid="lv__theme_8c_1a003fda4ba8c0ec6982186f943fb2f4dd" kindref="member">lv_theme_get_current</ref>();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(th)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lv_spinbox_set_style(new_spinbox,<sp/><ref refid="lv__spinbox_8h_1aa491173a6b1628f4ff82067b2e1ceaa9a26d51169021df503a29a755bfb57d358" kindref="member">LV_SPINBOX_STYLE_BG</ref>,<sp/>th-&gt;<ref refid="structlv__theme__t_1adebd0d6110232d987affe33d02930c3e" kindref="member">style</ref>.<ref refid="structlv__theme__t_1a3db35efb79d5f3aa10d085145c25190f" kindref="member">spinbox</ref>.bg);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lv_spinbox_set_style(new_spinbox,<sp/><ref refid="lv__spinbox_8h_1aa491173a6b1628f4ff82067b2e1ceaa9a2886d0b05c23404acd81dc7fe8539209" kindref="member">LV_SPINBOX_STYLE_CURSOR</ref>,<sp/>th-&gt;<ref refid="structlv__theme__t_1adebd0d6110232d987affe33d02930c3e" kindref="member">style</ref>.<ref refid="structlv__theme__t_1a3db35efb79d5f3aa10d085145c25190f" kindref="member">spinbox</ref>.cursor);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lv_spinbox_set_style(new_spinbox,<sp/><ref refid="lv__spinbox_8h_1aa491173a6b1628f4ff82067b2e1ceaa9a54359299e94b55e4d0c9076c6d45d62e" kindref="member">LV_SPINBOX_STYLE_SB</ref>,<sp/>th-&gt;<ref refid="structlv__theme__t_1adebd0d6110232d987affe33d02930c3e" kindref="member">style</ref>.<ref refid="structlv__theme__t_1a3db35efb79d5f3aa10d085145c25190f" kindref="member">spinbox</ref>.sb);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Copy<sp/>an<sp/>existing<sp/>spinbox*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlv__spinbox__ext__t" kindref="compound">lv_spinbox_ext_t</ref><sp/>*<sp/>copy_ext<sp/>=<sp/><ref refid="lv__obj_8c_1a0c06278b59453b3bfa04bd63981bca3b" kindref="member">lv_obj_get_ext_attr</ref>(copy);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__spinbox_8c_1a596c05f521026b722a06c3314ffdd824" kindref="member">lv_spinbox_set_value</ref>(new_spinbox,<sp/>copy_ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2a1be1a5e637fbbb873ddce337c485c3" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__spinbox_8c_1aa7e92d5294f1ba7150da3ecc1516f760" kindref="member">lv_spinbox_set_digit_format</ref>(new_spinbox,<sp/>copy_ext-&gt;<ref refid="structlv__spinbox__ext__t_1a0e9357de3fa46cd05e59a43b4cab7f67" kindref="member">digit_count</ref>,<sp/>copy_ext-&gt;<ref refid="structlv__spinbox__ext__t_1accecf8d7c98b2d4ffc6a7da93c52ee94" kindref="member">dec_point_pos</ref>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__spinbox_8c_1ab308848003544c0fc54505ae1ed7cea7" kindref="member">lv_spinbox_set_range</ref>(new_spinbox,<sp/>copy_ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2db2a6dc923e5fdeb18d85491cf165ee" kindref="member">range_min</ref>,<sp/>copy_ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2ed345ed52f555466060cb3e2e50be5c" kindref="member">range_max</ref>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__spinbox_8c_1a3c38ae3f6dd3f596ed3963bd0b2d872f" kindref="member">lv_spinbox_set_step</ref>(new_spinbox,<sp/>copy_ext-&gt;<ref refid="structlv__spinbox__ext__t_1a0e8b850af6e27fa038cf0075c056ecbb" kindref="member">step</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Refresh<sp/>the<sp/>style<sp/>with<sp/>new<sp/>signal<sp/>function*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__obj_8c_1a35d75d3cd63a55ada122bbef8a79048f" kindref="member">lv_obj_refresh_style</ref>(new_spinbox);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_spinbox_updatevalue(new_spinbox);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__log_8h_1a016d37adec3fad7bc3358b32a895f944" kindref="member">LV_LOG_INFO</ref>(</highlight><highlight class="stringliteral">&quot;spinbox<sp/>created&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_spinbox;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">/*=====================</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*<sp/>Setter<sp/>functions</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*====================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__spinbox_8c_1a596c05f521026b722a06c3314ffdd824" kindref="member">lv_spinbox_set_value</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>spinbox,<sp/>int32_t<sp/>i)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__spinbox__ext__t" kindref="compound">lv_spinbox_ext_t</ref><sp/>*<sp/>ext<sp/>=<sp/><ref refid="lv__obj_8c_1a0c06278b59453b3bfa04bd63981bca3b" kindref="member">lv_obj_get_ext_attr</ref>(spinbox);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ext<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>&gt;<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2ed345ed52f555466060cb3e2e50be5c" kindref="member">range_max</ref>)<sp/>i<sp/>=<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2ed345ed52f555466060cb3e2e50be5c" kindref="member">range_max</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>&lt;<sp/>ext-&gt;range_min)<sp/>i<sp/>=<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2db2a6dc923e5fdeb18d85491cf165ee" kindref="member">range_min</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2a1be1a5e637fbbb873ddce337c485c3" kindref="member">value</ref><sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_spinbox_updatevalue(spinbox);</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__spinbox_8c_1aa7e92d5294f1ba7150da3ecc1516f760" kindref="member">lv_spinbox_set_digit_format</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>spinbox,<sp/>uint8_t<sp/>digit_count,<sp/>uint8_t<sp/>separator_position)</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__spinbox__ext__t" kindref="compound">lv_spinbox_ext_t</ref><sp/>*<sp/>ext<sp/>=<sp/><ref refid="lv__obj_8c_1a0c06278b59453b3bfa04bd63981bca3b" kindref="member">lv_obj_get_ext_attr</ref>(spinbox);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ext<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(digit_count<sp/>&gt;<sp/><ref refid="lv__spinbox_8h_1aea12cb3c5dad7f59c6096405564945b2" kindref="member">LV_SPINBOX_MAX_DIGIT_COUNT</ref>)<sp/>digit_count<sp/>=<sp/><ref refid="lv__spinbox_8h_1aea12cb3c5dad7f59c6096405564945b2" kindref="member">LV_SPINBOX_MAX_DIGIT_COUNT</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(separator_position<sp/>&gt;<sp/><ref refid="lv__spinbox_8h_1aea12cb3c5dad7f59c6096405564945b2" kindref="member">LV_SPINBOX_MAX_DIGIT_COUNT</ref>)<sp/>separator_position<sp/>=<sp/><ref refid="lv__spinbox_8h_1aea12cb3c5dad7f59c6096405564945b2" kindref="member">LV_SPINBOX_MAX_DIGIT_COUNT</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a0e9357de3fa46cd05e59a43b4cab7f67" kindref="member">digit_count</ref><sp/><sp/><sp/>=<sp/>digit_count;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1accecf8d7c98b2d4ffc6a7da93c52ee94" kindref="member">dec_point_pos</ref><sp/>=<sp/>separator_position;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_spinbox_updatevalue(spinbox);</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__spinbox_8c_1a3c38ae3f6dd3f596ed3963bd0b2d872f" kindref="member">lv_spinbox_set_step</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>spinbox,<sp/>uint32_t<sp/>step)</highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__spinbox__ext__t" kindref="compound">lv_spinbox_ext_t</ref><sp/>*<sp/>ext<sp/>=<sp/><ref refid="lv__obj_8c_1a0c06278b59453b3bfa04bd63981bca3b" kindref="member">lv_obj_get_ext_attr</ref>(spinbox);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ext<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a0e8b850af6e27fa038cf0075c056ecbb" kindref="member">step</ref><sp/>=<sp/>step;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__spinbox_8c_1ab308848003544c0fc54505ae1ed7cea7" kindref="member">lv_spinbox_set_range</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>spinbox,<sp/>int32_t<sp/>range_min,<sp/>int32_t<sp/>range_max)</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__spinbox__ext__t" kindref="compound">lv_spinbox_ext_t</ref><sp/>*<sp/>ext<sp/>=<sp/><ref refid="lv__obj_8c_1a0c06278b59453b3bfa04bd63981bca3b" kindref="member">lv_obj_get_ext_attr</ref>(spinbox);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ext<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2ed345ed52f555466060cb3e2e50be5c" kindref="member">range_max</ref><sp/>=<sp/>range_max;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2db2a6dc923e5fdeb18d85491cf165ee" kindref="member">range_min</ref><sp/>=<sp/>range_min;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2a1be1a5e637fbbb873ddce337c485c3" kindref="member">value</ref><sp/>&gt;<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2ed345ed52f555466060cb3e2e50be5c" kindref="member">range_max</ref>)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2a1be1a5e637fbbb873ddce337c485c3" kindref="member">value</ref><sp/>=<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2ed345ed52f555466060cb3e2e50be5c" kindref="member">range_max</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__obj_8c_1aad66ca3c74dbc0c194bd5135fa18d033" kindref="member">lv_obj_invalidate</ref>(spinbox);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2a1be1a5e637fbbb873ddce337c485c3" kindref="member">value</ref><sp/>&lt;<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2db2a6dc923e5fdeb18d85491cf165ee" kindref="member">range_min</ref>)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2a1be1a5e637fbbb873ddce337c485c3" kindref="member">value</ref><sp/>=<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2db2a6dc923e5fdeb18d85491cf165ee" kindref="member">range_min</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__obj_8c_1aad66ca3c74dbc0c194bd5135fa18d033" kindref="member">lv_obj_invalidate</ref>(spinbox);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__spinbox_8c_1aa2235aa2900d41f1d8e1973dae9f9fed" kindref="member">lv_spinbox_set_padding_left</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>spinbox,<sp/>uint8_t<sp/>padding)</highlight></codeline>
<codeline lineno="199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__spinbox__ext__t" kindref="compound">lv_spinbox_ext_t</ref><sp/>*<sp/>ext<sp/><sp/>=<sp/><ref refid="lv__obj_8c_1a0c06278b59453b3bfa04bd63981bca3b" kindref="member">lv_obj_get_ext_attr</ref>(spinbox);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1adb61f0ebf5c0a728cc1739733e3dbc07" kindref="member">digit_padding_left</ref><sp/>=<sp/>padding;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_spinbox_updatevalue(spinbox);</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">/*=====================</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*<sp/>Getter<sp/>functions</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>*====================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal">int32_t<sp/><ref refid="lv__spinbox_8c_1a85347e74e9cd4ff203244448c5b483a6" kindref="member">lv_spinbox_get_value</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>spinbox)</highlight></codeline>
<codeline lineno="215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__spinbox__ext__t" kindref="compound">lv_spinbox_ext_t</ref><sp/>*<sp/>ext<sp/>=<sp/><ref refid="lv__obj_8c_1a0c06278b59453b3bfa04bd63981bca3b" kindref="member">lv_obj_get_ext_attr</ref>(spinbox);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2a1be1a5e637fbbb873ddce337c485c3" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment">/*=====================</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/>*<sp/>Other<sp/>functions</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*====================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__spinbox_8c_1a4ba35a86d06bf4af1b1abee5ebab4f4a" kindref="member">lv_spinbox_step_next</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>spinbox)</highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__spinbox__ext__t" kindref="compound">lv_spinbox_ext_t</ref><sp/>*<sp/>ext<sp/>=<sp/><ref refid="lv__obj_8c_1a0c06278b59453b3bfa04bd63981bca3b" kindref="member">lv_obj_get_ext_attr</ref>(spinbox);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>new_step<sp/>=<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a0e8b850af6e27fa038cf0075c056ecbb" kindref="member">step</ref><sp/>/<sp/>10;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((new_step)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a0e8b850af6e27fa038cf0075c056ecbb" kindref="member">step</ref><sp/>=<sp/>new_step;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a0e8b850af6e27fa038cf0075c056ecbb" kindref="member">step</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_spinbox_updatevalue(spinbox);</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__spinbox_8c_1ac444998d2d61ce2c0e634cf57e3c1e9b" kindref="member">lv_spinbox_step_previous</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>spinbox)</highlight></codeline>
<codeline lineno="247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__spinbox__ext__t" kindref="compound">lv_spinbox_ext_t</ref><sp/>*<sp/>ext<sp/>=<sp/><ref refid="lv__obj_8c_1a0c06278b59453b3bfa04bd63981bca3b" kindref="member">lv_obj_get_ext_attr</ref>(spinbox);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>step_limit;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>step_limit<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="lv__math_8h_1ae532fd7eb3f50c685401c8ddc49755aa" kindref="member">LV_MATH_MAX</ref>(ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2ed345ed52f555466060cb3e2e50be5c" kindref="member">range_max</ref>,<sp/>(ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2db2a6dc923e5fdeb18d85491cf165ee" kindref="member">range_min</ref><sp/>&lt;<sp/>0<sp/>?<sp/>(-ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2db2a6dc923e5fdeb18d85491cf165ee" kindref="member">range_min</ref>)<sp/>:<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2db2a6dc923e5fdeb18d85491cf165ee" kindref="member">range_min</ref>));</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>new_step<sp/>=<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a0e8b850af6e27fa038cf0075c056ecbb" kindref="member">step</ref><sp/>*<sp/>10;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(new_step<sp/>&lt;=<sp/>step_limit)<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a0e8b850af6e27fa038cf0075c056ecbb" kindref="member">step</ref><sp/>=<sp/>new_step;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_spinbox_updatevalue(spinbox);</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__spinbox_8c_1abf28619a10f48ccfcb736b51b9ee5e46" kindref="member">lv_spinbox_increment</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>spinbox)</highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__spinbox__ext__t" kindref="compound">lv_spinbox_ext_t</ref><sp/>*<sp/>ext<sp/>=<sp/><ref refid="lv__obj_8c_1a0c06278b59453b3bfa04bd63981bca3b" kindref="member">lv_obj_get_ext_attr</ref>(spinbox);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2a1be1a5e637fbbb873ddce337c485c3" kindref="member">value</ref><sp/>+<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a0e8b850af6e27fa038cf0075c056ecbb" kindref="member">step</ref><sp/>&lt;=<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2ed345ed52f555466060cb3e2e50be5c" kindref="member">range_max</ref>)<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Special<sp/>mode<sp/>when<sp/>zero<sp/>crossing*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2a1be1a5e637fbbb873ddce337c485c3" kindref="member">value</ref><sp/>+<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a0e8b850af6e27fa038cf0075c056ecbb" kindref="member">step</ref>)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2a1be1a5e637fbbb873ddce337c485c3" kindref="member">value</ref><sp/>&lt;<sp/>0)<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2a1be1a5e637fbbb873ddce337c485c3" kindref="member">value</ref><sp/>=<sp/>-ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2a1be1a5e637fbbb873ddce337c485c3" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2a1be1a5e637fbbb873ddce337c485c3" kindref="member">value</ref><sp/>+=<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a0e8b850af6e27fa038cf0075c056ecbb" kindref="member">step</ref>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2a1be1a5e637fbbb873ddce337c485c3" kindref="member">value</ref><sp/>=<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2ed345ed52f555466060cb3e2e50be5c" kindref="member">range_max</ref>;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_spinbox_updatevalue(spinbox);</highlight></codeline>
<codeline lineno="275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__spinbox_8c_1ad5971885a5b53fc67b46b82c27b43a4d" kindref="member">lv_spinbox_decrement</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>spinbox)</highlight></codeline>
<codeline lineno="282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__spinbox__ext__t" kindref="compound">lv_spinbox_ext_t</ref><sp/>*<sp/>ext<sp/>=<sp/><ref refid="lv__obj_8c_1a0c06278b59453b3bfa04bd63981bca3b" kindref="member">lv_obj_get_ext_attr</ref>(spinbox);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2a1be1a5e637fbbb873ddce337c485c3" kindref="member">value</ref><sp/>-<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a0e8b850af6e27fa038cf0075c056ecbb" kindref="member">step</ref><sp/>&gt;=<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2db2a6dc923e5fdeb18d85491cf165ee" kindref="member">range_min</ref>)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Special<sp/>mode<sp/>when<sp/>zero<sp/>crossing*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2a1be1a5e637fbbb873ddce337c485c3" kindref="member">value</ref><sp/>-<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a0e8b850af6e27fa038cf0075c056ecbb" kindref="member">step</ref>)<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2a1be1a5e637fbbb873ddce337c485c3" kindref="member">value</ref><sp/>&gt;<sp/>0)<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2a1be1a5e637fbbb873ddce337c485c3" kindref="member">value</ref><sp/>=<sp/>-ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2a1be1a5e637fbbb873ddce337c485c3" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2a1be1a5e637fbbb873ddce337c485c3" kindref="member">value</ref><sp/>-=<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a0e8b850af6e27fa038cf0075c056ecbb" kindref="member">step</ref>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2a1be1a5e637fbbb873ddce337c485c3" kindref="member">value</ref><sp/>=<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2db2a6dc923e5fdeb18d85491cf165ee" kindref="member">range_min</ref>;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_spinbox_updatevalue(spinbox);</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/>*<sp/><sp/><sp/>STATIC<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="lv__types_8h_1a5c71f43250ed3699f40a8b634e342228" kindref="member">lv_res_t</ref><sp/>lv_spinbox_signal(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>spinbox,<sp/><ref refid="lv__obj_8h_1aaec725321f7abe33a79d04cdc91498ce" kindref="member">lv_signal_t</ref><sp/>sign,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>param)</highlight></codeline>
<codeline lineno="308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__spinbox__ext__t" kindref="compound">lv_spinbox_ext_t</ref><sp/>*<sp/>ext<sp/>=<sp/><ref refid="lv__obj_8c_1a0c06278b59453b3bfa04bd63981bca3b" kindref="member">lv_obj_get_ext_attr</ref>(spinbox);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__types_8h_1a5c71f43250ed3699f40a8b634e342228" kindref="member">lv_res_t</ref><sp/>res<sp/>=<sp/><ref refid="lv__types_8h_1a1f9aebf1de3ebbf4283a4dcf73308562a90ea5295fdbeeda6f5816f49204dd860" kindref="member">LV_RES_OK</ref>;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Include<sp/>the<sp/>ancient<sp/>signal<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sign<sp/>!=<sp/><ref refid="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06caa5bf3b5124b7925f587025316f398995" kindref="member">LV_SIGNAL_CONTROL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>ancestor_signal(spinbox,<sp/>sign,<sp/>param);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(res<sp/>!=<sp/><ref refid="lv__types_8h_1a1f9aebf1de3ebbf4283a4dcf73308562a90ea5295fdbeeda6f5816f49204dd860" kindref="member">LV_RES_OK</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sign<sp/>==<sp/><ref refid="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06cadbc2556344c61af73876d1119e16ed39" kindref="member">LV_SIGNAL_CLEANUP</ref>)<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Nothing<sp/>to<sp/>cleanup.<sp/>(No<sp/>dynamically<sp/>allocated<sp/>memory<sp/>in<sp/>&apos;ext&apos;)*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sign<sp/>==<sp/><ref refid="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06caa34afa204372de2536c237cf3ef9f706" kindref="member">LV_SIGNAL_GET_TYPE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlv__obj__type__t" kindref="compound">lv_obj_type_t</ref><sp/>*<sp/>buf<sp/>=<sp/>param;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>i;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="lv__obj_8h_1a928740e591ee641940bec3cb501e63e7" kindref="member">LV_MAX_ANCESTOR_NUM</ref><sp/>-<sp/>1;<sp/>i++)<sp/>{<sp/></highlight><highlight class="comment">/*Find<sp/>the<sp/>last<sp/>set<sp/>data*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(buf-&gt;<ref refid="structlv__obj__type__t_1ae24e59ffdb8f2e285b26a743b03f1469" kindref="member">type</ref>[i]<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf-&gt;<ref refid="structlv__obj__type__t_1ae24e59ffdb8f2e285b26a743b03f1469" kindref="member">type</ref>[i]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;lv_spinbox&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sign<sp/>==<sp/><ref refid="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06ca8f500f5ed0bab006bc365e67496ac30f" kindref="member">LV_SIGNAL_RELEASED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*If<sp/>released<sp/>with<sp/>an<sp/>ENCODER<sp/>then<sp/>move<sp/>to<sp/>the<sp/>nexxt<sp/>digit*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__lv__indev__t" kindref="compound">lv_indev_t</ref><sp/>*<sp/>indev<sp/>=<sp/><ref refid="lv__indev_8c_1a7371c50b9253f035dbd1991ffb3dd46e" kindref="member">lv_indev_get_act</ref>();</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="lv__indev_8c_1a95c3bddace5c8c574705340580365145" kindref="member">lv_indev_get_type</ref>(indev)<sp/>==<sp/><ref refid="lv__hal__indev_8h_1aae05225933a42f81e7c4a9fb286596f9ac14b17fb683f428c1bb935748ce0d5aa" kindref="member">LV_INDEV_TYPE_ENCODER</ref>)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="lv__group_8c_1a06dd3f21e367415bd7845cbb9a0acc1c" kindref="member">lv_group_get_editing</ref>(<ref refid="lv__obj_8c_1a4096ec8a90cb787d671867b9bd43dc73" kindref="member">lv_obj_get_group</ref>(spinbox)))<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ext-&gt;<ref refid="structlv__spinbox__ext__t_1a0e8b850af6e27fa038cf0075c056ecbb" kindref="member">step</ref><sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__spinbox_8c_1a4ba35a86d06bf4af1b1abee5ebab4f4a" kindref="member">lv_spinbox_step_next</ref>(spinbox);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Restart<sp/>from<sp/>the<sp/>MSB*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a0e8b850af6e27fa038cf0075c056ecbb" kindref="member">step</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>i;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a0e9357de3fa46cd05e59a43b4cab7f67" kindref="member">digit_count</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>new_step<sp/>=<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a0e8b850af6e27fa038cf0075c056ecbb" kindref="member">step</ref><sp/>*<sp/>10;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(new_step<sp/>&gt;=<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2ed345ed52f555466060cb3e2e50be5c" kindref="member">range_max</ref>)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a0e8b850af6e27fa038cf0075c056ecbb" kindref="member">step</ref><sp/>=<sp/>new_step;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__spinbox_8c_1ac444998d2d61ce2c0e634cf57e3c1e9b" kindref="member">lv_spinbox_step_previous</ref>(spinbox);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sign<sp/>==<sp/><ref refid="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06caa5bf3b5124b7925f587025316f398995" kindref="member">LV_SIGNAL_CONTROL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__hal__indev_8h_1a80fb23fd688f28d72a096f9ef6f93ea3" kindref="member">lv_indev_type_t</ref><sp/>indev_type<sp/>=<sp/><ref refid="lv__indev_8c_1a95c3bddace5c8c574705340580365145" kindref="member">lv_indev_get_type</ref>(<ref refid="lv__indev_8c_1a7371c50b9253f035dbd1991ffb3dd46e" kindref="member">lv_indev_get_act</ref>());</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>c<sp/>=<sp/>*((uint32_t<sp/>*)param);<sp/></highlight><highlight class="comment">/*uint32_t<sp/>because<sp/>can<sp/>be<sp/>UTF-8*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c<sp/>==<sp/><ref refid="lv__group_8h_1a06fc87d81c62e9abb8790b6e5713c55bad77cbb92e03b53f89e7933fadaf38ab2" kindref="member">LV_KEY_RIGHT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(indev_type<sp/>==<sp/><ref refid="lv__hal__indev_8h_1aae05225933a42f81e7c4a9fb286596f9ac14b17fb683f428c1bb935748ce0d5aa" kindref="member">LV_INDEV_TYPE_ENCODER</ref>)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__spinbox_8c_1abf28619a10f48ccfcb736b51b9ee5e46" kindref="member">lv_spinbox_increment</ref>(spinbox);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__spinbox_8c_1a4ba35a86d06bf4af1b1abee5ebab4f4a" kindref="member">lv_spinbox_step_next</ref>(spinbox);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c<sp/>==<sp/><ref refid="lv__group_8h_1a06fc87d81c62e9abb8790b6e5713c55ba087a04c571deda9bd82386057bd4313a" kindref="member">LV_KEY_LEFT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(indev_type<sp/>==<sp/><ref refid="lv__hal__indev_8h_1aae05225933a42f81e7c4a9fb286596f9ac14b17fb683f428c1bb935748ce0d5aa" kindref="member">LV_INDEV_TYPE_ENCODER</ref>)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__spinbox_8c_1ad5971885a5b53fc67b46b82c27b43a4d" kindref="member">lv_spinbox_decrement</ref>(spinbox);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__spinbox_8c_1ac444998d2d61ce2c0e634cf57e3c1e9b" kindref="member">lv_spinbox_step_previous</ref>(spinbox);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c<sp/>==<sp/><ref refid="lv__group_8h_1a06fc87d81c62e9abb8790b6e5713c55ba82eb5e1cae7704a974f4974f3021d1ef" kindref="member">LV_KEY_UP</ref>)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__spinbox_8c_1abf28619a10f48ccfcb736b51b9ee5e46" kindref="member">lv_spinbox_increment</ref>(spinbox);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c<sp/>==<sp/><ref refid="lv__group_8h_1a06fc87d81c62e9abb8790b6e5713c55ba1b104023df6a6857b1450edeaf07fced" kindref="member">LV_KEY_DOWN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__spinbox_8c_1ad5971885a5b53fc67b46b82c27b43a4d" kindref="member">lv_spinbox_decrement</ref>(spinbox);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__ta_8c_1a96bb5009e7878329a25791636449ec99" kindref="member">lv_ta_add_char</ref>(spinbox,<sp/>c);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lv_spinbox_updatevalue(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>spinbox)</highlight></codeline>
<codeline lineno="376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__spinbox__ext__t" kindref="compound">lv_spinbox_ext_t</ref><sp/>*<sp/>ext<sp/>=<sp/><ref refid="lv__obj_8c_1a0c06278b59453b3bfa04bd63981bca3b" kindref="member">lv_obj_get_ext_attr</ref>(spinbox);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[<ref refid="lv__spinbox_8h_1aea12cb3c5dad7f59c6096405564945b2" kindref="member">LV_SPINBOX_MAX_DIGIT_COUNT</ref><sp/>+<sp/>8];</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(buf,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf));</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>buf_p<sp/>=<sp/>buf;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Add<sp/>the<sp/>sign*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>(*buf_p)<sp/>=<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2a1be1a5e637fbbb873ddce337c485c3" kindref="member">value</ref><sp/>&gt;=<sp/>0<sp/>?<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>buf_p++;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*padding<sp/>left*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1adb61f0ebf5c0a728cc1739733e3dbc07" kindref="member">digit_padding_left</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*buf_p)<sp/>=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_p++;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>digits[64];</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Convert<sp/>the<sp/>numbers<sp/>to<sp/>string<sp/>(the<sp/>sign<sp/>is<sp/>already<sp/>handled<sp/>so<sp/>always<sp/>covert<sp/>positive<sp/>number)*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__utils_8c_1a7fd8e92836079ba11d90f8582e50d453" kindref="member">lv_utils_num_to_str</ref>(ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2a1be1a5e637fbbb873ddce337c485c3" kindref="member">value</ref><sp/>&lt;<sp/>0<sp/>?<sp/>-ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2a1be1a5e637fbbb873ddce337c485c3" kindref="member">value</ref><sp/>:<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a2a1be1a5e637fbbb873ddce337c485c3" kindref="member">value</ref>,<sp/>digits);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Add<sp/>leading<sp/>zeros*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lz_cnt<sp/>=<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a0e9357de3fa46cd05e59a43b4cab7f67" kindref="member">digit_count</ref><sp/>-<sp/>(int)strlen(digits);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lz_cnt<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>strlen(digits);<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digits[i<sp/>+<sp/>lz_cnt]<sp/>=<sp/>digits[i];</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>lz_cnt;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digits[i]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>intDigits;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>intDigits<sp/>=<sp/>(ext-&gt;<ref refid="structlv__spinbox__ext__t_1accecf8d7c98b2d4ffc6a7da93c52ee94" kindref="member">dec_point_pos</ref><sp/>==<sp/>0)<sp/>?<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a0e9357de3fa46cd05e59a43b4cab7f67" kindref="member">digit_count</ref><sp/>:<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1accecf8d7c98b2d4ffc6a7da93c52ee94" kindref="member">dec_point_pos</ref>;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Add<sp/>the<sp/>decimal<sp/>part*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>intDigits<sp/>&amp;&amp;<sp/>digits[i]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*buf_p)<sp/>=<sp/>digits[i];</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_p++;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ext-&gt;<ref refid="structlv__spinbox__ext__t_1accecf8d7c98b2d4ffc6a7da93c52ee94" kindref="member">dec_point_pos</ref><sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Insert<sp/>the<sp/>decimal<sp/>point*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*buf_p)<sp/>=<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_p++;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="comment">/*Leave<sp/>i*/</highlight><highlight class="normal">;<sp/>i<sp/>&lt;<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a0e9357de3fa46cd05e59a43b4cab7f67" kindref="member">digit_count</ref><sp/>&amp;&amp;<sp/>digits[i]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*buf_p)<sp/>=<sp/>digits[i];</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_p++;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Refresh<sp/>the<sp/>text*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__ta_8c_1a1f01d772a1e398ba121148667ee1567b" kindref="member">lv_ta_set_text</ref>(spinbox,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)buf);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Set<sp/>the<sp/>cursor<sp/>position*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>step<sp/><sp/><sp/><sp/>=<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a0e8b850af6e27fa038cf0075c056ecbb" kindref="member">step</ref>;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>cur_pos<sp/>=<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1a0e9357de3fa46cd05e59a43b4cab7f67" kindref="member">digit_count</ref>;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(step<sp/>&gt;=<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step<sp/>/=<sp/>10;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_pos--;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cur_pos<sp/>&gt;<sp/>intDigits)<sp/>cur_pos++;<sp/></highlight><highlight class="comment">/*Skip<sp/>teh<sp/>decimal<sp/>point*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>cur_pos<sp/>+=<sp/>ext-&gt;<ref refid="structlv__spinbox__ext__t_1adb61f0ebf5c0a728cc1739733e3dbc07" kindref="member">digit_padding_left</ref>;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__ta_8c_1a1d0d553f01d1f1dedf9486def9299e89" kindref="member">lv_ta_set_cursor_pos</ref>(spinbox,<sp/>cur_pos);</highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_objx/lv_spinbox.c"/>
  </compounddef>
</doxygen>
