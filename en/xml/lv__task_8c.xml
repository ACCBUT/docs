<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="lv__task_8c" kind="file" language="C++">
    <compoundname>lv_task.c</compoundname>
    <includes local="no">stddef.h</includes>
    <includes refid="lv__task_8h" local="yes">lv_task.h</includes>
    <includes refid="lv__hal__tick_8h" local="yes">../lv_hal/lv_hal_tick.h</includes>
    <includes refid="lv__gc_8h" local="yes">lv_gc.h</includes>
    <incdepgraph>
      <node id="3333">
        <label>stdbool.h</label>
      </node>
      <node id="3337">
        <label>../lv_hal/lv_hal_tick.h</label>
        <link refid="lv__hal__tick_8h"/>
        <childnode refid="3331" relation="include">
        </childnode>
        <childnode refid="3332" relation="include">
        </childnode>
        <childnode refid="3333" relation="include">
        </childnode>
      </node>
      <node id="3332">
        <label>stdint.h</label>
      </node>
      <node id="3338">
        <label>lv_gc.h</label>
        <link refid="lv__gc_8h"/>
        <childnode refid="3331" relation="include">
        </childnode>
        <childnode refid="3332" relation="include">
        </childnode>
        <childnode refid="3333" relation="include">
        </childnode>
        <childnode refid="3334" relation="include">
        </childnode>
        <childnode refid="3336" relation="include">
        </childnode>
      </node>
      <node id="3336">
        <label>lv_ll.h</label>
        <link refid="lv__ll_8h"/>
        <childnode refid="3334" relation="include">
        </childnode>
        <childnode refid="3332" relation="include">
        </childnode>
        <childnode refid="3329" relation="include">
        </childnode>
        <childnode refid="3333" relation="include">
        </childnode>
      </node>
      <node id="3329">
        <label>stddef.h</label>
      </node>
      <node id="3331">
        <label>../../../lv_conf.h</label>
      </node>
      <node id="3328">
        <label>/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c</label>
        <link refid="lv__task_8c"/>
        <childnode refid="3329" relation="include">
        </childnode>
        <childnode refid="3330" relation="include">
        </childnode>
        <childnode refid="3337" relation="include">
        </childnode>
        <childnode refid="3338" relation="include">
        </childnode>
      </node>
      <node id="3330">
        <label>lv_task.h</label>
        <link refid="lv__task_8h"/>
        <childnode refid="3331" relation="include">
        </childnode>
        <childnode refid="3332" relation="include">
        </childnode>
        <childnode refid="3333" relation="include">
        </childnode>
        <childnode refid="3334" relation="include">
        </childnode>
        <childnode refid="3336" relation="include">
        </childnode>
      </node>
      <node id="3335">
        <label>lv_log.h</label>
        <link refid="lv__log_8h"/>
        <childnode refid="3331" relation="include">
        </childnode>
        <childnode refid="3332" relation="include">
        </childnode>
      </node>
      <node id="3334">
        <label>lv_mem.h</label>
        <link refid="lv__mem_8h"/>
        <childnode refid="3331" relation="include">
        </childnode>
        <childnode refid="3332" relation="include">
        </childnode>
        <childnode refid="3329" relation="include">
        </childnode>
        <childnode refid="3335" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="lv__task_8c_1ab9b92e3ca5f56511b69d1ce1e187c48b" prot="public" static="no">
        <name>IDLE_MEAS_PERIOD</name>
        <initializer>500 /*[ms]*/</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" line="22" column="9" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lv__task_8c_1acc1cf94661e5e249f1af0942e2c39d08" prot="public" static="no">
        <name>DEF_PRIO</name>
        <initializer><ref refid="lv__task_8h_1a96a58e29e8dbf2b5bdeb775cba46556ea844c317809c97853d1f0959fe381448e" kindref="member">LV_TASK_PRIO_MID</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" line="23" column="9" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lv__task_8c_1a61ab5364baf001df55c0517f574e40f3" prot="public" static="no">
        <name>DEF_PERIOD</name>
        <initializer>500</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" line="24" column="9" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="lv__task_8c_1acf14273a1f4fd2973ea667d37da21a23" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool lv_task_run</definition>
        <argsstring></argsstring>
        <name>lv_task_run</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" line="38" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="lv__task_8c_1a596265b2bb8dee03a032029e7bfc3364" prot="public" static="yes" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t idle_last</definition>
        <argsstring></argsstring>
        <name>idle_last</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" line="39" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="lv__task_8c_1aa5d1eede315f797319392b2cba4ee2ce" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool task_deleted</definition>
        <argsstring></argsstring>
        <name>task_deleted</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" line="40" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="lv__task_8c_1a2fb28bc332003ab3de6470f8f07311a0" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool task_created</definition>
        <argsstring></argsstring>
        <name>task_created</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" line="41" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="lv__task_8c_1a37cbfee90ebd6db81bcdfd39aa970ae3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool lv_task_exec</definition>
        <argsstring>(lv_task_t *task)</argsstring>
        <name>lv_task_exec</name>
        <param>
          <type><ref refid="lv__task_8h_1a6802b3e3a3afab33e7f10868e5c522a3" kindref="member">lv_task_t</ref> *</type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute task if its the priority is appropriate <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>task</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to lv_task </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true: execute, false: not executed </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" line="33" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" bodystart="350" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="lv__task_8c_1a006c6c4fef6023e88b1ca95158aee8c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_task_core_init</definition>
        <argsstring>(void)</argsstring>
        <name>lv_task_core_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init the lv_task module </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" line="54" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" bodystart="54" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="lv__task_8c_1a846d4e9f73a30f1aa81088695fc54cad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lv__conf__checker_8h_1a0dfe5eb1776f2e16d001a4b8a667538e" kindref="member">LV_ATTRIBUTE_TASK_HANDLER</ref> void</type>
        <definition>LV_ATTRIBUTE_TASK_HANDLER void lv_task_handler</definition>
        <argsstring>(void)</argsstring>
        <name>lv_task_handler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Call it periodically to handle lv_tasks. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" line="65" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" bodystart="65" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="lv__task_8c_1aab6da624f550834c19eec3ef341d7014" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lv__task_8h_1a6802b3e3a3afab33e7f10868e5c522a3" kindref="member">lv_task_t</ref> *</type>
        <definition>lv_task_t* lv_task_create_basic</definition>
        <argsstring>(void)</argsstring>
        <name>lv_task_create_basic</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an &quot;empty&quot; task. It needs to initialzed with at least <computeroutput>lv_task_set_cb</computeroutput> and <computeroutput>lv_task_set_period</computeroutput> <simplesect kind="return"><para>pointer to the craeted task </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" line="165" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" bodystart="165" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="lv__task_8c_1afc1295adeab118e8280c36bd1d26d886" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lv__task_8h_1a6802b3e3a3afab33e7f10868e5c522a3" kindref="member">lv_task_t</ref> *</type>
        <definition>lv_task_t* lv_task_create</definition>
        <argsstring>(lv_task_cb_t task_cb, uint32_t period, lv_task_prio_t prio, void *user_data)</argsstring>
        <name>lv_task_create</name>
        <param>
          <type><ref refid="lv__task_8h_1aca5c1acf415da803e1ba407eb9631a81" kindref="member">lv_task_cb_t</ref></type>
          <declname>task_cb</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>period</declname>
        </param>
        <param>
          <type><ref refid="lv__task_8h_1a6c90931e339c8e7d69c2663729f64f36" kindref="member">lv_task_prio_t</ref></type>
          <declname>prio</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new lv_task <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>task</parametername>
</parameternamelist>
<parameterdescription>
<para>a function which is the task itself </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>period</parametername>
</parameternamelist>
<parameterdescription>
<para>call period in ms unit </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prio</parametername>
</parameternamelist>
<parameterdescription>
<para>priority of the task (LV_TASK_PRIO_OFF means the task is stopped) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>custom parameter </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the new task </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" line="221" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" bodystart="221" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="lv__task_8c_1a957defb9f9d7c71670bc017f1ecd2ddc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_task_set_cb</definition>
        <argsstring>(lv_task_t *task, lv_task_cb_t task_cb)</argsstring>
        <name>lv_task_set_cb</name>
        <param>
          <type><ref refid="lv__task_8h_1a6802b3e3a3afab33e7f10868e5c522a3" kindref="member">lv_task_t</ref> *</type>
          <declname>task</declname>
        </param>
        <param>
          <type><ref refid="lv__task_8h_1aca5c1acf415da803e1ba407eb9631a81" kindref="member">lv_task_cb_t</ref></type>
          <declname>task_cb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the callback the task (the function to call periodically) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>task</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a task </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>task_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>teh function to call periodically </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" line="240" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" bodystart="240" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="lv__task_8c_1afde0b99f514da46d5af6548c62fb8c03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_task_del</definition>
        <argsstring>(lv_task_t *task)</argsstring>
        <name>lv_task_del</name>
        <param>
          <type><ref refid="lv__task_8h_1a6802b3e3a3afab33e7f10868e5c522a3" kindref="member">lv_task_t</ref> *</type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete a lv_task <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>task</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to task created by task </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" line="249" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" bodystart="249" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="lv__task_8c_1a3765ff7deb53af273e56acc25eeb3d03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_task_set_prio</definition>
        <argsstring>(lv_task_t *task, lv_task_prio_t prio)</argsstring>
        <name>lv_task_set_prio</name>
        <param>
          <type><ref refid="lv__task_8h_1a6802b3e3a3afab33e7f10868e5c522a3" kindref="member">lv_task_t</ref> *</type>
          <declname>task</declname>
        </param>
        <param>
          <type><ref refid="lv__task_8h_1a6c90931e339c8e7d69c2663729f64f36" kindref="member">lv_task_prio_t</ref></type>
          <declname>prio</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set new priority for a lv_task <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>task</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a lv_task </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prio</parametername>
</parameternamelist>
<parameterdescription>
<para>the new priority </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" line="263" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" bodystart="263" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="lv__task_8c_1a26a0623388938e311f72cad7b0eb7e38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_task_set_period</definition>
        <argsstring>(lv_task_t *task, uint32_t period)</argsstring>
        <name>lv_task_set_period</name>
        <param>
          <type><ref refid="lv__task_8h_1a6802b3e3a3afab33e7f10868e5c522a3" kindref="member">lv_task_t</ref> *</type>
          <declname>task</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>period</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set new period for a lv_task <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>task</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a lv_task </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>period</parametername>
</parameternamelist>
<parameterdescription>
<para>the new period </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" line="290" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" bodystart="290" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="lv__task_8c_1a13534e19f41075904115a60a3a2232aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_task_ready</definition>
        <argsstring>(lv_task_t *task)</argsstring>
        <name>lv_task_ready</name>
        <param>
          <type><ref refid="lv__task_8h_1a6802b3e3a3afab33e7f10868e5c522a3" kindref="member">lv_task_t</ref> *</type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Make a lv_task ready. It will not wait its period. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>task</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a lv_task. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" line="299" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" bodystart="299" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="lv__task_8c_1a5adcce5851ce6c54aba2af0fce2567da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_task_once</definition>
        <argsstring>(lv_task_t *task)</argsstring>
        <name>lv_task_once</name>
        <param>
          <type><ref refid="lv__task_8h_1a6802b3e3a3afab33e7f10868e5c522a3" kindref="member">lv_task_t</ref> *</type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete the lv_task after one call <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>task</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a lv_task. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" line="308" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" bodystart="308" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="lv__task_8c_1a415052f6b2a319f191fb50eb91e0e117" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_task_reset</definition>
        <argsstring>(lv_task_t *task)</argsstring>
        <name>lv_task_reset</name>
        <param>
          <type><ref refid="lv__task_8h_1a6802b3e3a3afab33e7f10868e5c522a3" kindref="member">lv_task_t</ref> *</type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset a lv_task. It will be called the previously set period milliseconds later. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>task</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a lv_task. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" line="318" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" bodystart="318" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="lv__task_8c_1a6d867c22a34e5150a1e3d0f376ada417" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_task_enable</definition>
        <argsstring>(bool en)</argsstring>
        <name>lv_task_enable</name>
        <param>
          <type>bool</type>
          <declname>en</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable or disable the whole lv_task handling <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>en</parametername>
</parameternamelist>
<parameterdescription>
<para>true: lv_task handling is running, false: lv_task handling is suspended </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" line="327" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" bodystart="327" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="lv__task_8c_1aa1ed2cc262d5606bf7a5790d13b95c88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t lv_task_get_idle</definition>
        <argsstring>(void)</argsstring>
        <name>lv_task_get_idle</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get idle percentage <simplesect kind="return"><para>the lv_task idle in percentage </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" line="336" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c" bodystart="336" bodyend="339"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>An &apos;lv_task&apos; is a void (<emphasis>fp) (void</emphasis> param) type function which will be called periodically. A priority (5 levels + disable) can be assigned to lv_tasks. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="7"><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>INCLUDES</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lv__task_8h" kindref="compound">lv_task.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_hal/lv_hal_tick.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lv__gc_8h" kindref="compound">lv_gc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(LV_GC_INCLUDE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>LV_GC_INCLUDE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LV_ENABLE_GC<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>DEFINES</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IDLE_MEAS_PERIOD<sp/>500<sp/></highlight><highlight class="comment">/*[ms]*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEF_PRIO<sp/>LV_TASK_PRIO_MID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEF_PERIOD<sp/>500</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>TYPEDEFS</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/>STATIC<sp/>PROTOTYPES</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lv_task_exec(<ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref><sp/>*<sp/>task);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/><sp/>STATIC<sp/>VARIABLES</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lv_task_run<sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>idle_last<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>task_deleted;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>task_created;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>MACROS</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/><sp/><sp/>GLOBAL<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__task_8c_1a006c6c4fef6023e88b1ca95158aee8c7" kindref="member">lv_task_core_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__ll_8c_1a3d1489794c2209fc7f6c0fb8a8e15de9" kindref="member">lv_ll_init</ref>(&amp;<ref refid="lv__gc_8h_1a56ab4f084c8075b22e02e1c99491c4cd" kindref="member">LV_GC_ROOT</ref>(_lv_task_ll),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref>));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Initially<sp/>enable<sp/>the<sp/>lv_task<sp/>handling*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__task_8c_1a6d867c22a34e5150a1e3d0f376ada417" kindref="member">lv_task_enable</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><ref refid="lv__conf__checker_8h_1a0dfe5eb1776f2e16d001a4b8a667538e" kindref="member">LV_ATTRIBUTE_TASK_HANDLER</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__task_8c_1a846d4e9f73a30f1aa81088695fc54cad" kindref="member">lv_task_handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__log_8h_1a524d5f1e3687502a6c288bb5c136cf0c" kindref="member">LV_LOG_TRACE</ref>(</highlight><highlight class="stringliteral">&quot;lv_task_handler<sp/>started&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Avoid<sp/>concurrent<sp/>running<sp/>of<sp/>the<sp/>task<sp/>handler*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>task_handler_mutex<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(task_handler_mutex)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>task_handler_mutex<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>idle_period_start<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>handler_start<sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>busy_time<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lv_task_run<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task_handler_mutex<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*Release<sp/>mutex*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>handler_start<sp/>=<sp/><ref refid="lv__hal__tick_8c_1a051c47bcfb48282a75834d8dd0a8470c" kindref="member">lv_tick_get</ref>();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Run<sp/>all<sp/>task<sp/>from<sp/>the<sp/>highest<sp/>to<sp/>the<sp/>lowest<sp/>priority</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>a<sp/>lower<sp/>priority<sp/>task<sp/>is<sp/>executed<sp/>check<sp/>task<sp/>again<sp/>from<sp/>the<sp/>highest<sp/>priority</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>but<sp/>on<sp/>the<sp/>priority<sp/>of<sp/>executed<sp/>tasks<sp/>don&apos;t<sp/>run<sp/>tasks<sp/>before<sp/>the<sp/>executed*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref><sp/>*<sp/>task_interrupter<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref><sp/>*<sp/>next;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>end_flag;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_flag<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task_deleted<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task_created<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__gc_8h_1a56ab4f084c8075b22e02e1c99491c4cd" kindref="member">LV_GC_ROOT</ref>(_lv_task_act)<sp/>=<sp/><ref refid="lv__ll_8c_1aa5f4c88fb30d4ca40cf134362049adc6" kindref="member">lv_ll_get_head</ref>(&amp;<ref refid="lv__gc_8h_1a56ab4f084c8075b22e02e1c99491c4cd" kindref="member">LV_GC_ROOT</ref>(_lv_task_ll));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<ref refid="lv__gc_8h_1a56ab4f084c8075b22e02e1c99491c4cd" kindref="member">LV_GC_ROOT</ref>(_lv_task_act))<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>task<sp/>might<sp/>be<sp/>deleted<sp/>if<sp/>it<sp/>runs<sp/>only<sp/>once<sp/>(&apos;once<sp/>=<sp/>1&apos;)</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>So<sp/>get<sp/>next<sp/>element<sp/>until<sp/>the<sp/>current<sp/>is<sp/>surely<sp/>valid*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next<sp/>=<sp/><ref refid="lv__ll_8c_1a98ae2188079b1aa00eec3b9a24974899" kindref="member">lv_ll_get_next</ref>(&amp;<ref refid="lv__gc_8h_1a56ab4f084c8075b22e02e1c99491c4cd" kindref="member">LV_GC_ROOT</ref>(_lv_task_ll),<sp/><ref refid="lv__gc_8h_1a56ab4f084c8075b22e02e1c99491c4cd" kindref="member">LV_GC_ROOT</ref>(_lv_task_act));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*We<sp/>reach<sp/>priority<sp/>of<sp/>the<sp/>turned<sp/>off<sp/>task.<sp/>There<sp/>is<sp/>nothing<sp/>more<sp/>to<sp/>do.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(((<ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref><sp/>*)<ref refid="lv__gc_8h_1a56ab4f084c8075b22e02e1c99491c4cd" kindref="member">LV_GC_ROOT</ref>(_lv_task_act))-&gt;prio<sp/>==<sp/><ref refid="lv__task_8h_1a96a58e29e8dbf2b5bdeb775cba46556ea63f1ed372b224a31b8da52ebab208af5" kindref="member">LV_TASK_PRIO_OFF</ref>)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Here<sp/>is<sp/>the<sp/>interrupter<sp/>task.<sp/>Don&apos;t<sp/>execute<sp/>it<sp/>again.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="lv__gc_8h_1a56ab4f084c8075b22e02e1c99491c4cd" kindref="member">LV_GC_ROOT</ref>(_lv_task_act)<sp/>==<sp/>task_interrupter)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task_interrupter<sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">/*From<sp/>this<sp/>point<sp/>only<sp/>task<sp/>after<sp/>the<sp/>interrupter<sp/>comes,<sp/>so</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>interrupter<sp/>is<sp/>not<sp/>interesting<sp/>anymore*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__gc_8h_1a56ab4f084c8075b22e02e1c99491c4cd" kindref="member">LV_GC_ROOT</ref>(_lv_task_act)<sp/>=<sp/>next;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*Load<sp/>the<sp/>next<sp/>task*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Just<sp/>try<sp/>to<sp/>run<sp/>the<sp/>tasks<sp/>with<sp/>highest<sp/>priority.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(((<ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref><sp/>*)<ref refid="lv__gc_8h_1a56ab4f084c8075b22e02e1c99491c4cd" kindref="member">LV_GC_ROOT</ref>(_lv_task_act))-&gt;prio<sp/>==<sp/><ref refid="lv__task_8h_1a96a58e29e8dbf2b5bdeb775cba46556ea0da23266b0380ef5e9adb95f59679228" kindref="member">LV_TASK_PRIO_HIGHEST</ref>)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lv_task_exec(<ref refid="lv__gc_8h_1a56ab4f084c8075b22e02e1c99491c4cd" kindref="member">LV_GC_ROOT</ref>(_lv_task_act));</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Tasks<sp/>with<sp/>higher<sp/>priority<sp/>then<sp/>the<sp/>interrupted<sp/>shall<sp/>be<sp/>run<sp/>in<sp/>every<sp/>case*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(task_interrupter)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(((<ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref><sp/>*)<ref refid="lv__gc_8h_1a56ab4f084c8075b22e02e1c99491c4cd" kindref="member">LV_GC_ROOT</ref>(_lv_task_act))-&gt;prio<sp/>&gt;<sp/>task_interrupter-&gt;<ref refid="struct__lv__task__t_1a436283203b4f533a33a132de7938a672" kindref="member">prio</ref>)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lv_task_exec(<ref refid="lv__gc_8h_1a56ab4f084c8075b22e02e1c99491c4cd" kindref="member">LV_GC_ROOT</ref>(_lv_task_act)))<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task_interrupter<sp/>=</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__gc_8h_1a56ab4f084c8075b22e02e1c99491c4cd" kindref="member">LV_GC_ROOT</ref>(_lv_task_act);<sp/></highlight><highlight class="comment">/*Check<sp/>all<sp/>tasks<sp/>again<sp/>from<sp/>the<sp/>highest<sp/>priority<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_flag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>It<sp/>is<sp/>no<sp/>interrupter<sp/>task<sp/>or<sp/>we<sp/>already<sp/>reached<sp/>it<sp/>earlier.</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Just<sp/>run<sp/>the<sp/>remaining<sp/>tasks*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lv_task_exec(<ref refid="lv__gc_8h_1a56ab4f084c8075b22e02e1c99491c4cd" kindref="member">LV_GC_ROOT</ref>(_lv_task_act)))<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task_interrupter<sp/>=<sp/><ref refid="lv__gc_8h_1a56ab4f084c8075b22e02e1c99491c4cd" kindref="member">LV_GC_ROOT</ref>(_lv_task_act);<sp/></highlight><highlight class="comment">/*Check<sp/>all<sp/>tasks<sp/>again<sp/>from<sp/>the<sp/>highest<sp/>priority<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_flag<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(task_deleted)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*If<sp/>a<sp/>task<sp/>was<sp/>deleted<sp/>then<sp/>this<sp/>or<sp/>the<sp/>next<sp/>item<sp/>might<sp/>be<sp/>corrupted*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(task_created)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*If<sp/>a<sp/>task<sp/>was<sp/>created<sp/>then<sp/>this<sp/>or<sp/>the<sp/>next<sp/>item<sp/>might<sp/>be<sp/>corrupted*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__gc_8h_1a56ab4f084c8075b22e02e1c99491c4cd" kindref="member">LV_GC_ROOT</ref>(_lv_task_act)<sp/>=<sp/>next;<sp/></highlight><highlight class="comment">/*Load<sp/>the<sp/>next<sp/>task*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!end_flag);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>busy_time<sp/>+=<sp/><ref refid="lv__hal__tick_8c_1a632b8bf9b03d3a809d053508c06dc6d9" kindref="member">lv_tick_elaps</ref>(handler_start);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>idle_period_time<sp/>=<sp/><ref refid="lv__hal__tick_8c_1a632b8bf9b03d3a809d053508c06dc6d9" kindref="member">lv_tick_elaps</ref>(idle_period_start);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(idle_period_time<sp/>&gt;=<sp/><ref refid="lv__task_8c_1ab9b92e3ca5f56511b69d1ce1e187c48b" kindref="member">IDLE_MEAS_PERIOD</ref>)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idle_last<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(uint32_t)((uint32_t)busy_time<sp/>*<sp/>100)<sp/>/<sp/><ref refid="lv__task_8c_1ab9b92e3ca5f56511b69d1ce1e187c48b" kindref="member">IDLE_MEAS_PERIOD</ref>;<sp/></highlight><highlight class="comment">/*Calculate<sp/>the<sp/>busy<sp/>percentage*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idle_last<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>idle_last<sp/>&gt;<sp/>100<sp/>?<sp/>0<sp/>:<sp/>100<sp/>-<sp/>idle_last;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*But<sp/>we<sp/>need<sp/>idle<sp/>time*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>busy_time<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idle_period_start<sp/>=<sp/><ref refid="lv__hal__tick_8c_1a051c47bcfb48282a75834d8dd0a8470c" kindref="member">lv_tick_get</ref>();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>task_handler_mutex<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*Release<sp/>the<sp/>mutex*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__log_8h_1a524d5f1e3687502a6c288bb5c136cf0c" kindref="member">LV_LOG_TRACE</ref>(</highlight><highlight class="stringliteral">&quot;lv_task_handler<sp/>ready&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref><sp/>*<sp/><ref refid="lv__task_8c_1aab6da624f550834c19eec3ef341d7014" kindref="member">lv_task_create_basic</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref><sp/>*<sp/>new_task<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref><sp/>*<sp/>tmp;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Create<sp/>task<sp/>lists<sp/>in<sp/>order<sp/>of<sp/>priority<sp/>from<sp/>high<sp/>to<sp/>low*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="lv__ll_8c_1aa5f4c88fb30d4ca40cf134362049adc6" kindref="member">lv_ll_get_head</ref>(&amp;<ref refid="lv__gc_8h_1a56ab4f084c8075b22e02e1c99491c4cd" kindref="member">LV_GC_ROOT</ref>(_lv_task_ll));</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*It&apos;s<sp/>the<sp/>first<sp/>task*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>tmp)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_task<sp/>=<sp/><ref refid="lv__ll_8c_1a6a15a5ed0b0964a24fbc4aca413b56a1" kindref="member">lv_ll_ins_head</ref>(&amp;<ref refid="lv__gc_8h_1a56ab4f084c8075b22e02e1c99491c4cd" kindref="member">LV_GC_ROOT</ref>(_lv_task_ll));</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__mem_8h_1a2600d9be0e0cffe1a8899ab69660c428" kindref="member">lv_mem_assert</ref>(new_task);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(new_task<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Insert<sp/>the<sp/>new<sp/>task<sp/>to<sp/>proper<sp/>place<sp/>according<sp/>to<sp/>its<sp/>priority*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmp-&gt;<ref refid="struct__lv__task__t_1a436283203b4f533a33a132de7938a672" kindref="member">prio</ref><sp/>&lt;=<sp/><ref refid="lv__task_8c_1acc1cf94661e5e249f1af0942e2c39d08" kindref="member">DEF_PRIO</ref>)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_task<sp/>=<sp/><ref refid="lv__ll_8c_1a50f2f5a81449a36a9d56127cbdbc3e90" kindref="member">lv_ll_ins_prev</ref>(&amp;<ref refid="lv__gc_8h_1a56ab4f084c8075b22e02e1c99491c4cd" kindref="member">LV_GC_ROOT</ref>(_lv_task_ll),<sp/>tmp);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__mem_8h_1a2600d9be0e0cffe1a8899ab69660c428" kindref="member">lv_mem_assert</ref>(new_task);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(new_task<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="lv__ll_8c_1a98ae2188079b1aa00eec3b9a24974899" kindref="member">lv_ll_get_next</ref>(&amp;<ref refid="lv__gc_8h_1a56ab4f084c8075b22e02e1c99491c4cd" kindref="member">LV_GC_ROOT</ref>(_lv_task_ll),<sp/>tmp);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(tmp<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Only<sp/>too<sp/>high<sp/>priority<sp/>tasks<sp/>were<sp/>found.<sp/>Add<sp/>the<sp/>task<sp/>to<sp/>the<sp/>end*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmp<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_task<sp/>=<sp/><ref refid="lv__ll_8c_1ade6869c78a7c94616603c4c2ce1329d3" kindref="member">lv_ll_ins_tail</ref>(&amp;<ref refid="lv__gc_8h_1a56ab4f084c8075b22e02e1c99491c4cd" kindref="member">LV_GC_ROOT</ref>(_lv_task_ll));</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__mem_8h_1a2600d9be0e0cffe1a8899ab69660c428" kindref="member">lv_mem_assert</ref>(new_task);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(new_task<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>new_task-&gt;<ref refid="struct__lv__task__t_1acea86df3e8ac37d7f15d8810e59ac1e9" kindref="member">period</ref><sp/><sp/>=<sp/><ref refid="lv__task_8c_1a61ab5364baf001df55c0517f574e40f3" kindref="member">DEF_PERIOD</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>new_task-&gt;<ref refid="struct__lv__task__t_1aeecd883579ab15e75e03e35916f1647d" kindref="member">task_cb</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>new_task-&gt;<ref refid="struct__lv__task__t_1a436283203b4f533a33a132de7938a672" kindref="member">prio</ref><sp/><sp/><sp/><sp/>=<sp/><ref refid="lv__task_8c_1acc1cf94661e5e249f1af0942e2c39d08" kindref="member">DEF_PRIO</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>new_task-&gt;<ref refid="struct__lv__task__t_1a818c2ee5166258ddf40655ca1a389a06" kindref="member">once</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>new_task-&gt;<ref refid="struct__lv__task__t_1a45e9f69602e1ffc1bbc14670dfa9eca4" kindref="member">last_run</ref><sp/>=<sp/><ref refid="lv__hal__tick_8c_1a051c47bcfb48282a75834d8dd0a8470c" kindref="member">lv_tick_get</ref>();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>new_task-&gt;<ref refid="struct__lv__task__t_1a6da7b78620d2d93e6e5f09192f7ceeb6" kindref="member">user_data</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>task_created<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_task;</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref><sp/>*<sp/><ref refid="lv__task_8c_1afc1295adeab118e8280c36bd1d26d886" kindref="member">lv_task_create</ref>(<ref refid="lv__task_8h_1aca5c1acf415da803e1ba407eb9631a81" kindref="member">lv_task_cb_t</ref><sp/>task_cb,<sp/>uint32_t<sp/>period,<sp/><ref refid="lv__task_8h_1a6c90931e339c8e7d69c2663729f64f36" kindref="member">lv_task_prio_t</ref><sp/>prio,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="struct__lv__fs__drv__t_1ae3af620b7b37175bb25a55c438634e7d" kindref="member">user_data</ref>)</highlight></codeline>
<codeline lineno="222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref><sp/>*<sp/>new_task<sp/>=<sp/><ref refid="lv__task_8c_1aab6da624f550834c19eec3ef341d7014" kindref="member">lv_task_create_basic</ref>();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__mem_8h_1a2600d9be0e0cffe1a8899ab69660c428" kindref="member">lv_mem_assert</ref>(new_task);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(new_task<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__task_8c_1a957defb9f9d7c71670bc017f1ecd2ddc" kindref="member">lv_task_set_cb</ref>(new_task,<sp/>task_cb);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__task_8c_1a26a0623388938e311f72cad7b0eb7e38" kindref="member">lv_task_set_period</ref>(new_task,<sp/>period);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__task_8c_1a3765ff7deb53af273e56acc25eeb3d03" kindref="member">lv_task_set_prio</ref>(new_task,<sp/>prio);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>new_task-&gt;<ref refid="struct__lv__task__t_1a6da7b78620d2d93e6e5f09192f7ceeb6" kindref="member">user_data</ref><sp/>=<sp/><ref refid="struct__lv__fs__drv__t_1ae3af620b7b37175bb25a55c438634e7d" kindref="member">user_data</ref>;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_task;</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__task_8c_1a957defb9f9d7c71670bc017f1ecd2ddc" kindref="member">lv_task_set_cb</ref>(<ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref><sp/>*<sp/>task,<sp/><ref refid="lv__task_8h_1aca5c1acf415da803e1ba407eb9631a81" kindref="member">lv_task_cb_t</ref><sp/>task_cb)</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>task-&gt;<ref refid="struct__lv__task__t_1aeecd883579ab15e75e03e35916f1647d" kindref="member">task_cb</ref><sp/>=<sp/>task_cb;</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__task_8c_1afde0b99f514da46d5af6548c62fb8c03" kindref="member">lv_task_del</ref>(<ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref><sp/>*<sp/>task)</highlight></codeline>
<codeline lineno="250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__ll_8c_1a0ba26667008c1560823e3410f9885d9a" kindref="member">lv_ll_rem</ref>(&amp;<ref refid="lv__gc_8h_1a56ab4f084c8075b22e02e1c99491c4cd" kindref="member">LV_GC_ROOT</ref>(_lv_task_ll),<sp/>task);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__mem_8c_1a4261e9d9b586a46a528a138d4c82b0ec" kindref="member">lv_mem_free</ref>(task);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="lv__gc_8h_1a56ab4f084c8075b22e02e1c99491c4cd" kindref="member">LV_GC_ROOT</ref>(_lv_task_act)<sp/>==<sp/>task)<sp/>task_deleted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*The<sp/>active<sp/>task<sp/>was<sp/>deleted*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__task_8c_1a3765ff7deb53af273e56acc25eeb3d03" kindref="member">lv_task_set_prio</ref>(<ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref><sp/>*<sp/>task,<sp/><ref refid="lv__task_8h_1a6c90931e339c8e7d69c2663729f64f36" kindref="member">lv_task_prio_t</ref><sp/>prio)</highlight></codeline>
<codeline lineno="264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(task-&gt;<ref refid="struct__lv__task__t_1a436283203b4f533a33a132de7938a672" kindref="member">prio</ref><sp/>==<sp/>prio)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Find<sp/>the<sp/>tasks<sp/>with<sp/>new<sp/>priority*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref><sp/>*<sp/>i;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__ll_8h_1a005b2840a74f5d536f4b65845c6961ae" kindref="member">LV_LL_READ</ref>(<ref refid="lv__gc_8h_1a56ab4f084c8075b22e02e1c99491c4cd" kindref="member">LV_GC_ROOT</ref>(_lv_task_ll),<sp/>i)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i-&gt;<ref refid="struct__lv__task__t_1a436283203b4f533a33a132de7938a672" kindref="member">prio</ref><sp/>&lt;=<sp/>prio)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>!=<sp/>task)<sp/><ref refid="lv__ll_8c_1ab059354e6df6d0c11c72f88532dbe49c" kindref="member">lv_ll_move_before</ref>(&amp;<ref refid="lv__gc_8h_1a56ab4f084c8075b22e02e1c99491c4cd" kindref="member">LV_GC_ROOT</ref>(_lv_task_ll),<sp/>task,<sp/>i);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*There<sp/>was<sp/>no<sp/>such<sp/>a<sp/>low<sp/>priority<sp/>so<sp/>far<sp/>then<sp/>add<sp/>the<sp/>node<sp/>to<sp/>the<sp/>tail*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__ll_8c_1ab059354e6df6d0c11c72f88532dbe49c" kindref="member">lv_ll_move_before</ref>(&amp;<ref refid="lv__gc_8h_1a56ab4f084c8075b22e02e1c99491c4cd" kindref="member">LV_GC_ROOT</ref>(_lv_task_ll),<sp/>task,<sp/>NULL);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>task-&gt;<ref refid="struct__lv__task__t_1a436283203b4f533a33a132de7938a672" kindref="member">prio</ref><sp/>=<sp/>prio;</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__task_8c_1a26a0623388938e311f72cad7b0eb7e38" kindref="member">lv_task_set_period</ref>(<ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref><sp/>*<sp/>task,<sp/>uint32_t<sp/>period)</highlight></codeline>
<codeline lineno="291"><highlight class="normal">{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>task-&gt;<ref refid="struct__lv__task__t_1acea86df3e8ac37d7f15d8810e59ac1e9" kindref="member">period</ref><sp/>=<sp/>period;</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__task_8c_1a13534e19f41075904115a60a3a2232aa" kindref="member">lv_task_ready</ref>(<ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref><sp/>*<sp/>task)</highlight></codeline>
<codeline lineno="300"><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>task-&gt;<ref refid="struct__lv__task__t_1a45e9f69602e1ffc1bbc14670dfa9eca4" kindref="member">last_run</ref><sp/>=<sp/><ref refid="lv__hal__tick_8c_1a051c47bcfb48282a75834d8dd0a8470c" kindref="member">lv_tick_get</ref>()<sp/>-<sp/>task-&gt;<ref refid="struct__lv__task__t_1acea86df3e8ac37d7f15d8810e59ac1e9" kindref="member">period</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__task_8c_1a5adcce5851ce6c54aba2af0fce2567da" kindref="member">lv_task_once</ref>(<ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref><sp/>*<sp/>task)</highlight></codeline>
<codeline lineno="309"><highlight class="normal">{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>task-&gt;<ref refid="struct__lv__task__t_1a818c2ee5166258ddf40655ca1a389a06" kindref="member">once</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__task_8c_1a415052f6b2a319f191fb50eb91e0e117" kindref="member">lv_task_reset</ref>(<ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref><sp/>*<sp/>task)</highlight></codeline>
<codeline lineno="319"><highlight class="normal">{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>task-&gt;<ref refid="struct__lv__task__t_1a45e9f69602e1ffc1bbc14670dfa9eca4" kindref="member">last_run</ref><sp/>=<sp/><ref refid="lv__hal__tick_8c_1a051c47bcfb48282a75834d8dd0a8470c" kindref="member">lv_tick_get</ref>();</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__task_8c_1a6d867c22a34e5150a1e3d0f376ada417" kindref="member">lv_task_enable</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>en)</highlight></codeline>
<codeline lineno="328"><highlight class="normal">{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_task_run<sp/>=<sp/>en;</highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal">uint8_t<sp/><ref refid="lv__task_8c_1aa1ed2cc262d5606bf7a5790d13b95c88" kindref="member">lv_task_get_idle</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>idle_last;</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/>*<sp/><sp/><sp/>STATIC<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lv_task_exec(<ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref><sp/>*<sp/>task)</highlight></codeline>
<codeline lineno="351"><highlight class="normal">{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>exec<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Execute<sp/>if<sp/>at<sp/>least<sp/>&apos;period&apos;<sp/>time<sp/>elapsed*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>elp<sp/>=<sp/><ref refid="lv__hal__tick_8c_1a632b8bf9b03d3a809d053508c06dc6d9" kindref="member">lv_tick_elaps</ref>(task-&gt;<ref refid="struct__lv__task__t_1a45e9f69602e1ffc1bbc14670dfa9eca4" kindref="member">last_run</ref>);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(elp<sp/>&gt;=<sp/>task-&gt;<ref refid="struct__lv__task__t_1acea86df3e8ac37d7f15d8810e59ac1e9" kindref="member">period</ref>)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task-&gt;<ref refid="struct__lv__task__t_1a45e9f69602e1ffc1bbc14670dfa9eca4" kindref="member">last_run</ref><sp/>=<sp/><ref refid="lv__hal__tick_8c_1a051c47bcfb48282a75834d8dd0a8470c" kindref="member">lv_tick_get</ref>();</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task_deleted<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task_created<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(task-&gt;<ref refid="struct__lv__task__t_1aeecd883579ab15e75e03e35916f1647d" kindref="member">task_cb</ref>)<sp/>task-&gt;<ref refid="struct__lv__task__t_1aeecd883579ab15e75e03e35916f1647d" kindref="member">task_cb</ref>(task);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Delete<sp/>if<sp/>it<sp/>was<sp/>a<sp/>one<sp/>shot<sp/>lv_task*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(task_deleted<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="comment">/*The<sp/>task<sp/>might<sp/>be<sp/>deleted<sp/>by<sp/>itself<sp/>as<sp/>well*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(task-&gt;<ref refid="struct__lv__task__t_1a818c2ee5166258ddf40655ca1a389a06" kindref="member">once</ref><sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__task_8c_1afde0b99f514da46d5af6548c62fb8c03" kindref="member">lv_task_del</ref>(task);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exec<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exec;</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_task.c"/>
  </compounddef>
</doxygen>
