# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, LVGL LLC
# This file is distributed under the same license as the LVGL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: LVGL v7.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-06-17 10:22+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../intro/index.md:5
msgid "Introduction"
msgstr ""

#: ../intro/index.md:7
msgid ""
"LVGL (Light and Versatile Graphic Library) is a free and open-source "
"graphics library providing everything you need to create embedded GUI "
"with easy-to-use graphical elements, beautiful visual effects and low "
"memory footprint."
msgstr ""

#: ../intro/index.md:9
msgid "Key features"
msgstr ""

#: ../intro/index.md:10
msgid ""
"Powerful building blocks such as buttons, charts, lists, sliders, images "
"etc."
msgstr ""

#: ../intro/index.md:11
msgid ""
"Advanced graphics with animations, anti-aliasing, opacity, smooth "
"scrolling"
msgstr ""

#: ../intro/index.md:12
msgid "Various input devices such as touchpad, mouse, keyboard, encoder etc."
msgstr ""

#: ../intro/index.md:13
msgid "Multi-language support with UTF-8 encoding"
msgstr ""

#: ../intro/index.md:14
msgid ""
"Multi-display support, i.e. use more TFT, monochrome displays "
"simultaneously"
msgstr ""

#: ../intro/index.md:15
msgid "Fully customizable graphic elements"
msgstr ""

#: ../intro/index.md:16
msgid "Hardware independent to use with any microcontroller or display"
msgstr ""

#: ../intro/index.md:17
msgid "Scalable to operate with little memory (64 kB Flash, 16 kB RAM)"
msgstr ""

#: ../intro/index.md:18
msgid "OS, External memory and GPU supported but not required"
msgstr ""

#: ../intro/index.md:19
msgid "Single frame buffer operation even with advanced graphical effects"
msgstr ""

#: ../intro/index.md:20
msgid "Written in C for maximal compatibility (C++ compatible)"
msgstr ""

#: ../intro/index.md:21
msgid "Simulator to start embedded GUI design on a PC without embedded hardware"
msgstr ""

#: ../intro/index.md:22
msgid "Binding to MicroPython"
msgstr ""

#: ../intro/index.md:23
msgid "Tutorials, examples, themes for rapid GUI design"
msgstr ""

#: ../intro/index.md:24
msgid "Documentation is available as online and offline"
msgstr ""

#: ../intro/index.md:25
msgid "Free and open-source under MIT license"
msgstr ""

#: ../intro/index.md:27
msgid "Requirements"
msgstr ""

#: ../intro/index.md:28
msgid ""
"Basically, every modern controller  (which is able to drive a display( is"
" suitable to run LVGL. The minimal requirements are:"
msgstr ""

#: ../intro/index.md:29
msgid "16, 32 or 64 bit microcontroller or processor"
msgstr ""

#: ../intro/index.md:30
msgid "> 16 MHz clock speed is recommended"
msgstr ""

#: ../intro/index.md:31
msgid ""
"Flash/ROM: > 64 kB for the very essential components (> 180 kB is "
"recommended)"
msgstr ""

#: ../intro/index.md:32
msgid "RAM:"
msgstr ""

#: ../intro/index.md:33
msgid "Static RAM usage: ~2 kB depending on the used features and objects types"
msgstr ""

#: ../intro/index.md:34
msgid "Stack: > 2kB (> 8 kB is recommended)"
msgstr ""

#: ../intro/index.md:35
msgid ""
"Dynamic data (heap): > 2 KB (> 16 kB is recommended if using several "
"objects). Set by LV_MEM_SIZE in lv_conf.h."
msgstr ""

#: ../intro/index.md:37
msgid ""
"Display buffer:  > \"Horizontal resolution\" pixels (> 10 × \"Horizontal "
"resolution\" is recommended)"
msgstr ""

#: ../intro/index.md:38
msgid "One frame buffer in the MCU or in external display controller"
msgstr ""

#: ../intro/index.md:39
msgid "C99 or newer compiler"
msgstr ""

#: ../intro/index.md:40
msgid "Basic C (or C++) knowledge: pointers, structs, callbacks"
msgstr ""

#: ../intro/index.md:42
msgid ""
"Note that the memory usage might vary depending on the architecture, "
"compiler and build options."
msgstr ""

#: ../intro/index.md:44
msgid "License"
msgstr ""

#: ../intro/index.md:45
msgid "MIT free, notice Let us know"
msgstr ""

#: ../intro/index.md:48
msgid ""
"you get repos for free, and community support, best effort. if need more "
"see the services"
msgstr ""

#: ../intro/index.md:50
msgid "Repository layout"
msgstr ""

#: ../intro/index.md:51
msgid "lvgl"
msgstr ""

#: ../intro/index.md:52
msgid "lv_drivers"
msgstr ""

#: ../intro/index.md:53
msgid "lv_examples"
msgstr ""

#: ../intro/index.md:54
msgid "docs"
msgstr ""

#: ../intro/index.md:55
msgid "blog"
msgstr ""

#: ../intro/index.md:56
msgid "lv_sim_..."
msgstr ""

#: ../intro/index.md:57
msgid "lv_port_..."
msgstr ""

#: ../intro/index.md:58
msgid "lv_binding_.."
msgstr ""

#: ../intro/index.md:59
msgid "lv_..."
msgstr ""

#: ../intro/index.md:61
msgid "stale"
msgstr ""

#: ../intro/index.md:63
msgid "Release policy"
msgstr ""

#: ../intro/index.md:65
msgid "LVGL follows the rules of Semantic versioning:"
msgstr ""

#: ../intro/index.md:66
msgid "Major versions for incompatible API changes. E.g. v5.0.0, v6.0.0"
msgstr ""

#: ../intro/index.md:67
msgid ""
"Minor version for new but backward-compatible functionalities. E.g. "
"v6.1.0, v6.2.0"
msgstr ""

#: ../intro/index.md:68
msgid "Patch version for backward-compatible bug fixes. E.g. v6.1.1, v6.1.2"
msgstr ""

#: ../intro/index.md:70
msgid "Branches:"
msgstr ""

#: ../intro/index.md:71
msgid "master most recent version, patches are merged directly here."
msgstr ""

#: ../intro/index.md:72
msgid "dev merge new features here until they are merged into master."
msgstr ""

#: ../intro/index.md:73
msgid ""
"release/vX there is a branch for every major version to allow adding "
"specific, not forward compatible fixes."
msgstr ""

#: ../intro/index.md:75
msgid "LVGL has a monthly periodic release cycle."
msgstr ""

#: ../intro/index.md:76
msgid ""
"1st Tuesday of the month    - Make a major, minor, or patch release from "
"master depending on the new features.    - After that merge only patches "
"into master and add new features into the dev."
msgstr ""

#: ../intro/index.md:79
msgid ""
"3rd Tuesday of the month    - Make a patch release from master.    - "
"After that merge the new features from the dev to master branch.    - In "
"the rest of the month merge only patches into master and new features "
"into dev branch."
msgstr ""

#: ../intro/index.md:84
msgid "tags"
msgstr ""

#: ../intro/index.md:86
msgid "Side projects are update with best effort."
msgstr ""

#: ../intro/index.md:88
msgid "Version support"
msgstr ""

#: ../intro/index.md:90
msgid "FAQ"
msgstr ""

#: ../intro/index.md:92
msgid "Where to get started?"
msgstr ""

#: ../intro/index.md:93
msgid "For a general overview of LVGL visit lvgl.io"
msgstr ""

#: ../intro/index.md:94
msgid "Go to the Get started section to learn the basics of LVGL"
msgstr ""

#: ../intro/index.md:95
msgid "A detailed porting guide can be found in the Porting section"
msgstr ""

#: ../intro/index.md:96
msgid "To learn how LVGL works go to the Overview"
msgstr ""

#: ../intro/index.md:97
msgid ""
"To see the source code of the library check it on GitHub: "
"https://github.com/lvgl/lvgl/"
msgstr ""

#: ../intro/index.md:98
msgid "To read tutorials or share your own experiences go to the Blog"
msgstr ""

#: ../intro/index.md:100
msgid "Where can I ask questions?"
msgstr ""

#: ../intro/index.md:101
msgid "You ask questions in the Forum: https://forum.lvgl.io/."
msgstr ""

#: ../intro/index.md:103
msgid ""
"We use GitHub issues for development related discussion. So you should "
"use them only if your question or issue is tightly related to the "
"development of the library."
msgstr ""

#: ../intro/index.md:106
msgid "Is my MCU/hardware supported?"
msgstr ""

#: ../intro/index.md:107
msgid ""
"Every MCU which is capable of driving a display via Parallel port, SPI, "
"RGB interface or anything else and fulfills the Requirements is supported"
" by LLVGL."
msgstr ""

#: ../intro/index.md:109
msgid "It includes:"
msgstr ""

#: ../intro/index.md:110
msgid ""
"\"Common\" MCUs like STM32F, STM32H, NXP Kinetis, LPC, iMX, dsPIC33, "
"PIC32 etc."
msgstr ""

#: ../intro/index.md:111
msgid "Bluetooth, GSM, WiFi modules like Nordic NRF and Espressif ESP32"
msgstr ""

#: ../intro/index.md:112
msgid ""
"Linux frame buffer like /dev/fb0 which includes Single board computers "
"too like Raspberry Pi"
msgstr ""

#: ../intro/index.md:113
msgid ""
"And anything else with a strong enough MCU and a periphery to drive a "
"display"
msgstr ""

#: ../intro/index.md:115
msgid "Is my display supported?"
msgstr ""

#: ../intro/index.md:116
msgid ""
"LVGL needs just one simple driver function to copy an array of pixels "
"into a given area of the display. If you can do this with your display "
"then you can use that display with LVGL."
msgstr ""

#: ../intro/index.md:119
msgid "Some examples of the supported display types:"
msgstr ""

#: ../intro/index.md:120
msgid "TFTs with 16 or 24 bit color depth"
msgstr ""

#: ../intro/index.md:121
msgid "Monitors with HDMI port"
msgstr ""

#: ../intro/index.md:122
msgid "Small monochrome displays"
msgstr ""

#: ../intro/index.md:123
msgid "Gray-scale displays"
msgstr ""

#: ../intro/index.md:124
msgid "even LED matrices"
msgstr ""

#: ../intro/index.md:125
msgid "or any other display where you can control the color/state of the pixels"
msgstr ""

#: ../intro/index.md:127
msgid "See the Porting section to learn more."
msgstr ""

#: ../intro/index.md:129
msgid "Is LVGL free? How can I use it in a commercial product?"
msgstr ""

#: ../intro/index.md:130
msgid ""
"LVGL comes with MIT license which means you can download and use it for "
"any purpose you want."
msgstr ""

#: ../intro/index.md:132
msgid ""
"The only thing you need to do is to add a notice about you are using LVGL"
" in you product. This notice can be placed in the user guide, on you "
"website, on an about screen, or anywhere else where users might see it."
msgstr ""

#: ../intro/index.md:135
msgid "Nothing happens, my display driver is not called. What have I missed?"
msgstr ""

#: ../intro/index.md:136
msgid ""
"Be sure you are calling lv_tick_inc(x) in an interrupt and "
"lv_task_handler() in your main while(1)."
msgstr ""

#: ../intro/index.md:138
msgid "Learn more in the Tick and Task handler section."
msgstr ""

#: ../intro/index.md:140
msgid ""
"Why the display driver is called only once? Only the upper part of the "
"display is refreshed."
msgstr ""

#: ../intro/index.md:141
msgid ""
"Be sure you are calling lv_disp_flush_ready(drv) at the end of your "
"\"display flush callback\"."
msgstr ""

#: ../intro/index.md:143
msgid "Why I see only garbage on the screen?"
msgstr ""

#: ../intro/index.md:144
msgid ""
"Probably there a bug in your display driver. Try the following code "
"without using LVGL. You should see a square with red-blue gradient"
msgstr ""

#: ../intro/index.md:168
msgid "Why I see non-sense colors on the screen?"
msgstr ""

#: ../intro/index.md:169
msgid ""
"Probably LVGL's color format is not compatible with your displays color "
"format. Check LV_COLOR_DEPTH in lv_conf.h."
msgstr ""

#: ../intro/index.md:171
msgid ""
"If you are using 16 bit colors with SPI (or other byte-oriented "
"interface) probably you need to set LV_COLOR_16_SWAP  1 in lv_conf.h. It "
"swaps the upper and lower bytes of the pixels."
msgstr ""

#: ../intro/index.md:174
msgid "How to speed up my UI?"
msgstr ""

#: ../intro/index.md:175
msgid "Turn on compiler optimization and enable cache if your MCU has"
msgstr ""

#: ../intro/index.md:176
msgid "Increase the size of the display buffer"
msgstr ""

#: ../intro/index.md:177
msgid ""
"Use 2 display buffers and flush the buffer with DMA (or similar "
"periphery) in the background"
msgstr ""

#: ../intro/index.md:178
msgid ""
"Increase the clock speed of the SPI or Parallel port if you use them to "
"drive the display"
msgstr ""

#: ../intro/index.md:179
msgid ""
"If your display has SPI port consider changing to a model with parallel "
"because it has much higher throughput"
msgstr ""

#: ../intro/index.md:180
msgid ""
"Keep the display buffer in the internal RAM (not in external SRAM) "
"because LVGL uses it a lot and it should have a small access time"
msgstr ""

#: ../intro/index.md:182
msgid "How to reduce flash/ROM usage?"
msgstr ""

#: ../intro/index.md:183
msgid ""
"You can disable all the unused feature (such as animations, file system, "
"GPU etc.) and object types in lv_conf.h."
msgstr ""

#: ../intro/index.md:185
msgid "If you are using GCC you can add"
msgstr ""

#: ../intro/index.md:186
msgid "-fdata-sections -ffunction-sections compiler flags"
msgstr ""

#: ../intro/index.md:187
msgid "--gc-sections linker flag"
msgstr ""

#: ../intro/index.md:189
msgid "to remove unused functions and variables from the final binary"
msgstr ""

#: ../intro/index.md:191
msgid "How to reduce the RAM usage"
msgstr ""

#: ../intro/index.md:192
msgid "Lower the size of the Display buffer"
msgstr ""

#: ../intro/index.md:193
msgid ""
"Reduce LV_MEM_SIZE in lv_conf.h. This memory used when you create objects"
" like buttons, labels, etc."
msgstr ""

#: ../intro/index.md:194
msgid ""
"To work with lower LV_MEM_SIZE you can create the objects only when "
"required and deleted them when they are not required anymore"
msgstr ""

#: ../intro/index.md:196
msgid "How to work with an operating system?"
msgstr ""

#: ../intro/index.md:198
msgid ""
"To work with an operating system where tasks can interrupt each other you"
" should protect LVGL related function calls with a mutex. S ee the "
"Operating system and interrupts section to learn more."
msgstr ""

#: ../intro/index.md:201
msgid "How to contribute to LVGL?"
msgstr ""

#: ../intro/index.md:202
msgid "There are several ways to contribute to LVGL:"
msgstr ""

#: ../intro/index.md:203
msgid "Write a few lines about your project to inspire others in the Forum"
msgstr ""

#: ../intro/index.md:204
msgid "Help others questions in the [Froum]"
msgstr ""

#: ../intro/index.md:205
msgid "Report and/or fix bugs"
msgstr ""

#: ../intro/index.md:206
msgid "Suggest and/or implement new features"
msgstr ""

#: ../intro/index.md:207
msgid "Improve and/or translate the documentation"
msgstr ""

#: ../intro/index.md:208
msgid "Write a blog post about your experiences"
msgstr ""

#: ../intro/index.md:210
msgid "To learn more see Contributing guide"
msgstr ""

#~ msgid "How is LVGL versioned?"
#~ msgstr ""

#~ msgid ""
#~ "1st Tuesday of the month   - Make"
#~ " a major, minor, or patch release "
#~ "from master depending on the new "
#~ "features.   - After that merge only "
#~ "patches into master and add new "
#~ "features into the dev."
#~ msgstr ""

#~ msgid ""
#~ "3rd Tuesday of the month   - Make"
#~ " a patch release from master.   - "
#~ "After that merge the new features "
#~ "from the dev to master branch.   -"
#~ " In the rest of the month merge"
#~ " only patches into master and new "
#~ "features into dev branch."
#~ msgstr ""

