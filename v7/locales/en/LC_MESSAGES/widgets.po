# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, LVGL LLC
# This file is distributed under the same license as the LVGL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: LVGL v7.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-06-16 08:40+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../widgets/arc.md:4
msgid "Arc (lv_arc)"
msgstr ""

#: ../widgets/arc.md:6 ../widgets/bar.md:6 ../widgets/btn.md:6
#: ../widgets/btnmatrix.md:6 ../widgets/calendar.md:6 ../widgets/calendar.md:30
#: ../widgets/canvas.md:6 ../widgets/chart.md:6 ../widgets/checkbox.md:6
#: ../widgets/cont.md:6 ../widgets/cpicker.md:6 ../widgets/dropdown.md:6
#: ../widgets/dropdown.md:32 ../widgets/gauge.md:6 ../widgets/img.md:6
#: ../widgets/imgbtn.md:6 ../widgets/keyboard.md:7 ../widgets/label.md:6
#: ../widgets/led.md:6 ../widgets/line.md:6 ../widgets/linemeter.md:6
#: ../widgets/list.md:6 ../widgets/msgbox.md:6 ../widgets/obj.md:6
#: ../widgets/objmask.md:6 ../widgets/page.md:6 ../widgets/roller.md:6
#: ../widgets/slider.md:6 ../widgets/spinbox.md:6 ../widgets/spinner.md:6
#: ../widgets/switch.md:7 ../widgets/table.md:6 ../widgets/tabview.md:6
#: ../widgets/textarea.md:6 ../widgets/tileview.md:6 ../widgets/win.md:6
msgid "Overview"
msgstr ""

#: ../widgets/arc.md:8
msgid ""
"The Arc are consists of a background and a foreground arc. Both can have "
"start and end angles and thickness."
msgstr ""

#: ../widgets/arc.md:10 ../widgets/bar.md:14 ../widgets/btn.md:11
#: ../widgets/btnmatrix.md:14 ../widgets/calendar.md:15 ../widgets/canvas.md:11
#: ../widgets/chart.md:13 ../widgets/checkbox.md:10 ../widgets/cpicker.md:14
#: ../widgets/dropdown.md:14 ../widgets/gauge.md:9 ../widgets/img.md:12
#: ../widgets/imgbtn.md:11 ../widgets/keyboard.md:11 ../widgets/label.md:9
#: ../widgets/led.md:10 ../widgets/line.md:9 ../widgets/linemeter.md:10
#: ../widgets/list.md:11 ../widgets/msgbox.md:12 ../widgets/objmask.md:9
#: ../widgets/page.md:12 ../widgets/roller.md:10 ../widgets/slider.md:10
#: ../widgets/spinbox.md:10 ../widgets/spinner.md:9 ../widgets/switch.md:11
#: ../widgets/table.md:12 ../widgets/tabview.md:10 ../widgets/textarea.md:12
#: ../widgets/tileview.md:13 ../widgets/win.md:11
msgid "Parts and Styles"
msgstr ""

#: ../widgets/arc.md:11
msgid ""
"The Arc's main part is called LV_ARC_PART_MAIN. It draws a background "
"using the typical background style properties and an arc using the line "
"style properties. The arc's size and position will respect the padding "
"style properties."
msgstr ""

#: ../widgets/arc.md:14
msgid ""
"LV_ARC_PART_INDIC is virtual part and it draws an other arc using the "
"line style proeprties. It's padding values are interpreted relative to "
"the background arc. The radius of the indicator arc will be modified "
"according to the greatest padding value."
msgstr ""

#: ../widgets/arc.md:17 ../widgets/bar.md:22 ../widgets/btn.md:23
#: ../widgets/btnmatrix.md:21 ../widgets/calendar.md:28 ../widgets/canvas.md:14
#: ../widgets/chart.md:34 ../widgets/checkbox.md:19 ../widgets/cpicker.md:21
#: ../widgets/dropdown.md:30 ../widgets/gauge.md:19 ../widgets/img.md:16
#: ../widgets/imgbtn.md:15 ../widgets/keyboard.md:16 ../widgets/label.md:13
#: ../widgets/led.md:13 ../widgets/line.md:12 ../widgets/linemeter.md:14
#: ../widgets/list.md:22 ../widgets/msgbox.md:20 ../widgets/objmask.md:12
#: ../widgets/page.md:22 ../widgets/roller.md:18 ../widgets/slider.md:21
#: ../widgets/spinner.md:17 ../widgets/table.md:25 ../widgets/tabview.md:29
#: ../widgets/textarea.md:23 ../widgets/tileview.md:19
msgid "Usage"
msgstr ""

#: ../widgets/arc.md:19
msgid "Angles"
msgstr ""

#: ../widgets/arc.md:21
msgid ""
"To set the angles of the background, use the lv_arc_set_bg_angles(arc, "
"start_angle, end_angle) function or lv_arc_set_bg_start/end_angle(arc, "
"start_angle). Zero degree is at the middle right (3 o'clock) of the "
"object and the degrees are increasing in a clockwise direction. The "
"angles should be in [0;360] range."
msgstr ""

#: ../widgets/arc.md:25
msgid ""
"Similarly, lv_arc_set_angles(arc, start_angle, end_angle) function or "
"lv_arc_set_start/end_angle(arc, start_angle) sets the angles of the "
"indicator arc."
msgstr ""

#: ../widgets/arc.md:27 ../widgets/bar.md:37 ../widgets/btn.md:47
#: ../widgets/btnmatrix.md:72 ../widgets/calendar.md:50 ../widgets/canvas.md:68
#: ../widgets/chart.md:85 ../widgets/checkbox.md:32 ../widgets/cont.md:40
#: ../widgets/cpicker.md:40 ../widgets/dropdown.md:74 ../widgets/gauge.md:40
#: ../widgets/img.md:94 ../widgets/imgbtn.md:29 ../widgets/keyboard.md:49
#: ../widgets/label.md:77 ../widgets/led.md:21 ../widgets/line.md:26
#: ../widgets/linemeter.md:33 ../widgets/list.md:59 ../widgets/msgbox.md:36
#: ../widgets/obj.md:106 ../widgets/obj.md:193 ../widgets/objmask.md:40
#: ../widgets/page.md:78 ../widgets/roller.md:42 ../widgets/slider.md:37
#: ../widgets/spinbox.md:31 ../widgets/spinner.md:36 ../widgets/switch.md:29
#: ../widgets/table.md:72 ../widgets/tabview.md:61 ../widgets/textarea.md:116
#: ../widgets/tileview.md:69 ../widgets/win.md:51
msgid "Events"
msgstr ""

#: ../widgets/arc.md:28 ../widgets/bar.md:38 ../widgets/chart.md:86
#: ../widgets/cont.md:41 ../widgets/cpicker.md:41 ../widgets/gauge.md:41
#: ../widgets/img.md:95 ../widgets/label.md:78 ../widgets/led.md:22
#: ../widgets/line.md:27 ../widgets/linemeter.md:34 ../widgets/list.md:60
#: ../widgets/obj.md:194 ../widgets/objmask.md:41 ../widgets/page.md:79
#: ../widgets/spinner.md:37 ../widgets/table.md:73 ../widgets/win.md:52
msgid "Only the Generic events are sent by the object type."
msgstr ""

#: ../widgets/arc.md:30 ../widgets/bar.md:40 ../widgets/btn.md:51
#: ../widgets/btnmatrix.md:76 ../widgets/canvas.md:73 ../widgets/chart.md:88
#: ../widgets/checkbox.md:38 ../widgets/cont.md:43 ../widgets/cpicker.md:43
#: ../widgets/dropdown.md:78 ../widgets/gauge.md:43 ../widgets/img.md:97
#: ../widgets/imgbtn.md:35 ../widgets/keyboard.md:59 ../widgets/label.md:80
#: ../widgets/led.md:24 ../widgets/line.md:29 ../widgets/linemeter.md:36
#: ../widgets/list.md:62 ../widgets/msgbox.md:42 ../widgets/obj.md:196
#: ../widgets/objmask.md:43 ../widgets/page.md:84 ../widgets/roller.md:46
#: ../widgets/spinbox.md:36 ../widgets/table.md:75 ../widgets/tabview.md:65
#: ../widgets/win.md:54
msgid "Learn more about Events."
msgstr ""

#: ../widgets/arc.md:32 ../widgets/bar.md:42 ../widgets/btn.md:53
#: ../widgets/btnmatrix.md:78 ../widgets/calendar.md:56 ../widgets/canvas.md:75
#: ../widgets/chart.md:90 ../widgets/checkbox.md:40 ../widgets/cont.md:45
#: ../widgets/cpicker.md:45 ../widgets/dropdown.md:80 ../widgets/gauge.md:45
#: ../widgets/img.md:99 ../widgets/imgbtn.md:37 ../widgets/keyboard.md:61
#: ../widgets/label.md:82 ../widgets/led.md:26 ../widgets/line.md:31
#: ../widgets/linemeter.md:38 ../widgets/list.md:64 ../widgets/obj.md:198
#: ../widgets/objmask.md:45 ../widgets/roller.md:48 ../widgets/slider.md:41
#: ../widgets/spinbox.md:38 ../widgets/spinner.md:39 ../widgets/switch.md:33
#: ../widgets/table.md:77 ../widgets/tabview.md:67 ../widgets/textarea.md:123
#: ../widgets/tileview.md:73 ../widgets/win.md:56
msgid "Keys"
msgstr ""

#: ../widgets/arc.md:33 ../widgets/bar.md:43 ../widgets/calendar.md:57
#: ../widgets/canvas.md:76 ../widgets/chart.md:91 ../widgets/cont.md:46
#: ../widgets/gauge.md:46 ../widgets/img.md:100 ../widgets/label.md:83
#: ../widgets/led.md:27 ../widgets/line.md:32 ../widgets/linemeter.md:39
#: ../widgets/obj.md:199 ../widgets/objmask.md:46 ../widgets/spinner.md:40
#: ../widgets/table.md:79
msgid "No Keys are processed by the object type."
msgstr ""

#: ../widgets/arc.md:35 ../widgets/bar.md:45 ../widgets/btn.md:60
#: ../widgets/btnmatrix.md:84 ../widgets/calendar.md:59 ../widgets/canvas.md:78
#: ../widgets/chart.md:93 ../widgets/checkbox.md:47 ../widgets/cont.md:48
#: ../widgets/cpicker.md:50 ../widgets/gauge.md:48 ../widgets/img.md:102
#: ../widgets/imgbtn.md:44 ../widgets/keyboard.md:67 ../widgets/label.md:85
#: ../widgets/led.md:29 ../widgets/line.md:34 ../widgets/linemeter.md:41
#: ../widgets/list.md:75 ../widgets/msgbox.md:51 ../widgets/obj.md:201
#: ../widgets/objmask.md:48 ../widgets/page.md:91 ../widgets/slider.md:45
#: ../widgets/spinner.md:42 ../widgets/switch.md:37 ../widgets/table.md:81
#: ../widgets/tabview.md:73 ../widgets/textarea.md:127
#: ../widgets/tileview.md:77 ../widgets/win.md:61
msgid "Learn more about Keys."
msgstr ""

#: ../widgets/arc.md:37 ../widgets/bar.md:47 ../widgets/btn.md:62
#: ../widgets/btnmatrix.md:86 ../widgets/calendar.md:61 ../widgets/canvas.md:80
#: ../widgets/chart.md:95 ../widgets/checkbox.md:49 ../widgets/cont.md:50
#: ../widgets/cpicker.md:52 ../widgets/dropdown.md:86 ../widgets/gauge.md:50
#: ../widgets/img.md:104 ../widgets/imgbtn.md:46 ../widgets/label.md:87
#: ../widgets/led.md:31 ../widgets/line.md:36 ../widgets/linemeter.md:43
#: ../widgets/list.md:77 ../widgets/msgbox.md:53 ../widgets/obj.md:203
#: ../widgets/objmask.md:50 ../widgets/page.md:93 ../widgets/roller.md:54
#: ../widgets/slider.md:47 ../widgets/spinbox.md:44 ../widgets/spinbox.md:60
#: ../widgets/spinner.md:44 ../widgets/switch.md:39 ../widgets/table.md:83
#: ../widgets/tabview.md:75 ../widgets/textarea.md:129
#: ../widgets/tileview.md:79 ../widgets/win.md:63
msgid "Example"
msgstr ""

#: ../lv_examples/src/lv_ex_widgets/lv_ex_arc/index.rst:14
#: ../lv_examples/src/lv_ex_widgets/lv_ex_arc/index.rst:29
#: ../lv_examples/src/lv_ex_widgets/lv_ex_bar/index.rst:13
#: ../lv_examples/src/lv_ex_widgets/lv_ex_btn/index.rst:14
#: ../lv_examples/src/lv_ex_widgets/lv_ex_btn/index.rst:26
#: ../lv_examples/src/lv_ex_widgets/lv_ex_btnmatrix/index.rst:14
#: ../lv_examples/src/lv_ex_widgets/lv_ex_calendar/index.rst:13
#: ../lv_examples/src/lv_ex_widgets/lv_ex_canvas/index.rst:14
#: ../lv_examples/src/lv_ex_widgets/lv_ex_canvas/index.rst:29
#: ../lv_examples/src/lv_ex_widgets/lv_ex_chart/index.rst:13
#: ../lv_examples/src/lv_ex_widgets/lv_ex_chart/index.rst:26
#: ../lv_examples/src/lv_ex_widgets/lv_ex_checkbox/index.rst:13
#: ../lv_examples/src/lv_ex_widgets/lv_ex_cont/index.rst:14
#: ../lv_examples/src/lv_ex_widgets/lv_ex_cpicker/index.rst:14
#: ../lv_examples/src/lv_ex_widgets/lv_ex_dropdown/index.rst:14
#: ../lv_examples/src/lv_ex_widgets/lv_ex_dropdown/index.rst:29
#: ../lv_examples/src/lv_ex_widgets/lv_ex_gauge/index.rst:14
#: ../lv_examples/src/lv_ex_widgets/lv_ex_img/index.rst:14
#: ../lv_examples/src/lv_ex_widgets/lv_ex_img/index.rst:30
#: ../lv_examples/src/lv_ex_widgets/lv_ex_imgbtn/index.rst:14
#: ../lv_examples/src/lv_ex_widgets/lv_ex_keyboard/index.rst:14
#: ../lv_examples/src/lv_ex_widgets/lv_ex_label/index.rst:14
#: ../lv_examples/src/lv_ex_widgets/lv_ex_label/index.rst:30
#: ../lv_examples/src/lv_ex_widgets/lv_ex_label/index.rst:45
#: ../lv_examples/src/lv_ex_widgets/lv_ex_led/index.rst:14
#: ../lv_examples/src/lv_ex_widgets/lv_ex_line/index.rst:14
#: ../lv_examples/src/lv_ex_widgets/lv_ex_linemeter/index.rst:14
#: ../lv_examples/src/lv_ex_widgets/lv_ex_list/index.rst:14
#: ../lv_examples/src/lv_ex_widgets/lv_ex_msgbox/index.rst:14
#: ../lv_examples/src/lv_ex_widgets/lv_ex_msgbox/index.rst:31
#: ../lv_examples/src/lv_ex_widgets/lv_ex_obj/index.rst:14
#: ../lv_examples/src/lv_ex_widgets/lv_ex_objmask/index.rst:14
#: ../lv_examples/src/lv_ex_widgets/lv_ex_objmask/index.rst:30
#: ../lv_examples/src/lv_ex_widgets/lv_ex_page/index.rst:14
#: ../lv_examples/src/lv_ex_widgets/lv_ex_roller/index.rst:14
#: ../lv_examples/src/lv_ex_widgets/lv_ex_slider/index.rst:14
#: ../lv_examples/src/lv_ex_widgets/lv_ex_slider/index.rst:30
#: ../lv_examples/src/lv_ex_widgets/lv_ex_spinbox/index.rst:14
#: ../lv_examples/src/lv_ex_widgets/lv_ex_spinner/index.rst:14
#: ../lv_examples/src/lv_ex_widgets/lv_ex_switch/index.rst:14
#: ../lv_examples/src/lv_ex_widgets/lv_ex_table/index.rst:14
#: ../lv_examples/src/lv_ex_widgets/lv_ex_tabview/index.rst:14
#: ../lv_examples/src/lv_ex_widgets/lv_ex_textarea/index.rst:14
#: ../lv_examples/src/lv_ex_widgets/lv_ex_textarea/index.rst:30
#: ../lv_examples/src/lv_ex_widgets/lv_ex_tileview/index.rst:14
#: ../lv_examples/src/lv_ex_widgets/lv_ex_win/index.rst:14
msgid "code"
msgstr ""

#: ../lv_examples/src/lv_ex_widgets/lv_ex_arc/index.rst:37
#: ../lv_examples/src/lv_ex_widgets/lv_ex_bar/index.rst:21
#: ../lv_examples/src/lv_ex_widgets/lv_ex_btn/index.rst:35
#: ../lv_examples/src/lv_ex_widgets/lv_ex_btnmatrix/index.rst:22
#: ../lv_examples/src/lv_ex_widgets/lv_ex_calendar/index.rst:21
#: ../lv_examples/src/lv_ex_widgets/lv_ex_canvas/index.rst:38
#: ../lv_examples/src/lv_ex_widgets/lv_ex_chart/index.rst:35
#: ../lv_examples/src/lv_ex_widgets/lv_ex_checkbox/index.rst:21
#: ../lv_examples/src/lv_ex_widgets/lv_ex_cont/index.rst:22
#: ../lv_examples/src/lv_ex_widgets/lv_ex_cpicker/index.rst:22
#: ../lv_examples/src/lv_ex_widgets/lv_ex_dropdown/index.rst:37
#: ../lv_examples/src/lv_ex_widgets/lv_ex_gauge/index.rst:22
#: ../lv_examples/src/lv_ex_widgets/lv_ex_img/index.rst:39
#: ../lv_examples/src/lv_ex_widgets/lv_ex_imgbtn/index.rst:22
#: ../lv_examples/src/lv_ex_widgets/lv_ex_keyboard/index.rst:25
#: ../lv_examples/src/lv_ex_widgets/lv_ex_label/index.rst:54
#: ../lv_examples/src/lv_ex_widgets/lv_ex_led/index.rst:22
#: ../lv_examples/src/lv_ex_widgets/lv_ex_line/index.rst:22
#: ../lv_examples/src/lv_ex_widgets/lv_ex_linemeter/index.rst:22
#: ../lv_examples/src/lv_ex_widgets/lv_ex_list/index.rst:22
#: ../lv_examples/src/lv_ex_widgets/lv_ex_msgbox/index.rst:40
#: ../lv_examples/src/lv_ex_widgets/lv_ex_obj/index.rst:22
#: ../lv_examples/src/lv_ex_widgets/lv_ex_objmask/index.rst:38
#: ../lv_examples/src/lv_ex_widgets/lv_ex_page/index.rst:22
#: ../lv_examples/src/lv_ex_widgets/lv_ex_roller/index.rst:22
#: ../lv_examples/src/lv_ex_widgets/lv_ex_slider/index.rst:39
#: ../lv_examples/src/lv_ex_widgets/lv_ex_spinbox/index.rst:22
#: ../lv_examples/src/lv_ex_widgets/lv_ex_switch/index.rst:22
#: ../lv_examples/src/lv_ex_widgets/lv_ex_table/index.rst:22
#: ../lv_examples/src/lv_ex_widgets/lv_ex_tabview/index.rst:22
#: ../lv_examples/src/lv_ex_widgets/lv_ex_textarea/index.rst:38
#: ../lv_examples/src/lv_ex_widgets/lv_ex_tileview/index.rst:22
#: ../lv_examples/src/lv_ex_widgets/lv_ex_win/index.rst:22
#: ../widgets/spinner.md:53 ../widgets/table.md:92
msgid "No examples yet."
msgstr ""

#: ../widgets/arc.md:45 ../widgets/bar.md:55 ../widgets/btn.md:69
#: ../widgets/btnmatrix.md:94 ../widgets/calendar.md:69 ../widgets/canvas.md:87
#: ../widgets/chart.md:103 ../widgets/checkbox.md:57 ../widgets/cont.md:58
#: ../widgets/cpicker.md:60 ../widgets/dropdown.md:94 ../widgets/gauge.md:57
#: ../widgets/img.md:112 ../widgets/imgbtn.md:54 ../widgets/keyboard.md:77
#: ../widgets/label.md:95 ../widgets/led.md:39 ../widgets/line.md:44
#: ../widgets/linemeter.md:51 ../widgets/list.md:85 ../widgets/msgbox.md:61
#: ../widgets/obj.md:211 ../widgets/objmask.md:58 ../widgets/page.md:101
#: ../widgets/roller.md:62 ../widgets/slider.md:55 ../widgets/spinbox.md:52
#: ../widgets/spinner.md:55 ../widgets/switch.md:47 ../widgets/table.md:94
#: ../widgets/tabview.md:83 ../widgets/textarea.md:137
#: ../widgets/tileview.md:87 ../widgets/win.md:71
msgid "API"
msgstr ""

#: ../widgets/arc.md ../widgets/bar.md ../widgets/btn.md
#: ../widgets/btnmatrix.md ../widgets/calendar.md ../widgets/canvas.md
#: ../widgets/chart.md ../widgets/checkbox.md ../widgets/cont.md
#: ../widgets/cpicker.md ../widgets/dropdown.md ../widgets/gauge.md
#: ../widgets/img.md ../widgets/imgbtn.md ../widgets/keyboard.md
#: ../widgets/label.md ../widgets/led.md ../widgets/line.md
#: ../widgets/linemeter.md ../widgets/list.md ../widgets/msgbox.md
#: ../widgets/obj.md ../widgets/objmask.md ../widgets/page.md
#: ../widgets/roller.md ../widgets/slider.md ../widgets/spinbox.md
#: ../widgets/spinner.md ../widgets/switch.md ../widgets/tabview.md
#: ../widgets/textarea.md
msgid "Typedefs"
msgstr ""

#: ../widgets/arc.md ../widgets/bar.md ../widgets/btn.md
#: ../widgets/btnmatrix.md ../widgets/calendar.md ../widgets/canvas.md
#: ../widgets/chart.md ../widgets/checkbox.md ../widgets/cont.md
#: ../widgets/cpicker.md ../widgets/dropdown.md ../widgets/gauge.md
#: ../widgets/img.md ../widgets/imgbtn.md ../widgets/keyboard.md
#: ../widgets/label.md ../widgets/led.md ../widgets/line.md
#: ../widgets/linemeter.md ../widgets/list.md ../widgets/msgbox.md
#: ../widgets/obj.md ../widgets/objmask.md ../widgets/page.md
#: ../widgets/roller.md ../widgets/slider.md ../widgets/spinbox.md
#: ../widgets/spinner.md ../widgets/switch.md ../widgets/table.md
#: ../widgets/tabview.md ../widgets/textarea.md ../widgets/tileview.md
#: ../widgets/win.md
msgid "Enums"
msgstr ""

#: ../widgets/arc.md ../widgets/bar.md ../widgets/btn.md
#: ../widgets/btnmatrix.md ../widgets/calendar.md ../widgets/canvas.md
#: ../widgets/chart.md ../widgets/checkbox.md ../widgets/cont.md
#: ../widgets/cpicker.md ../widgets/dropdown.md ../widgets/gauge.md
#: ../widgets/img.md ../widgets/imgbtn.md ../widgets/keyboard.md
#: ../widgets/label.md ../widgets/led.md ../widgets/line.md
#: ../widgets/linemeter.md ../widgets/list.md ../widgets/msgbox.md
#: ../widgets/obj.md ../widgets/objmask.md ../widgets/page.md
#: ../widgets/roller.md ../widgets/slider.md ../widgets/spinbox.md
#: ../widgets/spinner.md ../widgets/switch.md ../widgets/table.md
#: ../widgets/tabview.md ../widgets/textarea.md ../widgets/tileview.md
#: ../widgets/win.md
msgid "Functions"
msgstr ""

#: ../widgets/arc.md ../widgets/bar.md ../widgets/btn.md
#: ../widgets/btnmatrix.md ../widgets/calendar.md ../widgets/canvas.md
#: ../widgets/chart.md ../widgets/checkbox.md ../widgets/cont.md
#: ../widgets/cpicker.md ../widgets/dropdown.md ../widgets/gauge.md
#: ../widgets/img.md ../widgets/imgbtn.md ../widgets/keyboard.md
#: ../widgets/label.md ../widgets/led.md ../widgets/line.md
#: ../widgets/linemeter.md ../widgets/list.md ../widgets/msgbox.md
#: ../widgets/obj.md ../widgets/objmask.md ../widgets/page.md
#: ../widgets/roller.md ../widgets/slider.md ../widgets/spinbox.md
#: ../widgets/spinner.md ../widgets/switch.md ../widgets/table.md
#: ../widgets/tabview.md ../widgets/textarea.md ../widgets/tileview.md
#: ../widgets/win.md
msgid "Public Members"
msgstr ""

#: ../widgets/bar.md:4
msgid "Bar (lv_bar)"
msgstr ""

#: ../widgets/bar.md:8
msgid ""
"The bar object has a background and an indicator on it. The width of the "
"indicator is set according to the current value of the bar."
msgstr ""

#: ../widgets/bar.md:10
msgid ""
"Vertical bars can be created if the width of the object is smaller than "
"its height."
msgstr ""

#: ../widgets/bar.md:12
msgid ""
"Not only end, but the start value of the bar can be set which changes the"
" start position of the indicator."
msgstr ""

#: ../widgets/bar.md:15
msgid ""
"The Bar's main part is called LV_BAR_PART_BG and it uses the typical "
"background style properties."
msgstr ""

#: ../widgets/bar.md:17
msgid ""
"LV_BAR_PART_INDIC is a virtual part which also uses all the typical "
"background properties. By default the indicator maximal size is the same "
"as the background's size but setting positive padding values in "
"LV_BAR_PART_BG will make the indicator smaller. (negative values will "
"make it larger) If the value style property is used on the indicator the "
"alignment will be calculated based on the current size of the indicator. "
"For example a center aligned value is always shown in the middle of the "
"indicator regardless it's current size."
msgstr ""

#: ../widgets/bar.md:24 ../widgets/slider.md:23
msgid "Value and range"
msgstr ""

#: ../widgets/bar.md:25
msgid ""
"A new value can be set by lv_bar_set_value(bar, new_value, "
"LV_ANIM_ON/OFF). The value is interpreted in a range (minimum and maximum"
" values) which can be modified with lv_bar_set_range(bar, min, max). The "
"default range is 1..100."
msgstr ""

#: ../widgets/bar.md:29
msgid ""
"The new value in lv_bar_set_value can be set with or without an animation"
" depending on the last parameter (LV_ANIM_ON/OFF). The time of the "
"animation can be adjusted by lv_bar_set_anim_time(bar, 100). The time is "
"in milliseconds unit."
msgstr ""

#: ../widgets/bar.md:32
msgid ""
"It's also possible to set the start value of the bar using "
"lv_bar_set_start_value(bar, new_value, LV_ANIM_ON/OFF)"
msgstr ""

#: ../widgets/bar.md:34 ../widgets/keyboard.md:18
msgid "Modes"
msgstr ""

#: ../widgets/bar.md:35
msgid ""
"The bar can be drawn symmetrical to zero (drawn from zero, left to "
"right), if it's enabled with lv_bar_set_type(bar, "
"LV_BAR_TYPE_SYMMETRICAL)."
msgstr ""

#: ../widgets/btn.md:4
msgid "Button (lv_btn)"
msgstr ""

#: ../widgets/btn.md:8
msgid ""
"Buttons are simple rectangle-like objects. They are derived from "
"Containers so layout and fit are also available. Besides, it can be "
"enabled to automatically go to checked state on click."
msgstr ""

#: ../widgets/btn.md:12
msgid ""
"The buttons has only a main style called LV_BTN_PART_MAIN and it can use "
"all the properties from the following groups:"
msgstr ""

#: ../widgets/btn.md:13
msgid "background"
msgstr ""

#: ../widgets/btn.md:14
msgid "border"
msgstr ""

#: ../widgets/btn.md:15
msgid "outline"
msgstr ""

#: ../widgets/btn.md:16
msgid "shadow"
msgstr ""

#: ../widgets/btn.md:17
msgid "value"
msgstr ""

#: ../widgets/btn.md:18
msgid "pattern"
msgstr ""

#: ../widgets/btn.md:19
msgid "transitions"
msgstr ""

#: ../widgets/btn.md:21
msgid "It also uses the padding properties when layout or fit is enabled."
msgstr ""

#: ../widgets/btn.md:25 ../widgets/obj.md:123
msgid "States"
msgstr ""

#: ../widgets/btn.md:26
msgid ""
"To make buttons usage simpler the button's state can be get with "
"lv_btn_get_state(btn). It returns one of the following values:"
msgstr ""

#: ../widgets/btn.md:27
msgid "LV_BTN_STATE_RELEASED"
msgstr ""

#: ../widgets/btn.md:28
msgid "LV_BTN_STATE_PRESSED"
msgstr ""

#: ../widgets/btn.md:29
msgid "LV_BTN_STATE_CHECKED_RELEASED"
msgstr ""

#: ../widgets/btn.md:30
msgid "LV_BTN_STATE_CHECKED_PRESSED"
msgstr ""

#: ../widgets/btn.md:31
msgid "LV_BTN_STATE_DISABLED"
msgstr ""

#: ../widgets/btn.md:33
msgid ""
"With lv_btn_get_state(btn, LV_BTN_STATE_...) the buttons state can be "
"changed manually."
msgstr ""

#: ../widgets/btn.md:35
msgid ""
"If a more precise description of the state is required (e.g. focused) the"
" general lv_obj_get_state(btn) can be used."
msgstr ""

#: ../widgets/btn.md:37
msgid "Checkable"
msgstr ""

#: ../widgets/btn.md:38
msgid ""
"You can configure the buttons as toggle button with "
"lv_btn_set_checkable(btn, true). In this case, on click, the button goes "
"to LV_STATE_CHECKED state automatically, or back when clicked again."
msgstr ""

#: ../widgets/btn.md:40
msgid "Layout and Fit"
msgstr ""

#: ../widgets/btn.md:41
msgid "Similarly to Containers, buttons also have layout and fit attributes."
msgstr ""

#: ../widgets/btn.md:42
msgid ""
"lv_btn_set_layout(btn, LV_LAYOUT_...) set a layout. The default is "
"LV_LAYOUT_CENTER. So, if you add a label, then it will be automatically "
"aligned to the middle and can't be moved with lv_obj_set_pos(). You can "
"disable the layout with lv_btn_set_layout(btn, LV_LAYOUT_OFF)."
msgstr ""

#: ../widgets/btn.md:45
msgid ""
"lv_btn_set_fit/fit2/fit4(btn, LV_FIT_..) enables to set the button width "
"and/or height automatically according to the children, parent, and fit "
"type."
msgstr ""

#: ../widgets/btn.md:48
msgid ""
"Besides the Generic events the following Special events are sent by the "
"buttons:"
msgstr ""

#: ../widgets/btn.md:49
msgid "LV_EVENT_VALUE_CHANGED - sent when the button is toggled."
msgstr ""

#: ../widgets/btn.md:54 ../widgets/btnmatrix.md:80 ../widgets/dropdown.md:81
#: ../widgets/imgbtn.md:38 ../widgets/msgbox.md:46 ../widgets/roller.md:49
#: ../widgets/spinbox.md:39
msgid "The following Keys are processed by the Buttons:"
msgstr ""

#: ../widgets/btn.md:55 ../widgets/imgbtn.md:39
msgid "LV_KEY_RIGHT/UP - Go to toggled state if toggling is enabled."
msgstr ""

#: ../widgets/btn.md:56
msgid "LV_KEY_LEFT/DOWN - Go to non-toggled state if toggling is enabled."
msgstr ""

#: ../widgets/btn.md:58
msgid ""
"Note that, the state of LV_KEY_ENTER is translated to "
"LV_EVENT_PRESSED/PRESSING/RELEASED etc."
msgstr ""

#: ../widgets/btnmatrix.md:4
msgid "Button matrix (lv_btnmatrix)"
msgstr ""

#: ../widgets/btnmatrix.md:8
msgid ""
"The Button Matrix objects can display multiple buttons in rows and "
"columns."
msgstr ""

#: ../widgets/btnmatrix.md:10
msgid ""
"The main reasons for wanting to use a button matrix instead of a "
"container and individual button objects are:"
msgstr ""

#: ../widgets/btnmatrix.md:11
msgid "The button matrix is simpler to use for grid-based button layouts."
msgstr ""

#: ../widgets/btnmatrix.md:12
msgid "The button matrix consumes a lot less memory per button."
msgstr ""

#: ../widgets/btnmatrix.md:15
msgid ""
"The Button matrix's main part is called LV_BTNMATRIX_PART_BG. It draws a "
"background using the typical background style properties."
msgstr ""

#: ../widgets/btnmatrix.md:17
msgid ""
"LV_BTNMATRIX_PART_BTN is virtual part and it refers to the buttons on the"
" button matrix. It also uses all the typical background properties."
msgstr ""

#: ../widgets/btnmatrix.md:19
msgid ""
"The top/bottom/left/right padding values from the background are used to "
"keep some space on the sides. Inner padding is applied between the "
"buttons."
msgstr ""

#: ../widgets/btnmatrix.md:23
msgid "Button's text"
msgstr ""

#: ../widgets/btnmatrix.md:24
msgid ""
"There is a text on each button. To specify them a descriptor string "
"array, called map, needs to be used. The map can be set with "
"lv_btnmatrix_set_map(btnm, my_map). The declaration of a map should look "
"like const char * map[] = {\"btn1\", \"btn2\", \"btn3\", \"\"}. Note that"
" the last element has to be an empty string!"
msgstr ""

#: ../widgets/btnmatrix.md:29
msgid ""
"Use \"\\n\" in the map  to make line break. E.g. {\"btn1\", \"btn2\", "
"\"\\n\", \"btn3\", \"\"}. Each line's buttons have their width calculated"
" automatically."
msgstr ""

#: ../widgets/btnmatrix.md:31 ../widgets/win.md:27
msgid "Control buttons"
msgstr ""

#: ../widgets/btnmatrix.md:32
msgid ""
"The buttons width can be set relative to the other button in the same "
"line with lv_btnmatrix_set_btn_width(btnm, btn_id, width) E.g. in a line "
"with two buttons: btnA, width = 1 and btnB, width = 2, btnA will have 33 "
"% width and btnB will have 66 % width. It's similar to how the flex-grow "
"property works in CSS."
msgstr ""

#: ../widgets/btnmatrix.md:36
msgid ""
"In addition to width, each button can be customized with the following "
"parameters:"
msgstr ""

#: ../widgets/btnmatrix.md:37
msgid ""
"LV_BTNMATRIX_CTRL_HIDDEN - make a button hidden (hidden buttons still "
"take up space in the layout, they are just not visible or clickable)"
msgstr ""

#: ../widgets/btnmatrix.md:38
msgid ""
"LV_BTNMATRIX_CTRL_NO_REPEAT - disable repeating when the button is long "
"pressed"
msgstr ""

#: ../widgets/btnmatrix.md:39
msgid "LV_BTNMATRIX_CTRL_DISABLED - make a button disabled"
msgstr ""

#: ../widgets/btnmatrix.md:40
msgid "LV_BTNMATRIX_CTRL_CHECKABLE - enable toggling of a button"
msgstr ""

#: ../widgets/btnmatrix.md:41
msgid "LV_BTNMATRIX_CTRL_CHECK_STATE - set the toggle state"
msgstr ""

#: ../widgets/btnmatrix.md:42
msgid ""
"LV_BTNMATRIX_CTRL_CLICK_TRIG - if 0, the button will react on press, if "
"1, will react on release"
msgstr ""

#: ../widgets/btnmatrix.md:44
msgid ""
"The set or clear a button's control attribute, use "
"lv_btnmatrix_set_btn_ctrl(btnm, btn_id, LV_BTNM_CTRL_...) and "
"lv_btnmatrix_clear_btn_ctrl(btnm, btn_id, LV_BTNM_CTRL_...) respectively."
" More LV_BTNM_CTRL_... values can be Ored"
msgstr ""

#: ../widgets/btnmatrix.md:47
msgid ""
"The set/clear the same control attribute for all buttons of a button "
"matrix, use lv_btnmatrix_set_btn_ctrl_all(btnm, btn_id, LV_BTNM_CTRL_...)"
" and lv_btnmatrix_clear_btn_ctrl_all(btnm, btn_id, LV_BTNM_CTRL_...)."
msgstr ""

#: ../widgets/btnmatrix.md:50
msgid ""
"The set a control map for a button matrix (similarly to the map for the "
"text), use lv_btnmatrix_set_ctrl_map(btnm, ctrl_map). An element of "
"ctrl_map should look like ctrl_map[0] = width | LV_BTNM_CTRL_NO_REPEAT |"
"  LV_BTNM_CTRL_TGL_ENABLE. The number of elements should be equal to the "
"number of buttons (excluding newlines characters)."
msgstr ""

#: ../widgets/btnmatrix.md:54
msgid "One check"
msgstr ""

#: ../widgets/btnmatrix.md:55
msgid ""
"The \"One check\" feature can be enabled with "
"lv_btnmatrix_set_one_check(btnm, true) to allow only one button to be "
"checked (toggled) at once."
msgstr ""

#: ../widgets/btnmatrix.md:57 ../widgets/img.md:54
msgid "Recolor"
msgstr ""

#: ../widgets/btnmatrix.md:58
msgid ""
"The texts on the button can be recolored similarly to the recolor feature"
" for Label object. To enable it, use lv_btnmatrix_set_recolor(btnm, "
"true). After that a button with #FF0000 Red# text will be red."
msgstr ""

#: ../widgets/btnmatrix.md:61
msgid "Aligning the button's text"
msgstr ""

#: ../widgets/btnmatrix.md:62
msgid ""
"To align the text on the buttons, use lv_btnmatrix_set_align(roller, "
"LV_LABEL_ALIGN_LEFT/CENTER/RIGHT). All text items in the button matrix "
"will conform to the alignment proprty as it is set."
msgstr ""

#: ../widgets/btnmatrix.md:65
msgid "Notes"
msgstr ""

#: ../widgets/btnmatrix.md:66
msgid ""
"The Button matrix object is very light weighted because the buttons are "
"not created just virtually drawn on the fly. This way, 1 button use only "
"8 extra bytes instead of the ~100-150 byte size of a normal Button object"
" (plus the size of its container and a label for each button)."
msgstr ""

#: ../widgets/btnmatrix.md:69
msgid ""
"The disadvantage of this setup is that the ability to style individual "
"buttons to be different from others is limited (aside from the toggling "
"feature). If you require that ability, using individual buttons is very "
"likely to be a better approach."
msgstr ""

#: ../widgets/btnmatrix.md:73
msgid ""
"Besides the Generic events, the following Special events are sent by the "
"button matrices:"
msgstr ""

#: ../widgets/btnmatrix.md:74
msgid ""
"LV_EVENT_VALUE_CHANGED - sent when the button is pressed/released or "
"repeated after long press. The event data is set to the ID of the "
"pressed/released button."
msgstr ""

#: ../widgets/btnmatrix.md:81
msgid "LV_KEY_RIGHT/UP/LEFT/RIGHT - To navigate among the buttons to select one"
msgstr ""

#: ../widgets/btnmatrix.md:82
msgid "LV_KEY_ENTER - To press/release the selected button"
msgstr ""

#: ../widgets/calendar.md:4
msgid "Calendar (lv_calendar)"
msgstr ""

#: ../widgets/calendar.md:8
msgid "The Calendar object is a classic calendar which can:"
msgstr ""

#: ../widgets/calendar.md:9
msgid "highlight the current day"
msgstr ""

#: ../widgets/calendar.md:10
msgid "highlight any user-defined dates"
msgstr ""

#: ../widgets/calendar.md:11
msgid "display the name of the days"
msgstr ""

#: ../widgets/calendar.md:12
msgid "go the next/previous month by button click"
msgstr ""

#: ../widgets/calendar.md:13
msgid "highlight the clicked day"
msgstr ""

#: ../widgets/calendar.md:16
msgid ""
"The calendar's main part is called LV_CALENDAR_PART_BG. It draws a "
"background using the typical background style properties."
msgstr ""

#: ../widgets/calendar.md:18
msgid "Besides the following virtual parts exist:"
msgstr ""

#: ../widgets/calendar.md:19
msgid ""
"LV_CALENDAR_PART_HEADER The upper area where the current year and month's"
" name is shown. It also has buttons to move the next/previous month. It "
"uses typical background properties and padding to keep some distance from"
" the background (top, left, right) and the day names (bottom)."
msgstr ""

#: ../widgets/calendar.md:21
msgid ""
"LV_CALENDAR_PART_DAY_NAMES Shows the name of the days below the header. "
"It uses the text style properties padding to keep some distance from the "
"background (left, right), header (top) and dates (bottom)."
msgstr ""

#: ../widgets/calendar.md:22
msgid ""
"LV_CALENDAR_PART_DATES Show the date numbers from 1..28/29/30/31 "
"(depending on current month). Different \"state\" of the states are drawn"
" according to the states defined in this part:"
msgstr ""

#: ../widgets/calendar.md:23
msgid "normal dates: drawn with LV_STATE_DEFAULT style"
msgstr ""

#: ../widgets/calendar.md:24
msgid "pressed date: drawn with LV_STATE_PRESSED style"
msgstr ""

#: ../widgets/calendar.md:25
msgid "today: drawn with LV_STATE_FOCUSED style"
msgstr ""

#: ../widgets/calendar.md:26
msgid "highlighted dates: drawn with LV_STATE_CHECKED style"
msgstr ""

#: ../widgets/calendar.md:32
msgid ""
"To set and get dates in the calendar, the lv_calendar_date_t type is used"
" which is a structure with year, month and day fields."
msgstr ""

#: ../widgets/calendar.md:34
msgid "Current date"
msgstr ""

#: ../widgets/calendar.md:35
msgid ""
"To set the current date (today), use the "
"lv_calendar_set_today_date(calendar, &today_date) function."
msgstr ""

#: ../widgets/calendar.md:37
msgid "Shown date"
msgstr ""

#: ../widgets/calendar.md:38
msgid ""
"To set the shown date, use lv_calendar_set_shown_date(calendar, "
"&shown_date);"
msgstr ""

#: ../widgets/calendar.md:40
msgid "Highlighted days"
msgstr ""

#: ../widgets/calendar.md:41
msgid ""
"The list of highlighted dates should be stored in a lv_calendar_date_t "
"array loaded by lv_calendar_set_highlighted_dates(calendar, "
"&highlighted_dates).Only the arrays pointer will be saved so the array "
"should be a static or global variable."
msgstr ""

#: ../widgets/calendar.md:44
msgid "Name of the days"
msgstr ""

#: ../widgets/calendar.md:45
msgid ""
"The name of the days can be adjusted with "
"lv_calendar_set_day_names(calendar, day_names) where day_names looks like"
" const char * day_names[7] = {\"Su\", \"Mo\", ...};"
msgstr ""

#: ../widgets/calendar.md:47
msgid "Name of the months"
msgstr ""

#: ../widgets/calendar.md:48
msgid ""
"Similarly to day_names, the name of the month can be set with "
"lv_calendar_set_month_names(calendar, month_names_array)."
msgstr ""

#: ../widgets/calendar.md:51
msgid ""
"Besides the Generic events, the following Special events are sent by the "
"calendars: LV_EVENT_VALUE_CHANGED is sent when the current month has "
"changed."
msgstr ""

#: ../widgets/calendar.md:54
msgid ""
"In Input device related events, lv_calendar_get_pressed_date(calendar) "
"tells which day is currently being pressed or return NULL if no date is "
"pressed."
msgstr ""

#: ../widgets/canvas.md:4
msgid "Canvas (lv_canvas)"
msgstr ""

#: ../widgets/canvas.md:8
msgid ""
"A Canvas inherites from Image where the user can draw anything. "
"Rectangles, texts, images, lines arcs can be drawn here using lvgl's "
"drawing engine. Besides some \"effects\" can be applied as well like "
"rotation, zoom and blur."
msgstr ""

#: ../widgets/canvas.md:12
msgid ""
"The Canvas has on one main part called LV_CANVAS_PART_MAIN and only the "
"image_recolor property is used to give a color to "
"LV_IMG_CF_ALPHA_1/2/4/8BIT images."
msgstr ""

#: ../widgets/canvas.md:16
msgid "Buffer"
msgstr ""

#: ../widgets/canvas.md:17
msgid ""
"The Canvas needs a buffer which stores the drawn image. To assign a "
"buffer to a Canvas, use lv_canvas_set_buffer(canvas, buffer, width, "
"height, LV_IMG_CF_...). Where  buffer is a static buffer (not just a "
"local variable) to hold the image of the canvas. For example, static "
"lv_color_t buffer[LV_CANVAS_BUF_SIZE_TRUE_COLOR(width, height)]. "
"LV_CANVAS_BUF_SIZE_... macros help to determine the size of the buffer "
"with different color formats."
msgstr ""

#: ../widgets/canvas.md:23
msgid ""
"The canvas supports all the built-in color formats like "
"LV_IMG_CF_TRUE_COLOR or LV_IMG_CF_INDEXED_2BIT. See the full list in the "
"Color formats section."
msgstr ""

#: ../widgets/canvas.md:26
msgid "Palette"
msgstr ""

#: ../widgets/canvas.md:27
msgid ""
"For LV_IMG_CF_INDEXED_... color formats, a palette needs to be "
"initialized with  lv_canvas_set_palette(canvas, 3, LV_COLOR_RED). It sets"
" pixels with index=3 to red."
msgstr ""

#: ../widgets/canvas.md:29
msgid "Drawing"
msgstr ""

#: ../widgets/canvas.md:30
msgid ""
"To set a pixel on the canvas, use lv_canvas_set_px(canvas, x, y, "
"LV_COLOR_RED). With LV_IMG_CF_INDEXED_... or LV_IMG_CF_ALPHA_..., the "
"index of the color or the alpha value needs to be passed as color. E.g. "
"lv_color_t c; c.full = 3;"
msgstr ""

#: ../widgets/canvas.md:33
#, python-format
msgid ""
"lv_canvas_fill_bg(canvas, LV_COLOR_BLUE, LV_OPA_50) fills the whole "
"canvas to blue with 50% opacity. Note that, if the current color format "
"doesn't support colors (e.g. LV_IMG_CF_ALPHA_2BIT) teh color will be "
"ignored. Similarly, if opacity is not supported (e.g. "
"LV_IMG_CF_TRUE_COLOR) it will be ignored."
msgstr ""

#: ../widgets/canvas.md:36
msgid ""
"An array of pixels can be copied to the canvas with "
"lv_canvas_copy_buf(canvas, buffer_to_copy, x, y, width, height). The "
"color format of the buffer and the canvas need to match."
msgstr ""

#: ../widgets/canvas.md:38
msgid "To draw something to the canvas use"
msgstr ""

#: ../widgets/canvas.md:39
msgid "lv_canvas_draw_rect(canvas, x, y, width, heigth, &draw_dsc)"
msgstr ""

#: ../widgets/canvas.md:40
msgid ""
"lv_canvas_draw_text(canvas, x, y, max_width, &draw_dsc, txt, "
"LV_LABEL_ALIGN_LEFT/CENTER/RIGHT)"
msgstr ""

#: ../widgets/canvas.md:41
msgid "lv_canvas_draw_img(canvas, x, y, &img_src, &draw_dsc)"
msgstr ""

#: ../widgets/canvas.md:42
msgid "lv_canvas_draw_line(canvas, point_array, point_cnt, &draw_dsc)"
msgstr ""

#: ../widgets/canvas.md:43
msgid "lv_canvas_draw_polygon(canvas, points_array, point_cnt, &draw_dsc)"
msgstr ""

#: ../widgets/canvas.md:44
msgid ""
"lv_canvas_draw_arc(canvas, x, y, radius, start_angle, end_angle, "
"&draw_dsc)"
msgstr ""

#: ../widgets/canvas.md:46
msgid ""
"draw_dsc is a lv_draw_rect/label/img/line_dsc_t variable which should be "
"first initialized with lv_draw_rect/label/img/line_dsc_init() function "
"and then it's filed should be modified with the desired colors and other "
"values."
msgstr ""

#: ../widgets/canvas.md:48
msgid ""
"The draw function can draw to any color format. For example, it's "
"possible to draw a text to an LV_IMG_VF_ALPHA_8BIT canvas and use the "
"result image as a mask in lv_objmask later."
msgstr ""

#: ../widgets/canvas.md:50 ../widgets/img.md:74
msgid "Transformations"
msgstr ""

#: ../widgets/canvas.md:51
msgid ""
"lv_canvas_transform() can be used to rotate and/or scale the image of an "
"image and store the result on the canvas. The function needs the "
"following parameters:"
msgstr ""

#: ../widgets/canvas.md:52
msgid ""
"canvas pointer to a canvas object to store the result of the "
"transformation."
msgstr ""

#: ../widgets/canvas.md:53
msgid ""
"img pointer to an image descriptor to transform. Can be the image "
"descriptor of an other canvas too (lv_canvas_get_img())."
msgstr ""

#: ../widgets/canvas.md:54
msgid "angle the angle of rotation (0..3600), 0.1 deg resolution"
msgstr ""

#: ../widgets/canvas.md:55
msgid "zoom zoom factor (256 no zoom, 512 double size, 128 half size);"
msgstr ""

#: ../widgets/canvas.md:56
msgid ""
"offset_x offset X to tell where to put the result data on destination "
"canvas"
msgstr ""

#: ../widgets/canvas.md:57
msgid ""
"offset_y offset X to tell where to put the result data on destination "
"canvas"
msgstr ""

#: ../widgets/canvas.md:58
msgid ""
"pivot_x pivot X of rotation. Relative to the source canvas. Set to source"
" width / 2 to rotate around the center"
msgstr ""

#: ../widgets/canvas.md:59
msgid ""
"pivot_y pivot Y of rotation. Relative to the source canvas. Set to source"
" height / 2 to rotate around the center"
msgstr ""

#: ../widgets/canvas.md:60
msgid ""
"antialias true: apply anti-aliasing during the transformation. Looks "
"better but slower."
msgstr ""

#: ../widgets/canvas.md:62
msgid ""
"Note that a canvas can't be rotated on itself.  You need a source and "
"destination canvas or image."
msgstr ""

#: ../widgets/canvas.md:64
msgid "Blur"
msgstr ""

#: ../widgets/canvas.md:65
msgid ""
"A given area of the canvas can be blurred horizontally with "
"lv_canvas_blur_hor(canvas, &area, r) ot vertically with "
"lv_canvas_blur_ver(canvas, &area, r). r is the radius of the blur "
"(greater value means more intensive burring). area is the area where the "
"blur should be applied (interpreted relative to the canvas)"
msgstr ""

#: ../widgets/canvas.md:69
msgid ""
"As default the clicking of a canvas is disabled (inherited by Image) and "
"therefore no events are generated."
msgstr ""

#: ../widgets/canvas.md:71
msgid ""
"If clicking is enabled (lv_obj_set_click(canvas, true)) only the Generic "
"events are sent by the object type."
msgstr ""

#: ../widgets/chart.md:4
msgid "Chart (lv_chart)"
msgstr ""

#: ../widgets/chart.md:8
msgid ""
"Charts are basic object to visualize data points. It support Line charts "
"(connect points with lines and/or draw points on them) and Column chart."
msgstr ""

#: ../widgets/chart.md:11
msgid ""
"Chart also support division lines, 2 y axis, axis ticks, and texts on "
"ticks."
msgstr ""

#: ../widgets/chart.md:14
msgid ""
"The Chart's main part is called LV_CHART_PART_BG and it uses all the "
"typical background properties. The text style properties determine the "
"style of the axis texts and the line properties determine ticks' style. "
"Padding values add some space on the sides thus it makes series area "
"smaller. Padding also can be used to make space for axis texts and ticks."
msgstr ""

#: ../widgets/chart.md:18
msgid ""
"The background of the series is called LV_CHART_PART_SERIES_BG and it's "
"placed on the main background. The division lines, and series data is "
"drawn on this part. Besides the typical background style properties the "
"line style properties are used by the division lines. The padding values "
"tells the space between the this part and the axis texts."
msgstr ""

#: ../widgets/chart.md:22
msgid ""
"The style of the series can be referenced by LV_CHART_PART_SERIES. In "
"case of column type the following properties are used:"
msgstr ""

#: ../widgets/chart.md:23
msgid "radius: radius of the bars"
msgstr ""

#: ../widgets/chart.md:24
msgid "padding_inner: space between the columns of the same x coordinate"
msgstr ""

#: ../widgets/chart.md:26
msgid "In case of Line type these properties are used:"
msgstr ""

#: ../widgets/chart.md:27
msgid "line properties to describe the lines"
msgstr ""

#: ../widgets/chart.md:28
msgid "size radius of the points"
msgstr ""

#: ../widgets/chart.md:29
msgid "bg_opa: the overall opacity of the area below the lines"
msgstr ""

#: ../widgets/chart.md:30
#, python-format
msgid ""
"bg_main_stop: % of bg_opa at the top to create an alpha fade (0: "
"transparent at the top, 255: bg_opa at the top)"
msgstr ""

#: ../widgets/chart.md:31
msgid ""
"bg_grad_stop: %  of bg_opa at the bottom to create an alpha fade  (0: "
"transparent at the bottom, 255: bg_opa at the top)"
msgstr ""

#: ../widgets/chart.md:32
msgid ""
"bg_drag_dir: should be LV_GRAD_DIR_VER to allow alpha fading with "
"bg_main_stop and bg_grad_stop"
msgstr ""

#: ../widgets/chart.md:36
msgid "Data series"
msgstr ""

#: ../widgets/chart.md:37
msgid ""
"You can add any number of series to the charts by "
"lv_chart_add_series(chart, color). It allocates data for a "
"lv_chart_series_t structure which contains the chosen color and an array "
"for the data points."
msgstr ""

#: ../widgets/chart.md:40
msgid "Series' type"
msgstr ""

#: ../widgets/chart.md:41
msgid "The following data display types exist:"
msgstr ""

#: ../widgets/chart.md:43
msgid ""
"LV_CHART_TYPE_NONE - Do not display any data. It can be used to hide a "
"series."
msgstr ""

#: ../widgets/chart.md:44
msgid "LV_CHART_TYPE_LINE - Draw lines between the points."
msgstr ""

#: ../widgets/chart.md:45
msgid "LV_CHART_TYPE_COLUMN - Draw columns."
msgstr ""

#: ../widgets/chart.md:47
msgid ""
"You can specify the display type with lv_chart_set_type(chart, "
"LV_CHART_TYPE_...). The types can be 'OR'ed (like LV_CHART_TYPE_LINE)."
msgstr ""

#: ../widgets/chart.md:49
msgid "Modify the data"
msgstr ""

#: ../widgets/chart.md:50
msgid "You have several options to set the data of series:"
msgstr ""

#: ../widgets/chart.md:51
msgid ""
"Set the values manually in the array like ser1->points[3] = 7 and refresh"
" the chart with lv_chart_refresh(chart)."
msgstr ""

#: ../widgets/chart.md:52
msgid "Use the lv_chart_set_next(chart, ser, value)."
msgstr ""

#: ../widgets/chart.md:53
msgid ""
"Initialize all points to a given value with: lv_chart_init_points(chart, "
"ser, value)."
msgstr ""

#: ../widgets/chart.md:54
msgid ""
"Set all points from an array with: lv_chart_set_points(chart, ser, "
"value_array)."
msgstr ""

#: ../widgets/chart.md:56
msgid ""
"Use LV_CHART_POINT_DEF as value to make the library skip drawing that "
"point, column, or line segment."
msgstr ""

#: ../widgets/chart.md:58
msgid "Update modes"
msgstr ""

#: ../widgets/chart.md:59
msgid "lv_chart_set_next can behave in two ways depending on update mode:"
msgstr ""

#: ../widgets/chart.md:60
msgid ""
"LV_CHART_UPDATE_MODE_SHIFT - Shift old data to the left and add the new "
"one o the right."
msgstr ""

#: ../widgets/chart.md:61
msgid ""
"LV_CHART_UPDATE_MODE_CIRCULAR - Circularly add the new data (Like an ECG "
"diagram)."
msgstr ""

#: ../widgets/chart.md:63
msgid ""
"The update mode can be changed with lv_chart_set_update_mode(chart, "
"LV_CHART_UPDATE_MODE_...)."
msgstr ""

#: ../widgets/chart.md:65
msgid "Number of points"
msgstr ""

#: ../widgets/chart.md:66
msgid ""
"The number of points in the series can be modified by "
"lv_chart_set_point_count(chart, point_num). The default value is 10."
msgstr ""

#: ../widgets/chart.md:68
msgid "Vertical range"
msgstr ""

#: ../widgets/chart.md:69
msgid ""
"You can specify the minimum and maximum values in y-direction with "
"lv_chart_set_range(chart, y_min, y_max). The value of the points will be "
"scaled proportionally. The default range is: 0..100."
msgstr ""

#: ../widgets/chart.md:71
msgid "Division lines"
msgstr ""

#: ../widgets/chart.md:72
msgid ""
"The number of horizontal and vertical division lines can be modified by "
"lv_chart_set_div_line_count(chart, hdiv_num, vdiv_num). The default "
"settings are 3 horizontal and 5 vertical division lines."
msgstr ""

#: ../widgets/chart.md:74
msgid "Tick marks and labels"
msgstr ""

#: ../widgets/chart.md:75
msgid "Ticks and labels can be added to the axis."
msgstr ""

#: ../widgets/chart.md:77
msgid ""
"lv_chart_set_x_tick_text(chart, list_of_values, num_tick_marks, "
"LV_CHART_AXIS_...) set the ticks and texts on x axis. list_of_values is a"
" string with '\\n' terminated text (expect the last) with text for the "
"ticks. E.g. const char * list_of_values = \"first\\nsec\\nthird\". "
"list_of_values can be NULL. If list_of_values is set then num_tick_marks "
"tells the number of ticks between two labels.  If list_of_values is NULL "
"then it specifies the total number of ticks."
msgstr ""

#: ../widgets/chart.md:81
msgid ""
"Major tick lines are drawn where text is placed, and minor tick lines are"
" drawn elsewhere. lv_chart_set_x_tick_length(chart, major_tick_len, "
"minor_tick_len) sets the length of tick lines on the x-axis."
msgstr ""

#: ../widgets/chart.md:83
msgid ""
"The same functions exists for the y axis too: lv_chart_set_y_tick_text "
"and lv_chart_set_y_tick_length."
msgstr ""

#: ../widgets/checkbox.md:4
msgid "Checkbox (lv_cb)"
msgstr ""

#: ../widgets/checkbox.md:8
msgid ""
"The Checkbox objects are built from a Button background which contains an"
" also Button bullet and a Label to realize a classical checkbox."
msgstr ""

#: ../widgets/checkbox.md:11
msgid ""
"The Check box's main part is called LV_CHECKBOX_PART_BG. It's a container"
" for a \"bullet\" and a text next to it. The background uses all the "
"typical background style properties."
msgstr ""

#: ../widgets/checkbox.md:13
msgid ""
"The bullet is real lv_obj object and can be referred with "
"LV_CHACKBOX_PART_BULLET. The bullet automatically inherits the state of "
"the background. So the background is pressed the bullet goes to pressed "
"state as well. The bullet also uses all the typical background style "
"properties."
msgstr ""

#: ../widgets/checkbox.md:17
msgid ""
"There is not dedicated part for the label. Its styles can be set in the "
"background's styles because the text styles properties are always "
"inherited."
msgstr ""

#: ../widgets/checkbox.md:21
msgid "Text"
msgstr ""

#: ../widgets/checkbox.md:22
msgid ""
"The text can be modified by the lv_checkbox_set_text(cb, \"New text\") "
"function. It will dynamically allocate the text."
msgstr ""

#: ../widgets/checkbox.md:24
msgid ""
"To set a static text, use lv_checkbox_set_static_text(cb, txt). This way,"
" only a pointer of txt will be stored and it shouldn't be deallocated "
"while the checkbox exists."
msgstr ""

#: ../widgets/checkbox.md:26
msgid "Check/Uncheck"
msgstr ""

#: ../widgets/checkbox.md:27
msgid ""
"You can manually check / un-check the Checkbox  via "
"lv_checkbox_set_checked(cb, true/false). Setting true will check the "
"checkbox and false will un-check the checkbox."
msgstr ""

#: ../widgets/checkbox.md:29
msgid "Disabled"
msgstr ""

#: ../widgets/checkbox.md:30
msgid "To make the Checkbox disabled, use lv_checkbox_set_disabled(cb, true)."
msgstr ""

#: ../widgets/checkbox.md:33
msgid ""
"Besides the Generic events the following Special events are sent by the "
"Checkboxes:"
msgstr ""

#: ../widgets/checkbox.md:34
msgid "LV_EVENT_VALUE_CHANGED - sent when the checkbox is toggled."
msgstr ""

#: ../widgets/checkbox.md:36
msgid ""
"Note that, the generic input device-related events (like "
"LV_EVENT_PRESSED) are sent in the inactive state too. You need to check "
"the state with lv_cb_is_inactive(cb) to ignore the events from inactive "
"Checkboxes."
msgstr ""

#: ../widgets/checkbox.md:41
msgid "The following Keys are processed by the 'Buttons':"
msgstr ""

#: ../widgets/checkbox.md:42
msgid "LV_KEY_RIGHT/UP - Go to toggled state if toggling is enabled"
msgstr ""

#: ../widgets/checkbox.md:43
msgid "LV_KEY_LEFT/DOWN - Go to non-toggled state if toggling is  enabled"
msgstr ""

#: ../widgets/checkbox.md:45 ../widgets/imgbtn.md:42 ../widgets/list.md:69
msgid ""
"Note that, as usual, the state of LV_KEY_ENTER is translated to "
"LV_EVENT_PRESSED/PRESSING/RELEASED etc."
msgstr ""

#: ../widgets/cont.md:4
msgid "Container (lv_cont)"
msgstr ""

#: ../widgets/cont.md:8
msgid "The containers are essentially a basic object with some special features."
msgstr ""

#: ../widgets/cont.md:10 ../widgets/list.md:48 ../widgets/win.md:47
msgid "Layout"
msgstr ""

#: ../widgets/cont.md:11
msgid ""
"You can apply a layout on the containers to automatically order their "
"children. The layout spacing comes from style.body.padding. ... "
"properties. The possible layout options:"
msgstr ""

#: ../widgets/cont.md:13
msgid "LV_LAYOUT_OFF - Do not align the children."
msgstr ""

#: ../widgets/cont.md:14
msgid ""
"LV_LAYOUT_CENTER - Align children to the center in column and keep "
"padding.inner space between them."
msgstr ""

#: ../widgets/cont.md:15
msgid ""
"LV_LAYOUT_COL_ - Align children in a left-justified column. Keep "
"padding.left space on the left, pad.top space on the top and "
"padding.inner space between the children."
msgstr ""

#: ../widgets/cont.md:16
msgid ""
"LV_LAYOUT_COL_M - Align children in centered column. Keep padding.top "
"space on the top and padding.inner space between the children."
msgstr ""

#: ../widgets/cont.md:17
msgid ""
"LV_LAYOUT_COL_R - Align children in a right-justified column. Keep "
"padding.right space on the right, padding.top space on the top and "
"padding.inner space between the children."
msgstr ""

#: ../widgets/cont.md:18
msgid ""
"LV_LAYOUT_ROW_T - Align children in a top justified row. Keep "
"padding.left space on the left, padding.top space on the top and "
"padding.inner space between the children."
msgstr ""

#: ../widgets/cont.md:19
msgid ""
"LV_LAYOUT_ROW_M - Align children in centered row. Keep padding.left space"
" on the left and padding.inner space between the children."
msgstr ""

#: ../widgets/cont.md:20
msgid ""
"LV_LAYOUT_ROW_B - Align children in a bottom justified row. Keep "
"padding.left space on the left, padding.bottom space on the bottom and "
"padding.inner space between the children."
msgstr ""

#: ../widgets/cont.md:21
msgid ""
"LV_LAYOUT_PRETTY - Put as many objects as possible in a row (with at "
"least padding.inner space and padding.left/right space on the sides). "
"Divide the space in each line equally between the children. Keep "
"padding.top space on the top and pad.inner space between the lines."
msgstr ""

#: ../widgets/cont.md:23
msgid ""
"LV_LAYOUT_GRID - Similar to LV_LAYOUT_PRETTY but not divide horizontal "
"space equally just let padding.left/right on the edges and padding.inner "
"space between the elements."
msgstr ""

#: ../widgets/cont.md:25
msgid "Autofit"
msgstr ""

#: ../widgets/cont.md:26
msgid ""
"Container have an autofit feature which can automatically change the size"
" of the container according to its children and/or parent. The following "
"options exist:"
msgstr ""

#: ../widgets/cont.md:27
msgid "LV_FIT_NONE - Do not change the size automatically."
msgstr ""

#: ../widgets/cont.md:28
msgid ""
"LV_FIT_TIGHT - Shrink-wrap the container around all of its children, "
"while keeping padding.top/bottom/left/right space on the edges."
msgstr ""

#: ../widgets/cont.md:29
msgid ""
"LV_FIT_FLOOD - Set the size to the parent's size minus "
"padding.top/bottom/left/right (from the parent's style) space."
msgstr ""

#: ../widgets/cont.md:30
msgid ""
"LV_FIT_FILL - Use LV_FIT_FLOOD while smaller than the parent and "
"LV_FIT_TIGHT when larger. It will ensure that the container is, at "
"minimum, the size of its parent."
msgstr ""

#: ../widgets/cont.md:32
msgid ""
"To set the auto fit mode for all directions, use lv_cont_set_fit(cont, "
"LV_FIT_...). To use different auto fit horizontally and vertically, use "
"lv_cont_set_fit2(cont, hor_fit_type, ver_fit_type). To use different auto"
" fit in all 4 directions, use lv_cont_set_fit4(cont, left_fit_type, "
"right_fit_type, top_fit_type, bottom_fit_type)."
msgstr ""

#: ../widgets/cont.md:36
msgid "Styles"
msgstr ""

#: ../widgets/cont.md:37
msgid ""
"You can set the styles with lv_cont_set_style(btn, LV_CONT_STYLE_MAIN, "
"&style)."
msgstr ""

#: ../widgets/cont.md:38
msgid "style.body properties are used."
msgstr ""

#: ../widgets/cpicker.md:4
msgid "color picker (lv_cpicker)"
msgstr ""

#: ../widgets/cpicker.md:7
msgid ""
"As its name implies Color picker allows to select color. The Hue, "
"Saturation and Value of the color can be selected after each other."
msgstr ""

#: ../widgets/cpicker.md:9
msgid "The widget has two forms: circle (disc) and rectangle."
msgstr ""

#: ../widgets/cpicker.md:11
msgid ""
"In both forms, be long pressing the object, the color picker will change "
"to the next parameter of the color (hue, saturation or value). Besides, "
"double click will reset the current parameter."
msgstr ""

#: ../widgets/cpicker.md:15
msgid ""
"The Color picker's main part is called LV_CPICKER_PART_BG. In circular "
"form it uses scale_width to set the the width of the circle and pad_inner"
" for padding between the circle and the inner preview circle. In "
"rectangle mode radius can be used to apply a radius on the rectangle."
msgstr ""

#: ../widgets/cpicker.md:18
msgid ""
"The object has  virtual part called LV_CPICKER_PART_KNOB which is "
"rectangle (or circle) drawn on the current value. It uses all the "
"rectangle like style properties and padding to make it larger than the "
"width of the circle or rectangle background."
msgstr ""

#: ../widgets/cpicker.md:23
msgid "Type"
msgstr ""

#: ../widgets/cpicker.md:25
msgid ""
"The type of the Color picker can be changed with "
"lv_cpicker_set_type(cpicker, LV_CPICKER_TYPE_RECT/DISC)"
msgstr ""

#: ../widgets/cpicker.md:27
msgid "Set color"
msgstr ""

#: ../widgets/cpicker.md:29
msgid ""
"The colro can be set manually with "
"lv_cpicker_set_hue/saturation/value(cpicker, x) or all at once with "
"lv_cpicker_set_hsv(cpicker, hsv) or lv_cpicker_set_color(cpicker, rgb)"
msgstr ""

#: ../widgets/cpicker.md:31
msgid "Color mode"
msgstr ""

#: ../widgets/cpicker.md:33
msgid ""
"The current color moed can be manually selected with "
"lv_cpicker_set_color_mode(cpicker, "
"LV_CPICKER_COLOR_MODE_HUE/SATURATION/VALUE)."
msgstr ""

#: ../widgets/cpicker.md:35
msgid ""
"The color moe be fixed (do not change with long press) using "
"lv_cpicker_set_color_mode_fixed(cpicker, true)"
msgstr ""

#: ../widgets/cpicker.md:37
msgid "Knob color"
msgstr ""

#: ../widgets/cpicker.md:38
msgid ""
"lv_cpicker_set_knob_colored(cpicker, true) make the knob to automatically"
" show the selected color as background color."
msgstr ""

#: ../widgets/cpicker.md:46
msgid "LV_KEY_UP, LV_KEY_RIGHT Increment the current parameter's value by 1"
msgstr ""

#: ../widgets/cpicker.md:47
msgid "LV_KEY_DOWN, LV_KEY_LEFT Decrement the current parameter's by 1"
msgstr ""

#: ../widgets/cpicker.md:48
msgid ""
"LV_KEY_ENTER By long press the next mode will be shown. By double click "
"the current parameter will be reset."
msgstr ""

#: ../widgets/dropdown.md:4
msgid "Drop-down list (lv_dropdown)"
msgstr ""

#: ../widgets/dropdown.md:8
msgid "The drop-down list allows the user to select one value from a list."
msgstr ""

#: ../widgets/dropdown.md:10
msgid ""
"The drop-down list is closed by default and displays a single value or a "
"predefined text. When activated (by click on the drop-down list), a list "
"is created from which the user may select one option. When the user "
"selects a new value, the list is deleted."
msgstr ""

#: ../widgets/dropdown.md:15
msgid ""
"The drop-down list's main part is called LV_DROPDOWN_PART_MAIN which is a"
" simple lv_obj object. It uses all the typical background properties. "
"Pressed, Focused, Edited etc. stiles are also applied as usual."
msgstr ""

#: ../widgets/dropdown.md:18
msgid ""
"The list, which is created when the main object is clicked, is an Page. "
"Its background part can be referenced with LV_DROPDOWN_PART_LIST and uses"
" all the typical background properties for the rectangle itself and text "
"properties for the options. To adjust the space between the options use "
"the text_line_space style property. Padding values can be used to make "
"some space on the edges."
msgstr ""

#: ../widgets/dropdown.md:23
msgid ""
"The scrollable part of the page is hidden and its styles are always empty"
" (so transparent with no padding)."
msgstr ""

#: ../widgets/dropdown.md:25
msgid ""
"The scrollbar can be referenced with LV_DROPDOWN_PART_SCRLBAR and uses "
"all the typical background properties."
msgstr ""

#: ../widgets/dropdown.md:27
msgid ""
"The selected option can be referenced with LV_DROPDOWN_PART_SELECTED and "
"uses all the typical background properties. It will used in its default "
"state to draw a rectangle on the selected option, and in pressed state to"
" draw a rectangle on the being pressed option."
msgstr ""

#: ../widgets/dropdown.md:34 ../widgets/roller.md:20
msgid "Set options"
msgstr ""

#: ../widgets/dropdown.md:35
msgid ""
"The options are passed to the drop-down list as a string with "
"lv_dropdown_set_options(dropdown, options). The options should be "
"separated by \\n. For example: \"First\\nSecond\\nThird\". The string "
"will be saved in the drop-down list, so it can in local variable too."
msgstr ""

#: ../widgets/dropdown.md:38
msgid ""
"The lv_dropdown_add_option(dropdown, \"New option\", pos) function "
"inserts a new option to pos index."
msgstr ""

#: ../widgets/dropdown.md:40
msgid ""
"To save memory the options can set from a static(constant) string too "
"with lv_dropdown_set_static_options(dropdown, options). In this case the "
"options string should be alive while the drop-down list exists and  "
"lv_dropdown_add_option can't be used"
msgstr ""

#: ../widgets/dropdown.md:43
msgid ""
"You can select an option manually with lv_dropdown_set_selected(dropdown,"
" id), where id is the index of an option."
msgstr ""

#: ../widgets/dropdown.md:45 ../widgets/roller.md:27
msgid "Get selected option"
msgstr ""

#: ../widgets/dropdown.md:46
msgid ""
"The get the currently selected option, use "
"lv_dropdown_get_selected(dropdown). It will return the index of the "
"selected option."
msgstr ""

#: ../widgets/dropdown.md:48
msgid ""
"lv_dropdown_get_selected_str(dropdown, buf, buf_size) copies the name of "
"the selected option to a buf."
msgstr ""

#: ../widgets/dropdown.md:50
msgid "Direction"
msgstr ""

#: ../widgets/dropdown.md:51
msgid ""
"The list can be created on any side. The default LV_DROPDOWN_DOWN can be "
"modified by lv_dropdown_set_dir(dropdown, "
"LV_DROPDOWN_DIR_LEFT/RIGHT/UP/DOWN) function."
msgstr ""

#: ../widgets/dropdown.md:53
msgid ""
"If the list would be vertically out of the screen, it will aligned to the"
" edge."
msgstr ""

#: ../widgets/dropdown.md:55
msgid "Symbol"
msgstr ""

#: ../widgets/dropdown.md:56
msgid ""
"A symbol (typically an arrow) can be added to the drop down list with "
"lv_dropdown_set_symbol(dropdown, LV_SYMBOL_...)"
msgstr ""

#: ../widgets/dropdown.md:58
msgid ""
"If the direction of the drop-down list is  LV_DROPDOWN_DIR_LEFT the "
"symbol will be shown on the left, else on the right."
msgstr ""

#: ../widgets/dropdown.md:60
msgid "Maximum height"
msgstr ""

#: ../widgets/dropdown.md:61
msgid ""
"The maximum height of drop-down list can be set via "
"lv_dropdown_set_max_height(dropdown, height). By default it's set to 3/4 "
"vertical resolution."
msgstr ""

#: ../widgets/dropdown.md:63
msgid "Show selected"
msgstr ""

#: ../widgets/dropdown.md:64
msgid ""
"The main part can either show the selected option or a static text. It "
"can  controlled with lv_dropdown_set_show_selected(sropdown, true/false)."
msgstr ""

#: ../widgets/dropdown.md:66
msgid ""
"The static text can be set with lv_dropdown_set_text(dropdown, \"Text\")."
" Only the pointer of the text is saved."
msgstr ""

#: ../widgets/dropdown.md:68 ../widgets/roller.md:38 ../widgets/switch.md:25
#: ../widgets/tabview.md:48 ../widgets/tileview.md:54
msgid "Animation time"
msgstr ""

#: ../widgets/dropdown.md:69
msgid ""
"The drop-down list's open/close animation time is adjusted by "
"lv_dropdown_set_anim_time(ddlist, anim_time). Zero animation time means "
"no animation."
msgstr ""

#: ../widgets/dropdown.md:71
msgid "Manually open/close"
msgstr ""

#: ../widgets/dropdown.md:72
msgid ""
"To manually open or close the drop-down list the "
"lv_dropdown_open/close(dropdown, LV_ANIM_ON/OFF) function can be used."
msgstr ""

#: ../widgets/dropdown.md:75
msgid ""
"Besides the Generic events, the following Special events are sent by the "
"drop-down list:"
msgstr ""

#: ../widgets/dropdown.md:76
msgid "LV_EVENT_VALUE_CHANGED - Sent when the new option is selected."
msgstr ""

#: ../widgets/dropdown.md:82
msgid "LV_KEY_RIGHT/DOWN - Select the next option."
msgstr ""

#: ../widgets/dropdown.md:83
msgid "LV_KEY_LEFT/UP - Select the previous option."
msgstr ""

#: ../widgets/dropdown.md:84
msgid ""
"LY_KEY_ENTER - Apply the selected option (Send LV_EVENT_VALUE_CHANGED "
"event and close the drop-down list)."
msgstr ""

#: ../widgets/gauge.md:4
msgid "Gauge (lv_gauge)"
msgstr ""

#: ../widgets/gauge.md:7
msgid "The gauge is a meter with scale labels and one or more needles."
msgstr ""

#: ../widgets/gauge.md:10
msgid ""
"The Gauge's main part is called LV_GAUGE_PART_MAIN. It draws a background"
" using the typical background style properties and \"minor\" scale lines "
"using the line and scale style properties. It also uses the text "
"properties to set the style of the scale labels. pad_inner is used to set"
" space between the scale lines and the scale labels."
msgstr ""

#: ../widgets/gauge.md:13
msgid ""
"LV_GAUGE_PART_MAJOR is a virtual part which describes the  major scale "
"lines (where labels are added) using the line and scale style properties."
msgstr ""

#: ../widgets/gauge.md:15
msgid ""
"LV_GAUGE_PART_NEEDLE is also virtual part and it describes the needle(s) "
"via the line style properties. size and the typical background properties"
" are used to describe a rectangle (or circle) in the picot point of the "
"needle(s). pad_inner is used to to make the needle(s) smaller than the "
"outer radius of the scale lines."
msgstr ""

#: ../widgets/gauge.md:21
msgid "Set value and needles"
msgstr ""

#: ../widgets/gauge.md:22
msgid ""
"The gauge can show more than one needle. Use the "
"lv_gauge_set_needle_count(gauge, needle_num, color_array) function to set"
" the number of needles and an array with colors for each needle. The "
"array must be static or global variable because only its pointer is "
"stored."
msgstr ""

#: ../widgets/gauge.md:26
msgid ""
"You can use lv_gauge_set_value(gauge, needle_id, value) to set the value "
"of a needle."
msgstr ""

#: ../widgets/gauge.md:28
msgid "Scale"
msgstr ""

#: ../widgets/gauge.md:29
msgid ""
"You can use the lv_gauge_set_scale(gauge, angle, line_num, label_cnt) "
"function to adjust the scale angle and the number of the scale lines and "
"labels. The default settings are 220 degrees, 6 scale labels, and 21 "
"lines."
msgstr ""

#: ../widgets/gauge.md:32
msgid ""
"The scale of the Gauge can have offset. It can be adjusted with "
"lv_gauge_set_angle_offset(gauge, angle)."
msgstr ""

#: ../widgets/gauge.md:34
msgid "Range"
msgstr ""

#: ../widgets/gauge.md:35
msgid ""
"The range of the gauge can be specified by lv_gauge_set_range(gauge, min,"
" max). The default range is 0..100."
msgstr ""

#: ../widgets/gauge.md:37
msgid "Critical value"
msgstr ""

#: ../widgets/gauge.md:38
msgid ""
"To set a critical value, use lv_gauge_set_critical_value(gauge, value). "
"The scale color will be changed to scale_end_color after this value. The "
"default critical value is 80."
msgstr ""

#: ../widgets/img.md:4
msgid "Image (lv_img)"
msgstr ""

#: ../widgets/img.md:8
msgid ""
"Images are the basic object to display from the flash (as arrays) or "
"externally as files. Images can display symbols (LV_SYMBOL_...) too."
msgstr ""

#: ../widgets/img.md:10
msgid ""
"Using the Image decoder interface custom image formats can be supported "
"as well."
msgstr ""

#: ../widgets/img.md:13
msgid ""
"The images has only a main part called LV_IMG_PART_MAIN which uses the "
"typical background style propeties to draw a background rectangle and the"
" image properties. The padding values are used to make the background "
"virtually larger. (It won't change the image's real size but the size "
"modification is applied only during drawing)"
msgstr ""

#: ../widgets/img.md:18
msgid "Image source"
msgstr ""

#: ../widgets/img.md:19
msgid "To provide maximum flexibility, the source of the image can be:"
msgstr ""

#: ../widgets/img.md:21
msgid "a variable in the code (a C array with the pixels)."
msgstr ""

#: ../widgets/img.md:22
msgid "a file stored externally (like on an SD card)."
msgstr ""

#: ../widgets/img.md:23
msgid "a text with Symbols."
msgstr ""

#: ../widgets/img.md:25
msgid "To set the source of an image, use lv_img_set_src(img, src)."
msgstr ""

#: ../widgets/img.md:27
msgid ""
"To generate a pixel array from a PNG, JPG or BMP image, use the Online "
"image converter tool and set the converted image with its pointer: "
"lv_img_set_src(img1, &converted_img_var); To make the variable visible in"
" the C file, you need to declare it with "
"LV_IMG_DECLARE(converted_img_var)."
msgstr ""

#: ../widgets/img.md:30
msgid ""
"To use external files, you also need to convert the image files using the"
" online converter tool but now you should select the binary Output "
"format. You also need to use LittlevGL's file system module and register "
"a driver with some functions for the basic file operation. Got to the "
"File system to learn more. To set an image sourced from a file, use "
"lv_img_set_src(img, \"S:folder1/my_img.bin\")."
msgstr ""

#: ../widgets/img.md:34
msgid ""
"You can set a symbol similarly to Labels. In this case, the image will be"
" rendered as text according to the font specified in the style.  It "
"enables to use of light-weighted mono-color \"letters\" instead of real "
"images. You can set symbol like lv_img_set_src(img1, LV_SYMBOL_OK)."
msgstr ""

#: ../widgets/img.md:37
msgid "Label as an image"
msgstr ""

#: ../widgets/img.md:38
msgid ""
"Images and labels are sometimes used to convey the same thing. For "
"example, to describe what a button does. Therefore, images and labels are"
" somewhat interchangeable. To handle these images can even display texts "
"by using LV_SYMBOL_DUMMY as the prefix of the text. For example, "
"lv_img_set_src(img, LV_SYMBOL_DUMMY \"Some text\")."
msgstr ""

#: ../widgets/img.md:41
msgid "Transparency"
msgstr ""

#: ../widgets/img.md:42
msgid ""
"The internal (variable) and external images support 2 transparency "
"handling methods:"
msgstr ""

#: ../widgets/img.md:44
msgid ""
"Chrome keying - Pixels with LV_COLOR_TRANSP (lv_conf.h) color will be "
"transparent."
msgstr ""

#: ../widgets/img.md:45
msgid "Alpha byte - An alpha byte is added to every pixel."
msgstr ""

#: ../widgets/img.md:47
msgid "Palette and Alpha index"
msgstr ""

#: ../widgets/img.md:48
msgid ""
"Besides True color (RGB) color format, the following formats are also "
"supported:"
msgstr ""

#: ../widgets/img.md:49
msgid "Indexed - Image has a palette."
msgstr ""

#: ../widgets/img.md:50
msgid "Alpha indexed - Only alpha values are stored."
msgstr ""

#: ../widgets/img.md:52
msgid ""
"These options can be selected in the font converter. To learn more about "
"the color formats, read the Images section."
msgstr ""

#: ../widgets/img.md:55
msgid ""
"The images can be re-colored in run-time to any color according to the "
"brightness of the pixels. It is very useful to show different states "
"(selected, inactive, pressed, etc.) of an image without storing more "
"versions of the same image. This feature can be enabled in the style by "
"setting img.intense between LV_OPA_TRANSP (no recolor, value: 0) and "
"LV_OPA_COVER (full recolor, value: 255). The default value is "
"LV_OPA_TRANSP so this feature is disabled."
msgstr ""

#: ../widgets/img.md:60 ../widgets/line.md:17
msgid "Auto-size"
msgstr ""

#: ../widgets/img.md:61
msgid ""
"It is possible to automatically set the size of the image object to the "
"image source's width and height if enabled by the "
"lv_img_set_auto_size(image, true) function. If auto-size is enabled, then"
" when a new file is set, the object size is automatically changed. Later,"
" you can modify the size manually. The auto-size is enabled by default if"
" the image is not a screen."
msgstr ""

#: ../widgets/img.md:64
msgid "Mosaic"
msgstr ""

#: ../widgets/img.md:65
msgid ""
"If the object size is greater than the image size in any directions, then"
" the image will be repeated like a mosaic. It's a very useful feature to "
"create a large image from only a very narrow source. For example, you can"
" have a 300 x 1 image with a special gradient and set it as a wallpaper "
"using the mosaic feature."
msgstr ""

#: ../widgets/img.md:69
msgid "Offset"
msgstr ""

#: ../widgets/img.md:70
msgid ""
"With lv_img_set_offset_x(img, x_ofs) and lv_img_set_offset_y(img, y_ofs),"
" you can add some offset to the displayed image. It is useful if the "
"object size is smaller than the image source size. Using the offset "
"parameter a Texture atlas or a \"running image\" effect can be created by"
" Animating the x or y offset."
msgstr ""

#: ../widgets/img.md:76
#, python-format
msgid ""
"Using the lv_img_set_zoom(img, factor) the images will be zoomed. Set "
"factor to 256 or LV_IMG_ZOOM_NONE to disable zooming. A larger value "
"enlarges the images (e.g. 512 double size), a smaller value shrinks it "
"(e.g. 128 half size). Fractional scale works as well. E.g. 281 for 10% "
"enlargement."
msgstr ""

#: ../widgets/img.md:80
msgid ""
"To rotate the image use lv_img_set_angle(img, angle). Angle has 0.1 "
"degree precision, so for 45.8° set 458."
msgstr ""

#: ../widgets/img.md:82
msgid ""
"By default, the pivot point of the rotation is the center of the image. "
"It can be changed with lv_img_set_pivot(img, pivot_x, pivot_y). 0;0 is "
"the top left corner."
msgstr ""

#: ../widgets/img.md:84
msgid ""
"The quality of the transformation can be adjusted with "
"lv_img_set_antialias(img, true/false). With enabled anti-aliasing the "
"transformations has a higher quality but they are slower."
msgstr ""

#: ../widgets/img.md:86
msgid ""
"The transformations require the whole image to be available. Therefore "
"indexed images (LV_IMG_CF_INDEXED_...), alpha only images "
"(LV_IMG_CF_ALPHA_...) or images from files can be transformed. In other "
"words transformations work only on true color images stored as C array, "
"or if a custom Image decoder returns the whole image."
msgstr ""

#: ../widgets/img.md:89
msgid ""
"Note that, the real coordinates of image object won't change during "
"transformation. That is lv_obj_get_width/height/x/y() will returned the "
"original, non-zoomed coordinates."
msgstr ""

#: ../widgets/img.md:91
msgid "Rotate"
msgstr ""

#: ../widgets/img.md:92
msgid "The images can be rotated with"
msgstr ""

#: ../widgets/imgbtn.md:4
msgid "Image button (lv_imgbtn)"
msgstr ""

#: ../widgets/imgbtn.md:8
msgid ""
"The Image button is very similar to the simple 'Button' object. The only "
"difference is that, it displays user-defined images in each state instead"
" of drawing a rectangle. Before reading this section, please read the "
"Button section for better understanding."
msgstr ""

#: ../widgets/imgbtn.md:12
msgid ""
"The Image button object has only a main part called LV_IMG_BTN_PART_MAIN "
"from where all image style properties are used. It's possible to recolor "
"the image in each state with image_recolor and image_recolor_opa "
"proeprties. For example, to make the image darker if it is pressed."
msgstr ""

#: ../widgets/imgbtn.md:17
msgid "Image sources"
msgstr ""

#: ../widgets/imgbtn.md:18
msgid ""
"To set the image in a state, use the lv_imgbtn_set_src(imgbtn, "
"LV_BTN_STATE_..., &img_src). The image sources works the same as "
"described in the Image object except that, \"Symbols\" are not supported "
"by the Image button."
msgstr ""

#: ../widgets/imgbtn.md:21
msgid ""
"If LV_IMGBTN_TILED is enabled in lv_conf.h, then "
"lv_imgbtn_set_src_tiled(imgbtn, LV_BTN_STATE_..., &img_src_left, "
"&img_src_mid, &img_src_right) becomes available. Using the tiled feature "
"the middle image will be repeated to fill the width of the object. "
"Therefore with LV_IMGBTN_TILED, you can set the width of the Image button"
" using lv_obj_set_width(). However, without this option, the width will "
"be always the same as the image source's width."
msgstr ""

#: ../widgets/imgbtn.md:25
msgid "Button features"
msgstr ""

#: ../widgets/imgbtn.md:27
msgid ""
"Similarly to normal Buttons lv_imgbtn_set_checkable(imgbtn, true/false), "
"lv_imgbtn_toggle(imgbtn) and lv_imgbtn_set_state(imgbtn, "
"LV_BTN_STATE_...) also works."
msgstr ""

#: ../widgets/imgbtn.md:30
msgid ""
"Beside the Generic events, the following Special events are sent by the "
"buttons:"
msgstr ""

#: ../widgets/imgbtn.md:31
msgid "LV_EVENT_VALUE_CHANGED - Sent when the button is toggled."
msgstr ""

#: ../widgets/imgbtn.md:33
msgid ""
"Note that, the generic input device related events (like "
"LV_EVENT_PRESSED) are sent in the inactive state too. You need to check "
"the state with lv_btn_get_state(btn) to ignore the events from inactive "
"buttons."
msgstr ""

#: ../widgets/imgbtn.md:40
msgid "LV_KEY_LEFT/DOWN - Go to non-toggled state if toggling is  enabled."
msgstr ""

#: ../widgets/index.md:4
msgid "Widgets"
msgstr ""

#: ../widgets/keyboard.md:5
msgid "Keyboard (lv_keyboard)"
msgstr ""

#: ../widgets/keyboard.md:9
msgid ""
"The Keyboard object is a special Button matrix with predefined keymaps "
"and other features to realize a virtual keyboard to write text."
msgstr ""

#: ../widgets/keyboard.md:12
msgid "Similarly to Button matices Keyboards consist of 2 part:"
msgstr ""

#: ../widgets/keyboard.md:13
msgid ""
"LV_KEYBOARD_PART_BG which is the main part and uses all the typical "
"background properties"
msgstr ""

#: ../widgets/keyboard.md:14
msgid ""
"LV_KEYBOARD_PART_BTN which is virtual part for the buttons. It also uses "
"all typical backround proeprties and the text properties."
msgstr ""

#: ../widgets/keyboard.md:19
msgid "The Keyboards have thefollowing modes:"
msgstr ""

#: ../widgets/keyboard.md:20
msgid "LV_KEYBOARD_MODE_TEXT_LOWER - Display lower case letters"
msgstr ""

#: ../widgets/keyboard.md:21
msgid "LV_KEYBOARD_MODE_TEXT_UPPER - Display upper case letters"
msgstr ""

#: ../widgets/keyboard.md:22
msgid "LV_KEYBOARD_MODE_TEXT_SPECIAL - Display special characters"
msgstr ""

#: ../widgets/keyboard.md:23
msgid "LV_KEYBOARD_MODE_NUM - Display numbers, +/- sign, and decimal dot."
msgstr ""

#: ../widgets/keyboard.md:25
msgid "The TEXT modes' layout contains buttons to change mode."
msgstr ""

#: ../widgets/keyboard.md:27
msgid ""
"To set the mode manually, use lv_keyboard_set_mode(kb, mode). The default"
" more is  LV_KEYBOARD_MODE_TEXT_UPPER."
msgstr ""

#: ../widgets/keyboard.md:29
msgid "Assign Text area"
msgstr ""

#: ../widgets/keyboard.md:30
msgid ""
"You can assign a Text area to the Keyboard to automatically put the "
"clicked characters there. To assign the text area, use "
"lv_keyboard_set_textarea(kb, ta)."
msgstr ""

#: ../widgets/keyboard.md:33
msgid ""
"The assigned text area's cursor can be managed by the keyboard: when the "
"keyboard is assigned, the previous text area's cursor will be hidden and "
"the new one will be shown. When the keyboard is closed by the Ok or Close"
" buttons, the cursor also will be hidden. The cursor manager feature is "
"enabled by lv_keyboard_set_cursor_manage(kb, true). The default is not "
"managed."
msgstr ""

#: ../widgets/keyboard.md:36
msgid "New Keymap"
msgstr ""

#: ../widgets/keyboard.md:37
msgid ""
"You can specify a new map (layout) for the keyboard with "
"lv_keyboard_set_map(kb, map) and lv_keyboard_set_ctrl_map(kb, ctrl_map). "
"Learn more about the Button matrix object. Keep in mind that, using "
"following keywords will have the same effect as with the original map:"
msgstr ""

#: ../widgets/keyboard.md:40
msgid "LV_SYMBOL_OK - Apply."
msgstr ""

#: ../widgets/keyboard.md:41
msgid "LV_SYMBOL_CLOSE - Close."
msgstr ""

#: ../widgets/keyboard.md:42
msgid "LV_SYMBOL_BACKSPACE - Delete on the left."
msgstr ""

#: ../widgets/keyboard.md:43
msgid "LV_SYMBOL_LEFT - Move the cursor left."
msgstr ""

#: ../widgets/keyboard.md:44
msgid "LV_SYMBOL_RIGHT - Move the cursor right."
msgstr ""

#: ../widgets/keyboard.md:45
msgid "\"ABC\" - Load the uppercase map."
msgstr ""

#: ../widgets/keyboard.md:46
msgid "\"abc\" - Load the lower case map."
msgstr ""

#: ../widgets/keyboard.md:47
msgid "\"Enter\" - New line."
msgstr ""

#: ../widgets/keyboard.md:50
msgid ""
"Besides the Generic events, the following Special events are sent by the "
"keyboards:"
msgstr ""

#: ../widgets/keyboard.md:51
msgid ""
"LV_EVENT_VALUE_CHANGED - Sent when the button is pressed/released or "
"repeated after long press. The event data is set to the ID of the "
"pressed/released button."
msgstr ""

#: ../widgets/keyboard.md:52
msgid "LV_EVENT_APPLY - The Ok button is clicked."
msgstr ""

#: ../widgets/keyboard.md:53
msgid "LV_EVENT_CANCEL - The Close button is clicked."
msgstr ""

#: ../widgets/keyboard.md:55
msgid ""
"The keyboard has a default event handler callback called "
"lv_keyboard_def_event_cb. It handles the button pressing, map changing, "
"the assigned text area, etc. You can completely replace it with your "
"custom event handler however, you can call lv_keyboard_def_event_cb at "
"the beginning of your event handler to handle the same things as before."
msgstr ""

#: ../widgets/keyboard.md:63
msgid "The following Keys are processed by the buttons:"
msgstr ""

#: ../widgets/keyboard.md:64
msgid "LV_KEY_RIGHT/UP/LEFT/RIGHT - To navigate among the buttons and select one."
msgstr ""

#: ../widgets/keyboard.md:65
msgid "LV_KEY_ENTER - To press/release the selected button."
msgstr ""

#: ../widgets/keyboard.md:69
msgid "Examples"
msgstr ""

#: ../widgets/label.md:4
msgid "Label (lv_label)"
msgstr ""

#: ../widgets/label.md:7
msgid "A label is the basic object type that is used to display text."
msgstr ""

#: ../widgets/label.md:10
msgid ""
"The label has only a main part, called LV_LABEL_PART_MAIN. It uses all "
"the typical background properties and the text properties. The padding "
"values can be used to make the area for the text small in the related "
"direction."
msgstr ""

#: ../widgets/label.md:15 ../widgets/msgbox.md:22
msgid "Set text"
msgstr ""

#: ../widgets/label.md:16
msgid ""
"You can set the text on a label at runtime with lv_label_set_text(label, "
"\"New text\"). It will allocate a buffer dynamically, and the provided "
"string will be copied into that buffer. Therefore, you don't need to keep"
" the text you pass to lv_label_set_text in scope after that function "
"returns."
msgstr ""

#: ../widgets/label.md:20
#, python-format
msgid ""
"With lv_label_set_text_fmt(label, \"Value: %d\", 15) printf formatting "
"can be used to set the text."
msgstr ""

#: ../widgets/label.md:22
msgid ""
"Labels are able to show text from a static character buffer which is "
"\\0-terminated. To do so, use lv_label_set_static_text(label, \"Text\"). "
"In this case, the text is not stored in the dynamic memory and the given "
"buffer is used directly instead. This means that the array can't be a "
"local variable which goes out of scope when the function exits. Constant "
"strings are safe to use with lv_label_set_static_text (except when used "
"with LV_LABEL_LONG_DOT, as it modifies the buffer in-place), as they are "
"stored in ROM memory, which is always accessible."
msgstr ""

#: ../widgets/label.md:28
msgid ""
"You can also use a raw array as label text. The array doesn't have to be "
"\\0 terminated. In this case, the text will be saved to the dynamic "
"memory like with lv_label_set_text. To set a raw character array, use the"
" lv_label_set_array_text(label, char_array, size) function."
msgstr ""

#: ../widgets/label.md:33
msgid "Line break"
msgstr ""

#: ../widgets/label.md:35
msgid ""
"Line breaks are handled automatically by the label object. You can use "
"\\n to make a line break. For example: \"line1\\nline2\\n\\nline4\""
msgstr ""

#: ../widgets/label.md:37
msgid "Long modes"
msgstr ""

#: ../widgets/label.md:38
msgid ""
"By default, the width of the label object automatically expands to the "
"text size. Otherwise, the text can be manipulated according to several "
"long mode policies:"
msgstr ""

#: ../widgets/label.md:40
msgid "LV_LABEL_LONG_EXPAND - Expand the object size to the text size (Default)"
msgstr ""

#: ../widgets/label.md:41
msgid ""
"LV_LABEL_LONG_BREAK - Keep the object width, break (wrap) the too long "
"lines and expand the object height"
msgstr ""

#: ../widgets/label.md:42
msgid ""
"LV_LABEL_LONG_DOT - Keep the object size, break the text and write dots "
"in the last line (not supported when using lv_label_set_static_text)"
msgstr ""

#: ../widgets/label.md:43
msgid "LV_LABEL_LONG_SROLL - Keep the size and scroll the label back and forth"
msgstr ""

#: ../widgets/label.md:44
msgid "LV_LABEL_LONG_SROLL_CIRC - Keep the size and scroll the label circularly"
msgstr ""

#: ../widgets/label.md:45
msgid "LV_LABEL_LONG_CROP - Keep the size and crop the text out of it"
msgstr ""

#: ../widgets/label.md:47
msgid ""
"You can specify the long mode with lv_label_set_long_mode(label, "
"LV_LABEL_LONG_...)"
msgstr ""

#: ../widgets/label.md:49
msgid ""
"It's important to note that, when a label is created and its text is set,"
" the label's size already expanded to the text size. In addition with the"
" default LV_LABEL_LONG_EXPAND, long mode lv_obj_set_width/height/size() "
"has no effect."
msgstr ""

#: ../widgets/label.md:52
msgid ""
"So you need to change the long mode first set the new long mode and then "
"set the size with  lv_obj_set_width/height/size()."
msgstr ""

#: ../widgets/label.md:54
msgid ""
"Another important note is that LV_LABEL_LONG_DOT manipulates the text "
"buffer in-place in order to add/remove the dots. When lv_label_set_text "
"or lv_label_set_array_text are used, a separate buffer is allocated and "
"this implementation detail is unnoticed. This is not the case with "
"lv_label_set_static_text! The buffer you pass to lv_label_set_static_text"
" must be writable if you plan to use LV_LABEL_LONG_DOT."
msgstr ""

#: ../widgets/label.md:58 ../widgets/textarea.md:79
msgid "Text align"
msgstr ""

#: ../widgets/label.md:60
msgid ""
"The lines of the text can be aligned to the left, right or center with "
"lv_label_set_align(label, LV_LABEL_ALIGN_LEFT/RIGHT/CENTER). Note that, "
"it will align only the lines, not the label object itself."
msgstr ""

#: ../widgets/label.md:62
msgid ""
"Vertical alignment is not supported by the label itself; you should place"
" the label inside a larger container and align the whole label object "
"instead."
msgstr ""

#: ../widgets/label.md:64
msgid "Text recolor"
msgstr ""

#: ../widgets/label.md:65
msgid ""
"In the text, you can use commands to recolor parts of the text. For "
"example: \"Write a #ff0000 red# word\". This feature can be enabled "
"individually for each label by lv_label_set_recolor() function."
msgstr ""

#: ../widgets/label.md:68
msgid ""
"Note that, recoloring work only in a single line. Therefore, \\n should "
"not use in a recolored text or it should be wrapped by "
"LV_LABEL_LONG_BREAK else, the text in the new line won't be recolored."
msgstr ""

#: ../widgets/label.md:70 ../widgets/textarea.md:91
msgid "Very long texts"
msgstr ""

#: ../widgets/label.md:72
msgid ""
"Lvgl can efficiently handle very long (> 40k characters) by saving some "
"extra data (~12 bytes) to speed up drawing. To enable this feature, set "
"LV_LABEL_LONG_TXT_HINT   1 in lv_conf.h."
msgstr ""

#: ../widgets/label.md:74
msgid "Symbols"
msgstr ""

#: ../widgets/label.md:75
msgid ""
"The labels can display symbols alongside letters (or on their own). Read "
"the Font section to learn more about the symbols."
msgstr ""

#: ../widgets/led.md:4
msgid "LED (lv_led)"
msgstr ""

#: ../widgets/led.md:8
msgid ""
"The LEDs are rectangle-like (or circle) object. It's brightness can be "
"adjusted. With lower brightness the the colors of the LED become darker."
msgstr ""

#: ../widgets/led.md:11
msgid ""
"The LEDs have only one main part, called LV_LED_PART_MAIN and it uses all"
" the typical background style properties."
msgstr ""

#: ../widgets/led.md:15
msgid "Brightness"
msgstr ""

#: ../widgets/led.md:16
msgid ""
"You can set their brightness with lv_led_set_bright(led, bright). The "
"brightness should be between 0 (darkest) and 255 (lightest)."
msgstr ""

#: ../widgets/led.md:18
msgid "Toggle"
msgstr ""

#: ../widgets/led.md:19
msgid ""
"Use lv_led_on(led) and lv_led_off(led) to set the brightness to a "
"predefined ON or OFF value. The lv_led_toggle(led) toggles between the ON"
" and OFF state."
msgstr ""

#: ../widgets/line.md:4
msgid "Line (lv_line)"
msgstr ""

#: ../widgets/line.md:7
msgid ""
"The Line object is capable of drawing straight lines between a set of "
"points."
msgstr ""

#: ../widgets/line.md:10
msgid ""
"The Line has only a main part, called LV_LABEL_PART_MAIN. It uses all the"
" line style properties."
msgstr ""

#: ../widgets/line.md:14
msgid "Set points"
msgstr ""

#: ../widgets/line.md:15
msgid ""
"The points has to be stored in an lv_point_t array and passed to the "
"object by the lv_line_set_points(lines, point_array, point_cnt) function."
msgstr ""

#: ../widgets/line.md:18
msgid ""
"It is possible to automatically set the size of the line object according"
" to its points. It can be enable with the lv_line_set_auto_size(line, "
"true) function. If enabled then when the points are set the object's "
"width and height will be changed according to the maximal x and y "
"coordinates among the points. The auto size is enabled by default."
msgstr ""

#: ../widgets/line.md:22
msgid "Invert y"
msgstr ""

#: ../widgets/line.md:23
msgid ""
"By deafult, the y == 0 point is in the top of the object. It might be "
"conter-intuitive in some cases so the y coordinates can be inverted with "
"lv_line_set_y_invert(line, true). In this case,  y == 0 will be the "
"bottom of teh obejct. The y invert is disabled by default."
msgstr ""

#: ../widgets/linemeter.md:4
msgid "Line meter (lv_lmeter)"
msgstr ""

#: ../widgets/linemeter.md:8
msgid ""
"The Line meter object consists of some radial lines which draw a scale. "
"Setting a value for the Line meter will change the color of the scale "
"lines proportionally."
msgstr ""

#: ../widgets/linemeter.md:11
msgid ""
"The Line meter has only a main part, called LV_LINEMETER_PART_MAIN. It "
"uses all the typical background properties the draw a rectangle-like or "
"circle background and the line and scale properties to draw the scale "
"lines. The active lines (which are related to smaller values the the "
"current value) are colored from line_color to scale_grad_color. The lines"
" in the end (after the current value) are set to scale_end_color color."
msgstr ""

#: ../widgets/linemeter.md:16
msgid "Set value"
msgstr ""

#: ../widgets/linemeter.md:17
msgid ""
"When setting a new value with lv_linemeter_set_value(linemeter, "
"new_value) the proportional part of the scale will be recolored."
msgstr ""

#: ../widgets/linemeter.md:19
msgid "Range and Angles"
msgstr ""

#: ../widgets/linemeter.md:20
msgid ""
"The lv_linemeter_set_range(linemeter, min, max) function sets the range "
"of the line meter."
msgstr ""

#: ../widgets/linemeter.md:22
msgid ""
"You can set the angle of the scale and the number of the lines by: "
"lv_linemeter_set_scale(linemeter, angle, line_num). The default angle is "
"240 and the default line number is 31."
msgstr ""

#: ../widgets/linemeter.md:25
msgid "Angle offset"
msgstr ""

#: ../widgets/linemeter.md:26
msgid ""
"By default the scale angle is interpreted symmetrically to the y axis. It"
" results in \"standing\" line meter. With lv_linemeter_set_angle_offset "
"an offset can be added the scale angle. It can used e.g to put a quarter "
"line meter into a corner or a half line meter to the right or left side."
msgstr ""

#: ../widgets/linemeter.md:29
msgid "Mirror"
msgstr ""

#: ../widgets/linemeter.md:31
msgid ""
"By default the Line meter's lines are activated clock-wise. It can be "
"changed using lv_linemeter_set_mirror(linemeter, true/false)."
msgstr ""

#: ../widgets/list.md:4
msgid "List (lv_list)"
msgstr ""

#: ../widgets/list.md:7
msgid ""
"The Lists are built from a background Page and Buttons on it. The Buttons"
" contain an optional icon-like Image (which can be a symbol too) and a "
"Label. When the list becomes long enough it can be scrolled."
msgstr ""

#: ../widgets/list.md:12
msgid "The List has the same parts as the Page"
msgstr ""

#: ../widgets/list.md:13
msgid "LV_LIST_PART_BG"
msgstr ""

#: ../widgets/list.md:14
msgid "LV_LIST_PART_SCRL"
msgstr ""

#: ../widgets/list.md:15
msgid "LV_LIST_PART_SCRLBAR"
msgstr ""

#: ../widgets/list.md:16
msgid "LV_LIST_PART_EDGE_FLASH"
msgstr ""

#: ../widgets/list.md:18
msgid "Refer to the Page documentation for details."
msgstr ""

#: ../widgets/list.md:20
msgid ""
"The buttons on the list are treated as normal buttons and they only have "
"a main part called LV_BTN_PART_MAIN."
msgstr ""

#: ../widgets/list.md:24 ../widgets/msgbox.md:25
msgid "Add buttons"
msgstr ""

#: ../widgets/list.md:25
msgid ""
"You can add new list elements (button) with lv_list_add_btn(list, "
"&icon_img, \"Text\") or with symbol lv_list_add_btn(list, SYMBOL_EDIT, "
"\"Edit text\"). If you do not want to add image use NULL as image source."
" The function returns with a pointer to the created button to allow "
"further configurations."
msgstr ""

#: ../widgets/list.md:28
msgid ""
"The width of the buttons is set to maximum according to the object width."
" The height of the buttons are adjusted automatically according to the "
"content. (content height + padding_top + padding_bottom)."
msgstr ""

#: ../widgets/list.md:31
msgid ""
"The labels are created with LV_LABEL_LONG_SROLL_CIRC long mode to "
"automatically scroll the long labels circularly."
msgstr ""

#: ../widgets/list.md:33
msgid ""
"lv_list_get_btn_label(list_btn) and lv_list_get_btn_img(list_btn) can be "
"used to get the label and the image of a list button. The text can be et "
"directly with lv_list_get_btn_text(list_btn)."
msgstr ""

#: ../widgets/list.md:36
msgid "Delete buttons"
msgstr ""

#: ../widgets/list.md:37
msgid ""
"To delete a list element just use lv_obj_del(btn) on the return value of "
"lv_list_add_btn()."
msgstr ""

#: ../widgets/list.md:39
msgid "To clean the list (remove all buttons) use lv_list_clean(list)"
msgstr ""

#: ../widgets/list.md:41 ../widgets/page.md:54
msgid "Manual navigation"
msgstr ""

#: ../widgets/list.md:42
msgid ""
"You can navigate manually in the list with lv_list_up(list) and "
"lv_list_down(list)."
msgstr ""

#: ../widgets/list.md:44
msgid ""
"You can focus on a button directly using lv_list_focus(btn, "
"LV_ANIM_ON/OFF)."
msgstr ""

#: ../widgets/list.md:46
msgid ""
"The animation time of up/down/focus movements can be set via: "
"lv_list_set_anim_time(list, anim_time). Zero animation time means not "
"animations."
msgstr ""

#: ../widgets/list.md:49
msgid ""
"By default the list is vertical. To get a horizontal list use "
"lv_list_set_layout(list, LV_LAYOUT_ROW_MID)."
msgstr ""

#: ../widgets/list.md:51 ../widgets/page.md:57 ../widgets/textarea.md:113
#: ../widgets/tileview.md:63
msgid "Edge flash"
msgstr ""

#: ../widgets/list.md:52
msgid ""
"A circle-like effect can be shown when the list reaches the most top or "
"bottom position. lv_list_set_edge_flash(list, true) enables this feature."
msgstr ""

#: ../widgets/list.md:55 ../widgets/page.md:60 ../widgets/tabview.md:52
#: ../widgets/textarea.md:105 ../widgets/tileview.md:50
msgid "Scroll propagation"
msgstr ""

#: ../widgets/list.md:56
msgid ""
"If the list is created on an other scrollable element (like a Page) and "
"the list can't be scrolled further the scrolling can be propagated to the"
" parent. This way the scroll will be continued on the parent. It can be "
"enabled with lv_list_set_scroll_propagation(list, true)"
msgstr ""

#: ../widgets/list.md:65
msgid "The following Keys are processed by the Lists:"
msgstr ""

#: ../widgets/list.md:66 ../widgets/msgbox.md:47
msgid "LV_KEY_RIGHT/DOWN Select the next button"
msgstr ""

#: ../widgets/list.md:67
msgid "LV_KEY_LEFT/UP Select the previous button"
msgstr ""

#: ../widgets/list.md:71
msgid "The Selected buttons are in LV_BTN_STATE_PR/TG_PR state."
msgstr ""

#: ../widgets/list.md:73
msgid ""
"To manually select a button use lv_list_set_btn_selected(list, btn). When"
" the list is defocused and focused again it will restore the last "
"selected button."
msgstr ""

#: ../widgets/msgbox.md:4
msgid "Message box (lv_msdbox)"
msgstr ""

#: ../widgets/msgbox.md:7
msgid ""
"The Message boxes act as pop-ups. They are built from a background "
"Container, a Label and a Button matrix for buttons."
msgstr ""

#: ../widgets/msgbox.md:10
msgid ""
"The text will be broken into multiple lines automatically (has "
"LV_LABEL_LONG_MODE_BREAK) and the height will be set automatically to "
"involve the text and the buttons (LV_FIT_TIGHT fit vertically)-"
msgstr ""

#: ../widgets/msgbox.md:13
msgid ""
"The Message box's main part is called LV_MSGBOX_PART_MAIN and it uses all"
" the typical background style properties. Using padding will add space on"
" the sides. pad_inner will add space between the text and the buttons. "
"The label style properties affect the style of text."
msgstr ""

#: ../widgets/msgbox.md:16
msgid "The buttons parts are the same as in case of Button matrix:"
msgstr ""

#: ../widgets/msgbox.md:17
msgid "LV_MSGBOX_PART_BTN_BG the background of the buttons"
msgstr ""

#: ../widgets/msgbox.md:18
msgid "LV_MSGBOX_PART_BTN the buttons"
msgstr ""

#: ../widgets/msgbox.md:23
msgid ""
"To set the text use the lv_msgbox_set_text(msgbox, \"My text\") function."
" Not only the pointer of the text will be saved, so the the text can be "
"in a local variable too."
msgstr ""

#: ../widgets/msgbox.md:26
msgid ""
"To add buttons use the lv_msgbox_add_btns(msgbox, btn_str) function. The "
"button's text needs to be specified like const char * btn_str[] = "
"{\"Apply\", \"Close\", \"\"}. For more information visit the Button "
"matrix documentation."
msgstr ""

#: ../widgets/msgbox.md:29
msgid ""
"The button matrix will be created only when lv_msgbox_add_btns() is "
"called for the first time."
msgstr ""

#: ../widgets/msgbox.md:31
msgid "Auto-close"
msgstr ""

#: ../widgets/msgbox.md:32
msgid ""
"With lv_msgbox_start_auto_close(mbox, delay) the message box can be "
"closed automatically after delay milliseconds with an animation. The "
"lv_mbox_stop_auto_close(mbox) function stops a started auto close."
msgstr ""

#: ../widgets/msgbox.md:34
msgid ""
"The duration of the close animation can be set by "
"lv_mbox_set_anim_time(mbox, anim_time)."
msgstr ""

#: ../widgets/msgbox.md:37
msgid ""
"Besides the Generic events the following Special events are sent by the "
"Message boxes:"
msgstr ""

#: ../widgets/msgbox.md:38
msgid ""
"LV_EVENT_VALUE_CHANGED sent when the button is clicked. The event data is"
" set to ID of the clicked button."
msgstr ""

#: ../widgets/msgbox.md:40
msgid ""
"The Message box has a default event callback which closes itself when a "
"button is clicked."
msgstr ""

#: ../widgets/msgbox.md:44 ../widgets/page.md:86
msgid "##Keys"
msgstr ""

#: ../widgets/msgbox.md:48
msgid "LV_KEY_LEFT/TOP Select the previous button"
msgstr ""

#: ../widgets/msgbox.md:49
msgid "LV_KEY_ENTER Clicks the selected button"
msgstr ""

#: ../widgets/obj.md:4
msgid "Base object (lv_obj)"
msgstr ""

#: ../widgets/obj.md:8
msgid ""
"The 'Base Object' implements the basic properties of widgets on a screen,"
" such as:"
msgstr ""

#: ../widgets/obj.md:9
msgid "coordinates"
msgstr ""

#: ../widgets/obj.md:10
msgid "parent object"
msgstr ""

#: ../widgets/obj.md:11
msgid "children"
msgstr ""

#: ../widgets/obj.md:12
msgid "main style"
msgstr ""

#: ../widgets/obj.md:13
msgid "attributes like Click enable, Drag enable, etc."
msgstr ""

#: ../widgets/obj.md:15
msgid ""
"In object-oriented thinking, it is the base class from which all other "
"objects in LVGL are inherited. This, among another things, helps reduce "
"code duplication."
msgstr ""

#: ../widgets/obj.md:17
msgid ""
"The functions and functionalities of Base object can be used with other "
"widgets too. For example lv_obj_set_width(slider, 100)"
msgstr ""

#: ../widgets/obj.md:19
msgid ""
"The Base object can be directly used as a simple widgets. It nothing else"
" then a rectangle."
msgstr ""

#: ../widgets/obj.md:21
msgid "Coordinates"
msgstr ""

#: ../widgets/obj.md:23
msgid "Size"
msgstr ""

#: ../widgets/obj.md:24
msgid ""
"The object size can be modified on individual axes with "
"lv_obj_set_width(obj, new_width) and lv_obj_set_height(obj, new_height), "
"or both axes can be modified at the same time with lv_obj_set_size(obj, "
"new_width, new_height)."
msgstr ""

#: ../widgets/obj.md:26
msgid ""
"Styles can add Margin to the objects. Margin tells that \"I want this "
"space around me\". To set width or height reduced by the margin "
"lv_obj_set_width_margin(obj, new_width) or lv_obj_set_height_margin(obj, "
"new_height). In more exact way: new_width = left_margin + object_width + "
"right_margin."
msgstr ""

#: ../widgets/obj.md:30
msgid ""
"To get the width or height which includes the margins use "
"lv_obj_get_width/height_margin(obj)."
msgstr ""

#: ../widgets/obj.md:32
msgid ""
"Styles can add Padding to the object as well. Padding means \"I don't "
"want my children too close to my sides, so keep this space\". To set "
"width or height reduced by the padding lv_obj_set_width_fit(obj, "
"new_width) or lv_obj_set_height_fit(obj, new_height).In a more exact way:"
" new_width = left_pad + object_width + right_pad To get the width or "
"height which is REDUCED by padding use lv_obj_get_width/height_fit(obj). "
"It can be considered the \"useful size of the object\"."
msgstr ""

#: ../widgets/obj.md:37
msgid ""
"Margin and padding gets important when Layout or Auto-fit is used by "
"other widgets."
msgstr ""

#: ../widgets/obj.md:39
msgid "Position"
msgstr ""

#: ../widgets/obj.md:40
msgid ""
"You can set the x and y coordinates relative to the parent with "
"lv_obj_set_x(obj, new_x) and lv_obj_set_y(obj, new_y), or both at the "
"same time with lv_obj_set_pos(obj, new_x, new_y)."
msgstr ""

#: ../widgets/obj.md:42
msgid "Alignment"
msgstr ""

#: ../widgets/obj.md:43
msgid ""
"You can align the object to another with lv_obj_align(obj, obj_ref, "
"LV_ALIGN_..., x_ofs, y_ofs)."
msgstr ""

#: ../widgets/obj.md:44
msgid "obj is the object to align."
msgstr ""

#: ../widgets/obj.md:45
msgid ""
"obj_ref is a reference object. obj will be aligned to it. If obj_ref = "
"NULL, then the parent of obj will be used."
msgstr ""

#: ../widgets/obj.md:46
msgid ""
"The third argument is the type of alignment. These are the possible "
"options: Alignment types in LVGL"
msgstr ""

#: ../widgets/obj.md:49
msgid "The alignment types build like LV_ALIGN_OUT_TOP_MID."
msgstr ""

#: ../widgets/obj.md:50
msgid ""
"The last two arguments allow you to shift the object by a specified "
"number of pixels after aligning it."
msgstr ""

#: ../widgets/obj.md:52
msgid ""
"For example, to align a text below an image: lv_obj_align(text, image, "
"LV_ALIGN_OUT_BOTTOM_MID, 0, 10). Or to align a text in the middle of its "
"parent: lv_obj_align(text, NULL, LV_ALIGN_CENTER, 0, 0)."
msgstr ""

#: ../widgets/obj.md:55
msgid ""
"lv_obj_align_origo works similarly to lv_obj_align but it aligns the "
"center of the object."
msgstr ""

#: ../widgets/obj.md:57
msgid ""
"For example, lv_obj_align_origo(btn, image, LV_ALIGN_OUT_BOTTOM_MID, 0, "
"0) will align the center of the button the bottom of the image."
msgstr ""

#: ../widgets/obj.md:59
msgid ""
"The parameters of the alignment will be saved in the object if "
"LV_USE_OBJ_REALIGN is enabled in lv_conf.h. You can then realign the "
"objects simply by calling lv_obj_realign(obj). It's equivalent to calling"
" lv_obj_align again with the same parameters."
msgstr ""

#: ../widgets/obj.md:62
msgid ""
"If the alignment happened with lv_obj_align_origo, then it will be used "
"when the object is realigned."
msgstr ""

#: ../widgets/obj.md:64
msgid ""
"If lv_obj_set_auto_realign(obj, true) is used the object will be "
"realigned automatically, if its size changes in "
"lv_obj_set_width/height/size() functions. It's very useful when size "
"animations are applied to the object and the original position needs to "
"be kept."
msgstr ""

#: ../widgets/obj.md:67
msgid ""
"Note that the coordinates of screens can't be changed. Attempting to use "
"these functions on screens will result in undefined behavior."
msgstr ""

#: ../widgets/obj.md:69
msgid "Parents and children"
msgstr ""

#: ../widgets/obj.md:70
msgid ""
"You can set a new parent for an object with lv_obj_set_parent(obj, "
"new_parent). To get the current parent, use lv_obj_get_parent(obj)."
msgstr ""

#: ../widgets/obj.md:72
msgid ""
"To get the children of an object, use lv_obj_get_child(obj, child_prev) "
"(from last to first) or lv_obj_get_child_back(obj, child_prev) (from "
"first to last). To get the first child, pass NULL as the second parameter"
" and use the return value to iterate through the children. The function "
"will return NULL if there are no more children. For example:"
msgstr ""

#: ../widgets/obj.md:83
msgid ""
"lv_obj_count_children(obj) tells the number of children on an object. "
"lv_obj_count_children_recursive(obj) also tells the number of children "
"but counts children of children recursively."
msgstr ""

#: ../widgets/obj.md:85
msgid "Screens"
msgstr ""

#: ../widgets/obj.md:86
msgid ""
"When you have created a screen like lv_obj_t * screen = "
"lv_obj_create(NULL, NULL), you can load it with lv_scr_load(screen). The "
"lv_scr_act() function gives you a pointer to the current screen."
msgstr ""

#: ../widgets/obj.md:88
msgid ""
"If you have more display then it's important to know that these functions"
" operate on the lastly created or the explicitly selected (with "
"lv_disp_set_default) display."
msgstr ""

#: ../widgets/obj.md:90
msgid "To get an object's screen use the lv_obj_get_screen(obj) function."
msgstr ""

#: ../widgets/obj.md:92
msgid "Layers"
msgstr ""

#: ../widgets/obj.md:93
msgid "There are two  automatically generated layers:"
msgstr ""

#: ../widgets/obj.md:94
msgid "top layer"
msgstr ""

#: ../widgets/obj.md:95
msgid "system layer"
msgstr ""

#: ../widgets/obj.md:97
msgid ""
"They are independent of the screens and they will be shown on every "
"screen. The top layer is above every object on the screen and the system "
"layer is above the top layer too. You can add any pop-up windows to the "
"top layer freely. But, the system layer is restricted to system-level "
"things (e.g. mouse cursor will be placed here in lv_indev_set_cursor())."
msgstr ""

#: ../widgets/obj.md:100
msgid ""
"The lv_layer_top() and lv_layer_sys() functions gives a pointer to the "
"top or system layer."
msgstr ""

#: ../widgets/obj.md:102
msgid ""
"You can bring an object to the foreground or send it to the background "
"with lv_obj_move_foreground(obj) and lv_obj_move_background(obj)."
msgstr ""

#: ../widgets/obj.md:104
msgid "Read the Layer overview section to learn more about layers."
msgstr ""

#: ../widgets/obj.md:108
msgid ""
"To set an event callback for an object, use lv_obj_set_event_cb(obj, "
"event_cb),"
msgstr ""

#: ../widgets/obj.md:110
msgid ""
"To manually send an event to an object, use lv_event_send(obj, "
"LV_EVENT_..., data)"
msgstr ""

#: ../widgets/obj.md:112
msgid "Read the Event overview to learn more about the events."
msgstr ""

#: ../widgets/obj.md:114
msgid "Parts"
msgstr ""

#: ../widgets/obj.md:116
msgid ""
"The widgets can have multiple parts. For example a Button has only a main"
" part but a Slider is built from a background, an indicator and a knob."
msgstr ""

#: ../widgets/obj.md:118
msgid ""
"The name of the parts is constructed like LV_ + <TYPE> _PART_ <NAME>. For"
" example LV_BTN_PART_MAIN or LV_SLIDER_PART_KNOB. The parts are usually "
"used when styles are add to the objects. Using parts different styles can"
" be assigned to the different parts of the objects."
msgstr ""

#: ../widgets/obj.md:121
msgid ""
"To learn more about the parts read the related section of the Style "
"overview."
msgstr ""

#: ../widgets/obj.md:124
msgid "The object can be in a combinations of the following states:"
msgstr ""

#: ../widgets/obj.md:125
msgid "LV_STATE_DEFAULT  Normal, released"
msgstr ""

#: ../widgets/obj.md:126
msgid "LV_STATE_CHECKED Toggled or checked"
msgstr ""

#: ../widgets/obj.md:127
msgid ""
"LV_STATE_FOCUSED Focused via keypad or encoder or clicked via "
"touchpad/mouse"
msgstr ""

#: ../widgets/obj.md:128
msgid "LV_STATE_EDITED  Edit by an encoder"
msgstr ""

#: ../widgets/obj.md:129
msgid "LV_STATE_HOVERED Hovered by mouse (not supported now)"
msgstr ""

#: ../widgets/obj.md:130
msgid "LV_STATE_PRESSED Pressed"
msgstr ""

#: ../widgets/obj.md:131
msgid "LV_STATE_DISABLED Disabled or inactive"
msgstr ""

#: ../widgets/obj.md:133
msgid ""
"The states are usually automatically changed by the library as the user "
"presses, releases, focuses etc an object. However, the states can be "
"changed manually too. To completely overwrite the current state use "
"lv_obj_set_state(obj, part, LV_STATE...). To set or clear given state "
"(but leave to other states untouched) use lv_obj_add/clear_state(obj, "
"part, LV_STATE_...) In both cases ORed state values can be used as well. "
"E.g. lv_obj_set_state(obj, part, LV_STATE_PRESSED | LV_PRESSED_CHECKED)."
msgstr ""

#: ../widgets/obj.md:138
msgid ""
"To learn more about the states read the related section of the Style "
"overview."
msgstr ""

#: ../widgets/obj.md:140
msgid "Style"
msgstr ""

#: ../widgets/obj.md:141
msgid "Be sure to read the Style overview first."
msgstr ""

#: ../widgets/obj.md:143
msgid ""
"To add a style to an object use lv_obj_add_style(obj, part, &new_style) "
"function. The Base object use all the rectangle-like style properties."
msgstr ""

#: ../widgets/obj.md:145
msgid "To remove all styles from an object use lv_obj_reset_style_list(obj, part)"
msgstr ""

#: ../widgets/obj.md:147
msgid ""
"If you modify a style, which is already used by objects, in order to "
"refresh the affected objects you can use either lv_obj_refresh_style(obj)"
" on each object using it or to notify all objects with a given style use "
"lv_obj_report_style_mod(&style). If the parameter of "
"lv_obj_report_style_mod is NULL, all objects will be notified."
msgstr ""

#: ../widgets/obj.md:150
msgid "Attributes"
msgstr ""

#: ../widgets/obj.md:151
msgid ""
"There are some attributes which can be enabled/disabled by "
"lv_obj_set_...(obj, true/false):"
msgstr ""

#: ../widgets/obj.md:153
msgid ""
"hidden -  Hide the object. It will not be drawn and will be considered by"
" input devices as if it doesn't exist., Its children will be hidden too."
msgstr ""

#: ../widgets/obj.md:154
msgid ""
"click -  Allows you to click the object via input devices. If disabled, "
"then click events are passed to the object behind this one. (E.g. Labels "
"are not clickable by default)"
msgstr ""

#: ../widgets/obj.md:155
msgid ""
"top -  If enabled then when this object or any of its children is clicked"
" then this object comes to the foreground."
msgstr ""

#: ../widgets/obj.md:156
msgid "drag - Enable dragging (moving by an input device)"
msgstr ""

#: ../widgets/obj.md:157
msgid ""
"drag_dir - Enable dragging only in specific directions. Can be "
"LV_DRAG_DIR_HOR/VER/ALL."
msgstr ""

#: ../widgets/obj.md:158
msgid ""
"drag_throw - Enable \"throwing\" with dragging as if the object would "
"have momentum"
msgstr ""

#: ../widgets/obj.md:159
msgid ""
"drag_parent - If enabled then the object's parent will be moved during "
"dragging. It will look like as if the parent is dragged. Checked "
"recursively, so can propagate to grandparents too."
msgstr ""

#: ../widgets/obj.md:160
msgid ""
"parent_event - Propagate the events to the parents too. Checked "
"recursively, so can propagate to grandparents too."
msgstr ""

#: ../widgets/obj.md:161
msgid ""
"opa_scale_enable - Enable opacity scaling. See the [#opa-scale](Opa "
"scale) section."
msgstr ""

#: ../widgets/obj.md:163
msgid "Protect"
msgstr ""

#: ../widgets/obj.md:164
msgid ""
"There are some specific actions which happen automatically in the "
"library. To prevent one or more that kind of actions, you can protect the"
" object against them. The following protections exists:"
msgstr ""

#: ../widgets/obj.md:166
msgid "LV_PROTECT_NONE No protection"
msgstr ""

#: ../widgets/obj.md:167
msgid "LV_PROTECT_POS  Prevent automatic positioning (e.g.  Layout in Containers)"
msgstr ""

#: ../widgets/obj.md:168
msgid ""
"LV_PROTECT_FOLLOW Prevent the object be followed (make a \"line break\") "
"in automatic ordering (e.g. Layout in Containers)"
msgstr ""

#: ../widgets/obj.md:169
msgid ""
"LV_PROTECT_PARENT Prevent automatic parent change. (e.g. Page moves the "
"children created on the background to the scrollable)"
msgstr ""

#: ../widgets/obj.md:170
msgid ""
"LV_PROTECT_PRESS_LOST Prevent losing press when the press is slid out of "
"the objects. (E.g. a Button can be released out of it if it was being "
"pressed)"
msgstr ""

#: ../widgets/obj.md:171
msgid ""
"LV_PROTECT_CLICK_FOCUS Prevent automatically focusing the object if it's "
"in a Group and click focus is enabled."
msgstr ""

#: ../widgets/obj.md:172
msgid ""
"LV_PROTECT_CHILD_CHG Disable the child change signal. Used internally by "
"the library"
msgstr ""

#: ../widgets/obj.md:174
msgid ""
"The lv_obj_set/clear_protect(obj, LV_PROTECT_...) sets/clears the "
"protection. You can use 'OR'ed values of protection types too."
msgstr ""

#: ../widgets/obj.md:176
msgid "Groups"
msgstr ""

#: ../widgets/obj.md:178
msgid ""
"Once, an object is added to group with lv_group_add_obj(group, obj) the "
"object's current group can be get with lv_obj_get_group(obj)."
msgstr ""

#: ../widgets/obj.md:180
msgid ""
"lv_obj_is_focused(obj) tells if the object is currently focused on its "
"group or not. If the object is not added to a group, false will be "
"returned."
msgstr ""

#: ../widgets/obj.md:182
msgid "Read the Input devices overview to learn more about the Groups."
msgstr ""

#: ../widgets/obj.md:184
msgid "Extended click area"
msgstr ""

#: ../widgets/obj.md:185
msgid ""
"By default, the objects can be clicked only on their coordinates, "
"however, this area can be extended with lv_obj_set_ext_click_area(obj, "
"left, right, top, bottom). left/right/top/bottom describes how far the "
"clickable area should extend past the default in each direction."
msgstr ""

#: ../widgets/obj.md:188
msgid ""
"This feature needs to enabled in lv_conf.h with LV_USE_EXT_CLICK_AREA. "
"The possible values are:"
msgstr ""

#: ../widgets/obj.md:189
msgid "LV_EXT_CLICK_AREA_FULL store all 4 coordinates as lv_coord_t"
msgstr ""

#: ../widgets/obj.md:190
msgid ""
"LV_EXT_CLICK_AREA_TINY store only horizontal and vertical coordinates "
"(use the greater value of left/right and top/bottom) as uint8_t"
msgstr ""

#: ../widgets/obj.md:191
msgid "LV_EXT_CLICK_AREA_OFF Disable this feature"
msgstr ""

#: ../widgets/objmask.md:4
msgid "Object mask (lv_objmask)"
msgstr ""

#: ../widgets/objmask.md:7
msgid ""
"The Object mask is capable of add some mask to drawings when its children"
" is drawn."
msgstr ""

#: ../widgets/objmask.md:10
msgid ""
"The Object mask has only a main part called LV_OBJMASK_PART_BG and it "
"uses the typical background style properties."
msgstr ""

#: ../widgets/objmask.md:14
msgid "Adding mask"
msgstr ""

#: ../widgets/objmask.md:16
msgid "Before adding a mask to the Object mask the mask should be initialized:"
msgstr ""

#: ../widgets/objmask.md:23
msgid "Lvgl supports the following mask types:"
msgstr ""

#: ../widgets/objmask.md:24
msgid ""
"line clip the pixels on the top/bottom left/right of a line. Can be "
"initialized from two points or a point and an angle:"
msgstr ""

#: ../widgets/objmask.md:25
msgid "angle keep the pixels only between a given start and end angle"
msgstr ""

#: ../widgets/objmask.md:26
msgid ""
"radius keep the pixel only inside a rectangle which can have radius (can "
"for a circle too). Can be inverted to keep the pixel outside of the "
"rectangle."
msgstr ""

#: ../widgets/objmask.md:27
msgid ""
"fade fade vertically (change the pixels opacity according to their y "
"position)"
msgstr ""

#: ../widgets/objmask.md:28
msgid "map use an alpha mask (a byte array) to describe the pixels opacity."
msgstr ""

#: ../widgets/objmask.md:30
msgid ""
"The coordinates in the mask are relative to the Object. That is if the "
"object moves the masks move with it."
msgstr ""

#: ../widgets/objmask.md:32
msgid "For the details of the mask init function see the API documentation below."
msgstr ""

#: ../widgets/objmask.md:34
msgid "Update mask"
msgstr ""

#: ../widgets/objmask.md:35
msgid ""
"AN existing mask can be updated with lv_objmask_update_mask(objmask, "
"mask_p, new_param), where mask_p is return value of lv_objmask_add_mask."
msgstr ""

#: ../widgets/objmask.md:37
msgid "Remove mask"
msgstr ""

#: ../widgets/objmask.md:38
msgid "A mask can be removed with lv_objmask_remove_mask(objmask, mask_p)"
msgstr ""

#: ../widgets/page.md:4
msgid "Page (lv_page)"
msgstr ""

#: ../widgets/page.md:8
msgid "The Page consist of two Containers on each other:"
msgstr ""

#: ../widgets/page.md:9
msgid "a background"
msgstr ""

#: ../widgets/page.md:10
msgid "a top which is scrollable."
msgstr ""

#: ../widgets/page.md:14
msgid ""
"The Page's main part is called LV_PAGE_PART_BG which is the background of"
" the Page. It uses all the typical background style properties. Using "
"padding will add space on the sides."
msgstr ""

#: ../widgets/page.md:16
msgid ""
"The scrollable object can be referenced via the LV_PAGE_PART_SCRL part. "
"It also uses all the typical background style properties and padding to "
"add space on the sides."
msgstr ""

#: ../widgets/page.md:18
msgid ""
"LV_LIST_PART_SCROLLBAR is a virtual part of the background to draw the "
"scroll bars. Uses all the typical background style properties, size to "
"set the width of the scroll bars, and pad_right and pad_bottom to set the"
" spacing."
msgstr ""

#: ../widgets/page.md:20
msgid ""
"LV_LIST_PART_EDGE_FLASHis also a virtual part of the background to draw a"
" semicircle on the sides when the list can not be scrolled in that "
"direction further. Uses all the typical background properties."
msgstr ""

#: ../widgets/page.md:24
msgid ""
"The background object can be referenced as the page itself like. E.g. to "
"set the page's width: lv_obj_set_width(page, 100)."
msgstr ""

#: ../widgets/page.md:26
msgid ""
"If a child is created on the page it will be automatically moved to the "
"scrollable container. If the scrollable container becomes larger then the"
" background it can be scrolled by dragging (like the lists on "
"smartphones)."
msgstr ""

#: ../widgets/page.md:29
msgid ""
"By default, the scrollable's has LV_FIT_MAX fit in all directions. It "
"means the scrollable size will be the same as the background's size "
"(minus the padding) while the children are in the background. But when an"
" object is positioned out of the background the scrollable size will be "
"increased to involve it."
msgstr ""

#: ../widgets/page.md:33 ../widgets/textarea.md:101 ../widgets/win.md:35
msgid "Scrollbars"
msgstr ""

#: ../widgets/page.md:35
msgid "Scrollbars can be shown according to four policies:"
msgstr ""

#: ../widgets/page.md:36
msgid "LV_SCRLBAR_MODE_OFF Never show scroll bars"
msgstr ""

#: ../widgets/page.md:37
msgid "LV_SCRLBAR_MODE_ON Always show scroll bars"
msgstr ""

#: ../widgets/page.md:38
msgid "LV_SCRLBAR_MODE_DRAG Show scroll bars when the page is being dragged"
msgstr ""

#: ../widgets/page.md:39
msgid ""
"LV_SCRLBAR_MODE_AUTO Show scroll bars when the scrollable container is "
"large enough to be scrolled"
msgstr ""

#: ../widgets/page.md:40
msgid "LV_SCRLBAR_MODE_HIDE Hide the scroll bar temporally"
msgstr ""

#: ../widgets/page.md:41
msgid ""
"LV_SCRLBAR_MODE_UNHIDE  Unhide the previously hidden scrollbar. Recover "
"the original mode too"
msgstr ""

#: ../widgets/page.md:43
msgid ""
"The scroll bar show policy can be changed by: "
"lv_page_set_scrlbar_mode(page, SB_MODE). The default value is "
"LV_SCRLBAR_MODE_AUTO."
msgstr ""

#: ../widgets/page.md:45
msgid "Glue object"
msgstr ""

#: ../widgets/page.md:46
msgid ""
"A children can be \"glued\" to the page. In this case, if the page can be"
" scrolled by dragging that object. It can be enabled by the "
"lv_page_glue_obj(child, true)."
msgstr ""

#: ../widgets/page.md:49
msgid "Focus object"
msgstr ""

#: ../widgets/page.md:50
msgid ""
"An object on a page can be focused with lv_page_focus(page, child, "
"LV_ANIM_ONO/FF). It will move the scrollable container to show a child. "
"The time of the animation can be set by lv_page_set_anim_time(page, "
"anim_time) in milliseconds. child doesn't have to be a direct child of "
"the page. This is it works if the scrollable object is the grandparent of"
" the object too."
msgstr ""

#: ../widgets/page.md:55
msgid ""
"You can move the scrollable object manually using "
"lv_page_scroll_hor(page, dist) and lv_page_scroll_ver(page, dist)"
msgstr ""

#: ../widgets/page.md:58
msgid ""
"A circle-like effect can be shown if the list reached the most "
"top/bottom/left/right position. lv_page_set_edge_flash(list, en) enables "
"this feature."
msgstr ""

#: ../widgets/page.md:62
msgid ""
"If the list is created on an other scrollable element (like an other "
"page) and the Page can't be scrolled further the scrolling can be "
"propagated to the parent to continue the scrolling on the parent. It can "
"be enabled with lv_page_set_scroll_propagation(list, true)"
msgstr ""

#: ../widgets/page.md:65
msgid "Clean the page"
msgstr ""

#: ../widgets/page.md:66
msgid ""
"All the object created on the page can be clean with lv_page_clean(page)."
" Note that lv_obj_clean(page) doesn't work here because it would delete "
"the scrollable object too."
msgstr ""

#: ../widgets/page.md:68
msgid "Scrollable API"
msgstr ""

#: ../widgets/page.md:69
msgid "There are functions to directly set/get the scrollable's attributes:"
msgstr ""

#: ../widgets/page.md:70
msgid "lv_page_get_scrl()"
msgstr ""

#: ../widgets/page.md:71
msgid "lv_page_set_scrl_fit/fint2/fit4()"
msgstr ""

#: ../widgets/page.md:72
msgid "lv_page_set_scrl_width()"
msgstr ""

#: ../widgets/page.md:73
msgid "lv_page_set_scrl_height()"
msgstr ""

#: ../widgets/page.md:74
msgid "lv_page_set_scrl_fit_width()"
msgstr ""

#: ../widgets/page.md:75
msgid "lv_page_set_scrl_fit_height()"
msgstr ""

#: ../widgets/page.md:76
msgid "lv_page_set_scrl_layout()"
msgstr ""

#: ../widgets/page.md:81
msgid ""
"The scrollable object has a default event callback which propagates the "
"following events to the background object: LV_EVENT_PRESSED, "
"LV_EVENT_PRESSING, LV_EVENT_PRESS_LOST,LV_EVENT_RELEASED, "
"LV_EVENT_SHORT_CLICKED, LV_EVENT_CLICKED, LV_EVENT_LONG_PRESSED, "
"LV_EVENT_LONG_PRESSED_REPEAT"
msgstr ""

#: ../widgets/page.md:88 ../widgets/win.md:58
msgid "The following Keys are processed by the Page:"
msgstr ""

#: ../widgets/page.md:89 ../widgets/win.md:59
msgid "LV_KEY_RIGHT/LEFT/UP/DOWN Scroll the page"
msgstr ""

#: ../widgets/roller.md:4
msgid "Roller (lv_roller)"
msgstr ""

#: ../widgets/roller.md:8
msgid "Roller allows you to simply select one option from more with scrolling."
msgstr ""

#: ../widgets/roller.md:11
msgid ""
"The Roller's main part is called LV_ROLLER_PART_BG. It's a rectangle and "
"uses all the typical background properties. The style of the Roller's "
"label is inherited from the text style properties of the background. To "
"adjust the space between the options use the text_line_space style "
"property. The padding style properties set the space on the sides."
msgstr ""

#: ../widgets/roller.md:16
msgid ""
"The selected option in the middle can be referenced with "
"LV_ROLLER_PART_SELECTED virtual part. It also uses all the typical "
"background properties and text_color property to change the color of the "
"options in the selected area."
msgstr ""

#: ../widgets/roller.md:21
msgid ""
"The options are passed to the Roller as a string with "
"lv_roller_set_options(roller, options, LV_ROLLER_MODE_NORMAL/INFINITE). "
"The options should be separated by \\n. For example: "
"\"First\\nSecond\\nThird\"."
msgstr ""

#: ../widgets/roller.md:23
msgid "LV_ROLLER_MODE_INIFINITE make the roller circular."
msgstr ""

#: ../widgets/roller.md:25
msgid ""
"You can select an option manually with lv_roller_set_selected(roller, id,"
" LV_ANIM_ON/OFF), where id is the index of an option."
msgstr ""

#: ../widgets/roller.md:28
msgid ""
"The get the currently selected option use lv_roller_get_selected(roller) "
"it will return the index of the selected option."
msgstr ""

#: ../widgets/roller.md:30
msgid ""
"lv_roller_get_selected_str(roller, buf, buf_size) copy the name of the "
"selected option to buf."
msgstr ""

#: ../widgets/roller.md:32
msgid "Align the options"
msgstr ""

#: ../widgets/roller.md:33
msgid ""
"To align the label horizontally use lv_roller_set_align(roller, "
"LV_LABEL_ALIGN_LEFT/CENTER/RIGHT)."
msgstr ""

#: ../widgets/roller.md:35
msgid "Visible rows"
msgstr ""

#: ../widgets/roller.md:36
msgid ""
"The number of visible rows can be adjusted with "
"lv_roller_set_visible_row_count(roller, num)"
msgstr ""

#: ../widgets/roller.md:39
msgid ""
"When the Roller is scrolled and doesn't stop exactly on an option it will"
" scroll to the nearest valid option automatically. The time of this "
"scroll animation can be changed by lv_roller_set_anim_time(roller, "
"anim_time). Zero animation time means no animation."
msgstr ""

#: ../widgets/roller.md:43
msgid ""
"Besides, the Generic events the following Special events are sent by the "
"Drop down lists:"
msgstr ""

#: ../widgets/roller.md:44
msgid "LV_EVENT_VALUE_CHANGED sent when a new option is selected"
msgstr ""

#: ../widgets/roller.md:50
msgid "LV_KEY_RIGHT/DOWN Select the next option"
msgstr ""

#: ../widgets/roller.md:51
msgid "LV_KEY_LEFT/UP Select the previous option"
msgstr ""

#: ../widgets/roller.md:52
msgid "LY_KEY_ENTER Apply the selected option (Send LV_EVENT_VALUE_CHANGED event)"
msgstr ""

#: ../widgets/slider.md:4
msgid "Slider (lv_slider)"
msgstr ""

#: ../widgets/slider.md:8
msgid ""
"The Slider object looks like a Bar supplemented with a knob. The knob can"
" be dragged to set a value. The Slider also can be vertical or "
"horizontal."
msgstr ""

#: ../widgets/slider.md:11
msgid ""
"The Slider's main part is called LV_SLIDER_PART_BG and it uses the "
"typical background style properties."
msgstr ""

#: ../widgets/slider.md:13
msgid ""
"LV_SLIDER_PART_INDIC is a virtual part which also uses all the typical "
"background properties. By default, the indicator maximal size is the same"
" as the background's size but setting positive padding values in "
"LV_SLIDER_PART_BG will make the indicator smaller. (negative values will "
"make it larger) If the value style property is used on the indicator the "
"alignment will be calculated based on the current size of the indicator. "
"For example a center aligned value is always shown in the middle of the "
"indicator regardless it's current size."
msgstr ""

#: ../widgets/slider.md:18
msgid ""
"LV_SLIDER_PART_KNOB is a virtual part using all the typical background "
"properties to describe the knob(s). Similarly to the indicator the value "
"text is also aligned to the current position and size of the knob. By "
"default the knob is square (with a radius) with side length equal to the "
"smaller side of the slider. The knob can be made larger with the padding "
"values. Padding values can be asymmetric too."
msgstr ""

#: ../widgets/slider.md:24
msgid ""
"To set an initial value use lv_slider_set_value(slider, new_value, "
"LV_ANIM_ON/OFF). lv_slider_set_anim_time(slider, anim_time) sets the "
"animation time in milliseconds."
msgstr ""

#: ../widgets/slider.md:27
msgid ""
"To specify the range (min, max values) the lv_slider_set_range(slider, "
"min , max) can be used."
msgstr ""

#: ../widgets/slider.md:29
msgid "Symmetrical and Range"
msgstr ""

#: ../widgets/slider.md:30
msgid ""
"Besides the normal type the Slider can be configured in two additional "
"types:"
msgstr ""

#: ../widgets/slider.md:31
msgid "LV_SLIDER_TYPE_NORMAL normal type"
msgstr ""

#: ../widgets/slider.md:32
msgid ""
"LV_SLIDER_TYPE_SYMMETRICAL draw the indicator symmetrical to zero (drawn "
"from zero, left to right)"
msgstr ""

#: ../widgets/slider.md:33
msgid ""
"LV_SLIDER_TYPE_RANGE allow the use of an additional knob for the left "
"(start) value. (Can be used with lv_slider_set/get_left_value())"
msgstr ""

#: ../widgets/slider.md:35
msgid ""
"The type can be changed with lv_slider_set_type(slider, "
"LV_SLIDER_TYPE_...)"
msgstr ""

#: ../widgets/slider.md:38 ../widgets/tabview.md:62 ../widgets/textarea.md:117
#: ../widgets/tileview.md:70
msgid ""
"Besides the Generic events the following Special events are sent by the "
"Slider:"
msgstr ""

#: ../widgets/slider.md:39
msgid ""
"LV_EVENT_VALUE_CHANGED Sent while the slider is being dragged or changed "
"with keys. The event is sent continuously while the slider is dragged and"
" only when it is released. Use lv_slider_is_dragged to decide whether is "
"slider is being dragged or just released."
msgstr ""

#: ../widgets/slider.md:42 ../widgets/tileview.md:74
msgid "LV_KEY_UP, LV_KEY_RIGHT Increment the slider's value by 1"
msgstr ""

#: ../widgets/slider.md:43 ../widgets/tileview.md:75
msgid "LV_KEY_DOWN, LV_KEY_LEFT Decrement the slider's value by 1"
msgstr ""

#: ../widgets/spinbox.md:4
msgid "Spinbox (lv_spinbox)"
msgstr ""

#: ../widgets/spinbox.md:7
msgid ""
"The Spinbox contains a number as text which can be increased or decreased"
" by Keys or API functions. Under the hood the Spinbox is a modified Text "
"area."
msgstr ""

#: ../widgets/spinbox.md:11
msgid ""
"The Spinbox's main part is called LV_SPINBOX_PART_BG which is a "
"rectangle-like background using all the typical background style "
"properties. It also describes the style of the label with its text style "
"properties."
msgstr ""

#: ../widgets/spinbox.md:13
msgid ""
"LV_SPINBOX_PART_CURSOR is a virtual part describing the cursor. Read the "
"Text area documentation for a detailed description."
msgstr ""

#: ../widgets/spinbox.md:15
msgid "Set format"
msgstr ""

#: ../widgets/spinbox.md:16
msgid ""
"lv_spinbox_set_digit_format(spinbox, digit_count, separator_position) set"
" the format of the number. digit_count sets the number of digits. Leading"
" zeros are added to fill the space on the left. separator_position sets "
"the number of digit before the decimal point. 0 means no decimal point."
msgstr ""

#: ../widgets/spinbox.md:20
msgid ""
"lv_spinbox_set_padding_left(spinbox, cnt) add cnt \"space\" characters "
"between the sign an the most left digit."
msgstr ""

#: ../widgets/spinbox.md:22
msgid "Value and ranges"
msgstr ""

#: ../widgets/spinbox.md:23
msgid "lv_spinbox_set_range(spinbox, min, max) sets the range of the Spinbox."
msgstr ""

#: ../widgets/spinbox.md:25
msgid "lv_spinbox_set_value(spinbox, num) sets the Spinbox's value manually."
msgstr ""

#: ../widgets/spinbox.md:27
msgid ""
"lv_spinbox_increment(spinbox) and lv_spinbox_decrement(spinbox) "
"increments/decrements the value of the Spinbox."
msgstr ""

#: ../widgets/spinbox.md:29
msgid "lv_spinbox_set_step(spinbox, step) sets the amount to increment decrement."
msgstr ""

#: ../widgets/spinbox.md:32
msgid ""
"Besides the Generic events the following Special events are sent by the "
"Drop down lists:"
msgstr ""

#: ../widgets/spinbox.md:33
msgid ""
"LV_EVENT_VALUE_CHANGED sent when the value has changed. (the value is set"
" as event data as int32_t)"
msgstr ""

#: ../widgets/spinbox.md:34
msgid "LV_EVENT_INSERT sent by the ancestor Text area but shouldn't be used."
msgstr ""

#: ../widgets/spinbox.md:40
msgid ""
"LV_KEY_LEFT/RIGHT With Keypad move the cursor left/right. With Encoder "
"decrement/increment the selected digit."
msgstr ""

#: ../widgets/spinbox.md:41
msgid ""
"LY_KEY_ENTER Apply the selected option (Send LV_EVENT_VALUE_CHANGED event"
" and close the Drop down list)"
msgstr ""

#: ../widgets/spinbox.md:42
msgid ""
"LV_KEY_ENTER With Encoder got the net digit. Jump to the first after the "
"last."
msgstr ""

#: ../widgets/spinner.md:4
msgid "Spinner (lv_spinner)"
msgstr ""

#: ../widgets/spinner.md:7
msgid "The Spinner object is a spinning arc over a border."
msgstr ""

#: ../widgets/spinner.md:11
msgid "The Spinner uses the the following parts:"
msgstr ""

#: ../widgets/spinner.md:12
msgid "LV_SPINNER_PART_BG: main part"
msgstr ""

#: ../widgets/spinner.md:13
msgid "LV_SPINNER_PART_INDIC: the spinning arc (virtual part)"
msgstr ""

#: ../widgets/spinner.md:15
msgid ""
"The parts and style works the same as in case of Arc. Read its "
"documentation for a details description."
msgstr ""

#: ../widgets/spinner.md:19
msgid "Arc length"
msgstr ""

#: ../widgets/spinner.md:20
msgid ""
"The length of the arc can be adjusted by "
"lv_spinner_set_arc_length(spinner, deg)."
msgstr ""

#: ../widgets/spinner.md:22
msgid "Spinning speed"
msgstr ""

#: ../widgets/spinner.md:23
msgid ""
"The speed of the spinning can be adjusted by "
"lv_spinner_set_spin_time(preload, time_ms)."
msgstr ""

#: ../widgets/spinner.md:25
msgid "Spin types"
msgstr ""

#: ../widgets/spinner.md:26
msgid "You can choose from more spin types:"
msgstr ""

#: ../widgets/spinner.md:27
msgid "LV_SPINNER_TYPE_SPINNING_ARC spin the arc, slow down on the top"
msgstr ""

#: ../widgets/spinner.md:28
msgid ""
"LV_SPINNER_TYPE_FILLSPIN_ARC spin the arc, slow down on the top but also "
"stretch the arc"
msgstr ""

#: ../widgets/spinner.md:29
msgid "LV_SPINNER_TYPE_CONSTANT_ARC spin the arc at a constant speed"
msgstr ""

#: ../widgets/spinner.md:31
msgid "To apply one if them use lv_spinner_set_type(preload, LV_SPINNER_TYPE_...)"
msgstr ""

#: ../widgets/spinner.md:33
msgid "Spin direction"
msgstr ""

#: ../widgets/spinner.md:34
msgid ""
"The direction of spinning can be changed with lv_spinner_set_dir(preload,"
" LV_SPINNER_DIR_FORWARD/BACKWARD)."
msgstr ""

#: ../widgets/spinner.md:52 ../widgets/table.md:91
msgid "MicroPython"
msgstr ""

#: ../widgets/switch.md:5
msgid "Switch (lv_switch)"
msgstr ""

#: ../widgets/switch.md:9
msgid ""
"The Switch can be used to turn on/off something. It looks like a little "
"slider."
msgstr ""

#: ../widgets/switch.md:13
msgid "The Switch uses the the following parts:"
msgstr ""

#: ../widgets/switch.md:14
msgid "LV_SWITCH_PART_BG: main part"
msgstr ""

#: ../widgets/switch.md:15
msgid "LV_SWITCH_PART_INDIC: the indicator (virtual part)"
msgstr ""

#: ../widgets/switch.md:16
msgid "LV_SWITCH_PART_KNOB: the knob (virtual part)"
msgstr ""

#: ../widgets/switch.md:18
msgid ""
"The parts and style works the same as in case of Slider. Read its "
"documentation for a details description."
msgstr ""

#: ../widgets/switch.md:20
msgid "##Usage"
msgstr ""

#: ../widgets/switch.md:22
msgid "Change state"
msgstr ""

#: ../widgets/switch.md:23
msgid ""
"The state of the Switch can be changed by clicking on it or by "
"lv_switch_on(switch, LV_ANIM_ON/OFF), lv_switch_off(switch, "
"LV_ANIM_ON/OFF) or lv_switch_toggle(switch, LV_ANOM_ON/OFF) functions"
msgstr ""

#: ../widgets/switch.md:27
msgid ""
"The time of animations, when the switch changes state, can be adjusted "
"with lv_switch_set_anim_time(switch, anim_time)."
msgstr ""

#: ../widgets/switch.md:30
msgid ""
"Besides the Generic events the following Special events are sent by the "
"Switch:"
msgstr ""

#: ../widgets/switch.md:31
msgid "LV_EVENT_VALUE_CHANGED Sent when the switch changes state."
msgstr ""

#: ../widgets/switch.md:34
msgid "LV_KEY_UP, LV_KEY_RIGHT Turn on the slider"
msgstr ""

#: ../widgets/switch.md:35
msgid "LV_KEY_DOWN, LV_KEY_LEFT Turn off the slider"
msgstr ""

#: ../widgets/table.md:4
msgid "Table (lv_table)"
msgstr ""

#: ../widgets/table.md:8
msgid ""
"Tables, as usual, are built from rows, columns, and cells containing "
"texts."
msgstr ""

#: ../widgets/table.md:10
msgid ""
"The Table object is very light weighted because only the texts are "
"stored. No real objects are created for cells but they are just drawn on "
"the fly."
msgstr ""

#: ../widgets/table.md:13
msgid ""
"The main part of the Table is called LV_TABLE_PART_BG. It's a rectangle "
"like background and uses all the typical background style properties."
msgstr ""

#: ../widgets/table.md:15
msgid ""
"For the cells there are 4 virtual parts. Every cell has type (1, 2, 3 or "
"4) which tells which part's styles to apply on them. The cell parts are:"
msgstr ""

#: ../widgets/table.md:16
msgid "LV_TABLE_PART_CELL1"
msgstr ""

#: ../widgets/table.md:17
msgid "LV_TABLE_PART_CELL2"
msgstr ""

#: ../widgets/table.md:18
msgid "LV_TABLE_PART_CELL3"
msgstr ""

#: ../widgets/table.md:19
msgid "LV_TABLE_PART_CELL4"
msgstr ""

#: ../widgets/table.md:21
msgid ""
"The cells also use all the typical background style properties. If there "
"is a line break (\\n) in a cell's content then a horizontal division line"
" will drawn after the line break using the line style properties."
msgstr ""

#: ../widgets/table.md:23
msgid ""
"The style of texts in the cells are inherited from the cell parts or the "
"background part."
msgstr ""

#: ../widgets/table.md:27
msgid "Rows and Columns"
msgstr ""

#: ../widgets/table.md:29
msgid ""
"To set number of rows and columns use lv_table_set_row_cnt(table, "
"row_cnt) and lv_table_set_col_cnt(table, col_cnt)"
msgstr ""

#: ../widgets/table.md:31
msgid "Width and Height"
msgstr ""

#: ../widgets/table.md:33
msgid ""
"The width of the columns can be set with lv_table_set_col_width(table, "
"col_id, width). The overall width of the Table object will be set to the "
"sum of columns widths."
msgstr ""

#: ../widgets/table.md:35
msgid ""
"The height is calculated automatically from the cell styles (font, "
"padding etc) and the number of rows."
msgstr ""

#: ../widgets/table.md:37
msgid "Set cell value"
msgstr ""

#: ../widgets/table.md:39
msgid ""
"The cells can store only texts so numbers needs to be converted to text "
"before displaying them in a table."
msgstr ""

#: ../widgets/table.md:41
msgid ""
"lv_table_set_cell_value(table, row, col, \"Content\"). The text is saved "
"by the table so it can be even a local variable."
msgstr ""

#: ../widgets/table.md:43
msgid "Line break can be used in the text like \"Value\\n60.3\"."
msgstr ""

#: ../widgets/table.md:45
msgid "Align"
msgstr ""

#: ../widgets/table.md:47
msgid ""
"The text alignment in cells can be adjusted individually with "
"lv_table_set_cell_align(table, row, col, "
"LV_LABEL_ALIGN_LEFT/CENTER/RIGHT)."
msgstr ""

#: ../widgets/table.md:49
msgid "Cell type"
msgstr ""

#: ../widgets/table.md:51
msgid "You can use 4 different cell types. Each has its own style."
msgstr ""

#: ../widgets/table.md:53
msgid "Cell types can be used to add different style for example to:"
msgstr ""

#: ../widgets/table.md:54
msgid "table header"
msgstr ""

#: ../widgets/table.md:55
msgid "first column"
msgstr ""

#: ../widgets/table.md:56
msgid "highlight a cell"
msgstr ""

#: ../widgets/table.md:57
msgid "etc"
msgstr ""

#: ../widgets/table.md:59
msgid ""
"The type can be selected with lv_table_set_cell_type(table, row, col, "
"type) type can be 1, 2, 3 or 4."
msgstr ""

#: ../widgets/table.md:61
msgid "Merge cells"
msgstr ""

#: ../widgets/table.md:63
msgid ""
"Cells can be merged horizontally with "
"lv_table_set_cell_merge_right(table, col, row, true). To merge more "
"adjacent cells apply this function for each cell."
msgstr ""

#: ../widgets/table.md:65
msgid "Crop text"
msgstr ""

#: ../widgets/table.md:66
msgid ""
"By default, the texts are word-wrapped to fit into the width of the cell "
"and the height of the cell is set automatically. To disable this and keep"
" the text as it is enable lv_table_set_cell_crop(table, row, col, true)."
msgstr ""

#: ../widgets/table.md:69
msgid "Scroll"
msgstr ""

#: ../widgets/table.md:70
msgid "The make the Table scrollable place it on a Page"
msgstr ""

#: ../widgets/tabview.md:4
msgid "Tabview (lv_tabview)"
msgstr ""

#: ../widgets/tabview.md:8
msgid "The Tab view object can be used to organize content in tabs."
msgstr ""

#: ../widgets/tabview.md:12
msgid ""
"The Tab view object has several parts. The main is LV_TABVIEW_PART_BG. It"
" a rectangle-like container which holds the other parts of the Tab view."
msgstr ""

#: ../widgets/tabview.md:14
msgid "On the background 2 important real parts are created:"
msgstr ""

#: ../widgets/tabview.md:15
msgid ""
"LV_TABVIEW_PART_BG_SCRL: it's the scrollable part of Page. It holds the "
"content of the tabs next to each other. The background of the Page is "
"always transparent and can't be accessed externally."
msgstr ""

#: ../widgets/tabview.md:16
msgid ""
"LV_TABVIEW_PART_TAB_BG: The tab buttons which is a Button matrix. "
"Clicking on a button will scroll LV_TABVIEW_PART_BG_SCRL to the related "
"tab's content. The tab buttons can be accessed via "
"LV_TABVIEW_PART_TAB_BTN. The height of the tab's button matrix is "
"calculated from the font height plus padding of the background's and the "
"button's style."
msgstr ""

#: ../widgets/tabview.md:20
msgid ""
"All the listed parts supports the typical background style properties and"
" padding."
msgstr ""

#: ../widgets/tabview.md:22
msgid ""
"LV_TABVIEW_PART_TAB_BG has an additional real part, an indicator, called "
"LV_TABVIEW_PART_INDIC. It's a thin rectangle-like object under the "
"currently selected tab. When the tab view is animated to an other tab the"
" indicator will be animated too. It can be styles using the typical "
"background style properties. The size style property will set the its "
"thickness."
msgstr ""

#: ../widgets/tabview.md:26
msgid ""
"When a new tab is added a Page is create for them on "
"LV_TABVIEW_PART_BG_SCRL and a new button is added to "
"LV_TABVIEW_PART_TAB_BG Button matrix. The created Pages can be used as "
"normal Pages and they have the usual Page parts."
msgstr ""

#: ../widgets/tabview.md:31
msgid "Adding tab"
msgstr ""

#: ../widgets/tabview.md:32
msgid ""
"New tabs can be added with lv_tabview_add_tab(tabview, \"Tab name\"). It "
"will return with a pointer to a Page object where the tab's content can "
"be created."
msgstr ""

#: ../widgets/tabview.md:34
msgid "Change tab"
msgstr ""

#: ../widgets/tabview.md:35
msgid "To select a new tab you can:"
msgstr ""

#: ../widgets/tabview.md:36
msgid "Click on it on the Button matrix part"
msgstr ""

#: ../widgets/tabview.md:37
msgid "Slide"
msgstr ""

#: ../widgets/tabview.md:38
msgid "Use lv_tabview_set_tab_act(tabview, id, LV_ANIM_ON/OFF) function"
msgstr ""

#: ../widgets/tabview.md:40
msgid "Tab button's position"
msgstr ""

#: ../widgets/tabview.md:42
msgid ""
"By default, the tab selector buttons are placed on the top of the Tab "
"view. It can be changed with lv_tabview_set_btns_pos(tabview, "
"LV_TABVIEW_TAB_POS_TOP/BOTTOM/LEFT/RIGHT/NONE)"
msgstr ""

#: ../widgets/tabview.md:44
msgid "LV_TABVIEW_TAB_POS_NONE will hide the tabs."
msgstr ""

#: ../widgets/tabview.md:46
msgid ""
"Note that, you can't change the tab position from top or bottom to left "
"or right when tabs are already added."
msgstr ""

#: ../widgets/tabview.md:50
msgid ""
"The animation time is adjusted by lv_tabview_set_anim_time(tabview, "
"anim_time_ms). It is used when the new tab is loaded."
msgstr ""

#: ../widgets/tabview.md:53
msgid ""
"As the tabs' content object is a Page it can receive scroll propagation "
"from an other Page-like object. For example, if a text area is created on"
" the tab's content and that Text area is scrolled but it reached the end "
"the scroll can be propagated to the content Page. It can be enabled with "
"lv_page/textarea_set_scroll_propagation(obj, true)."
msgstr ""

#: ../widgets/tabview.md:57
msgid ""
"By default the tab's content Pages have enabled scroll propagation, "
"therefore when they are scrolled horizontally the scroll is propagated to"
" LV_TABVIEW_PART_BG_SCRL and this way the Pages will be scrolled."
msgstr ""

#: ../widgets/tabview.md:59
msgid ""
"The manual sliding can be disabled with "
"lv_page_set_scroll_propagation(tab_page, false)."
msgstr ""

#: ../widgets/tabview.md:63
msgid ""
"LV_EVENT_VALUE_CHANGED Sent when a new tab is selected by sliding or "
"clicking the tab button"
msgstr ""

#: ../widgets/tabview.md:69
msgid "The following Keys are processed by the Tabview:"
msgstr ""

#: ../widgets/tabview.md:70
msgid "LV_KEY_RIGHT/LEFT Select a tab"
msgstr ""

#: ../widgets/tabview.md:71
msgid "LV_KEY_ENTER Change to the selected tab"
msgstr ""

#: ../widgets/textarea.md:4
msgid "Text area (lv_textarea)"
msgstr ""

#: ../widgets/textarea.md:8
msgid ""
"The Text Area is a Page with a Label and a cursor on it. Texts or "
"characters can be added to it. Long lines are wrapped and when the text "
"becomes long enough the Text area can be scrolled."
msgstr ""

#: ../widgets/textarea.md:14
msgid ""
"The Text area has the same parts as Page. Expect LV_PAGE_PART_SCRL "
"because it can't be referenced and it's always transparent. Refer the "
"Page's documentation of details."
msgstr ""

#: ../widgets/textarea.md:18
msgid ""
"Besides the Page parts the virtual LV_TEXTAREA_PART_CURSOR part exists to"
" draw the cursor. The cursor's area is always the bounding box of the "
"current character. A block cursor can be created by adding a background "
"color and background opa to LV_TEXTAREA_PART_CURSOR's style. The create "
"line cursor let the cursor transparent and set the border_side property."
msgstr ""

#: ../widgets/textarea.md:25
msgid "Add text"
msgstr ""

#: ../widgets/textarea.md:27
msgid "You can insert text or characters  to the current cursor's position with:"
msgstr ""

#: ../widgets/textarea.md:29
msgid "lv_textarea_add_char(textarea, 'c')"
msgstr ""

#: ../widgets/textarea.md:30
msgid "lv_textarea_add_text(textarea, \"insert this text\")"
msgstr ""

#: ../widgets/textarea.md:32
msgid ""
"To add wide characters like 'á', 'ß' or CJK characters use "
"lv_textarea_add_text(ta, \"á\")."
msgstr ""

#: ../widgets/textarea.md:34
msgid "lv_textarea_set_text(ta, \"New text\") changes the whole text."
msgstr ""

#: ../widgets/textarea.md:36
msgid "Placeholder"
msgstr ""

#: ../widgets/textarea.md:38
msgid ""
"A placeholder text can be specified - which is displayed when the Text "
"area is empty - with lv_textarea_set_placeholder_text(ta, \"Placeholder "
"text\")"
msgstr ""

#: ../widgets/textarea.md:40
msgid "Delete character"
msgstr ""

#: ../widgets/textarea.md:42
msgid ""
"To delete a character from the left of the current cursor position use "
"lv_textarea_del_char(textarea). To delete from the right use "
"lv_textarea_del_char_forward(textarea)"
msgstr ""

#: ../widgets/textarea.md:45
msgid "Move the cursor"
msgstr ""

#: ../widgets/textarea.md:47
msgid ""
"The cursor position can be modified directly with "
"lv_textarea_set_cursor_pos(textarea, 10). The 0 position means \"before "
"the first characters\", LV_TA_CURSOR_LAST means \"after the last "
"character\""
msgstr ""

#: ../widgets/textarea.md:51
msgid "You can step the cursor with"
msgstr ""

#: ../widgets/textarea.md:52
msgid "lv_textarea_cursor_right(textarea)"
msgstr ""

#: ../widgets/textarea.md:53
msgid "lv_textarea_cursor_left(textarea)"
msgstr ""

#: ../widgets/textarea.md:54
msgid "lv_textarea_cursor_up(textarea)"
msgstr ""

#: ../widgets/textarea.md:55
msgid "lv_textarea_cursor_down(textarea)"
msgstr ""

#: ../widgets/textarea.md:57
msgid ""
"If lv_textarea_set_cursor_click_pos(textarea, true) is called the cursor "
"will jump to the position where the Text area was clicked."
msgstr ""

#: ../widgets/textarea.md:59
msgid "Hide the cursor"
msgstr ""

#: ../widgets/textarea.md:60
msgid ""
"The cursor can be hidden with lv_textarea_set_cursor_hidden(textarea, "
"true)."
msgstr ""

#: ../widgets/textarea.md:62
msgid "Cursor blink time"
msgstr ""

#: ../widgets/textarea.md:63
msgid ""
"The blink time of the cursor can be adjusted with "
"lv_textarea_set_cursor_blink_time(textarea, time_ms)."
msgstr ""

#: ../widgets/textarea.md:65
msgid "One line mode"
msgstr ""

#: ../widgets/textarea.md:66
msgid ""
"The Text area can be configures to be one lined with "
"lv_ta_set_one_line(ta, true). In this mode the height is set "
"automatically to show only one line, line break character are ignored, "
"and word wrap is disabled."
msgstr ""

#: ../widgets/textarea.md:69
msgid "Password mode"
msgstr ""

#: ../widgets/textarea.md:70
msgid ""
"The text area supports password mode which can be enabled with "
"lv_textarea_set_pwd_mode(textarea, true)."
msgstr ""

#: ../widgets/textarea.md:72
msgid ""
"If the • (Bullet, U+2022) character exists in the font, the entered "
"characters are converted to it after some time or when a new character is"
" entered. If • not exists, * will be used."
msgstr ""

#: ../widgets/textarea.md:75
msgid ""
"In password mode lv_textarea_get_text(textarea) gives the real text, not "
"the bullet characters."
msgstr ""

#: ../widgets/textarea.md:77
msgid ""
"The visibility time can be adjusted with "
"lv_textarea_set_pwd_show_time(textarea, time_ms)."
msgstr ""

#: ../widgets/textarea.md:80
msgid ""
"The text can be aligned to the left, center or right with "
"lv_textarea_set_text_align(textarea, LV_LABEL_ALIGN_LET/CENTER/RIGHT)."
msgstr ""

#: ../widgets/textarea.md:82
msgid ""
"In one line mode, the text can be scrolled horizontally only if the text "
"is left aligned."
msgstr ""

#: ../widgets/textarea.md:84
msgid "Accepted characters"
msgstr ""

#: ../widgets/textarea.md:85
msgid ""
"You can set a list of accepted characters with "
"lv_textarae_set_accepted_chars(ta, \"0123456789.+-\"). Other characters "
"will be ignored."
msgstr ""

#: ../widgets/textarea.md:88
msgid "Max text length"
msgstr ""

#: ../widgets/textarea.md:89
msgid ""
"The maximum number of characters can be limited with "
"lv_textarea_set_max_length(textarea, max_char_num)"
msgstr ""

#: ../widgets/textarea.md:92
msgid ""
"If there is a  very long text in the Text area  (e. g. > 20k characters) "
"its scrolling and drawing might be slow. However, by enabling "
"LV_LABEL_LONG_TXT_HINT   1 in lv_conf.h it can be hugely improved. It "
"will save some info about the label to speed up its drawing. Using "
"LV_LABEL_LONG_TXT_HINT the scrolling and drawing will as fast as with "
"\"normal\" short texts."
msgstr ""

#: ../widgets/textarea.md:97
msgid "Select text"
msgstr ""

#: ../widgets/textarea.md:98
msgid ""
"A part of text can be selected if enabled with "
"lv_textarea_set_text_sel(textarea, true). It works like when you select a"
" text on your PC with your mouse."
msgstr ""

#: ../widgets/textarea.md:102
msgid ""
"The scrollbars can shown according to different policies set by "
"lv_textarea_set_sb_mode(textarea, LV_SCRLBAR_MODE_...). Learn more at the"
" Page object."
msgstr ""

#: ../widgets/textarea.md:106
msgid ""
"When the Text area is scrolled on an other scrollable object (like a "
"Page) and the scrolling has reached the edge of the Text area, the "
"scrolling can be propagated to the parent. In other words, when the Text "
"area can be scrolled further, the parent will be scrolled instead."
msgstr ""

#: ../widgets/textarea.md:109
msgid "It can be enabled with lv_ta_set_scroll_propagation(ta, true)."
msgstr ""

#: ../widgets/textarea.md:111
msgid "Learn more at the Page object."
msgstr ""

#: ../widgets/textarea.md:114
msgid ""
"When the Text area is scrolled to edge a circle like flash animation can "
"be shown if it is enabled with lv_ta_set_edge_flash(ta, true)"
msgstr ""

#: ../widgets/textarea.md:118
msgid ""
"LV_EVENT_INSERT Sent when a character before a character is inserted. The"
" evnet data is the text planned to insert. lv_ta_set_insert_replace(ta, "
"\"New text\") replaces the text to insert. The new text can't be in a "
"local variable which is destroyed when the event callback exists. \"\" "
"means do not insert anything."
msgstr ""

#: ../widgets/textarea.md:121
msgid "LV_EVENT_VALUE_CHANGED When the content of the text area has been changed."
msgstr ""

#: ../widgets/textarea.md:124
msgid "LV_KEY_UP/DOWN/LEFT/RIGHT Move the cursor"
msgstr ""

#: ../widgets/textarea.md:125
msgid "Any character Add the character to the current cursor position"
msgstr ""

#: ../widgets/tileview.md:4
msgid "Tile view (lv_tileview)"
msgstr ""

#: ../widgets/tileview.md:8
msgid ""
"The Tileview is a container object where its elements (called tiles) can "
"be arranged in a grid form. By swiping the user can navigate between the "
"tiles."
msgstr ""

#: ../widgets/tileview.md:11
msgid ""
"If the Tileview is screen sized it gives a user interface you might have "
"seen on the smartwatches."
msgstr ""

#: ../widgets/tileview.md:15
msgid ""
"The Tileview has the same parts as Page. Expect LV_PAGE_PART_SCRL because"
" it can't be referenced and it's always transparent. Refer the Page's "
"documentation of details."
msgstr ""

#: ../widgets/tileview.md:21
msgid "Valid positions"
msgstr ""

#: ../widgets/tileview.md:23
msgid ""
"The tiles don't have to form a full grid where every element exists. "
"There can be holes in the grid but it has to be continuous, i.e. there "
"can't be an empty rows or columns."
msgstr ""

#: ../widgets/tileview.md:26
msgid ""
"With lv_tileview_set_valid_positions(tileview, valid_pos_array, "
"array_len) the valid positions can be set. Scrolling will be possible "
"only to this positions. The 0,0 index means the top left tile. E.g. "
"lv_point_t valid_pos_array[] = {{0,0}, {0,1}, {1,1}, {{LV_COORD_MIN, "
"LV_COORD_MIN}} gives a Tile view with \"L\" shape. It indicates that "
"there is no tile in {1,1} therefore the user can't scroll there."
msgstr ""

#: ../widgets/tileview.md:32
msgid ""
"In other words, the valid_pos_array tells where the tiles are. It can be "
"changed on the fly to disable some positions on specific tiles. For "
"example, there can be a 2x2 grid where all tiles are added but the first "
"row (y = 0) as a  \"main row\" and the second row (y = 1) contains "
"options for the tile above it. Let's say horizontal scrolling is possible"
" only in the main row and not possible between the options in the second "
"row. In this case the valid_pos_array needs to changed when a new main "
"tile is selected:"
msgstr ""

#: ../widgets/tileview.md:36
msgid ""
"for the first main tile: {0,0}, {0,1}, {1,0} to disable the {1,1} option "
"tile"
msgstr ""

#: ../widgets/tileview.md:37
msgid ""
"for the second main tile {0,0}, {1,0}, {1,1} to disable the {0,1} option "
"tile"
msgstr ""

#: ../widgets/tileview.md:39
msgid "Set tile"
msgstr ""

#: ../widgets/tileview.md:41
msgid ""
"To set the currently visible tile use lv_tileview_set_tile_act(tileview, "
"x_id, y_id, LV_ANIM_ON/OFF)."
msgstr ""

#: ../widgets/tileview.md:43
msgid "Add element"
msgstr ""

#: ../widgets/tileview.md:45
msgid ""
"To add elements just create an object on the Tileview and position it "
"manually to the desired position."
msgstr ""

#: ../widgets/tileview.md:47
msgid ""
"lv_tileview_add_element(tielview, element) should be used to make "
"possible to scroll (drag) the Tileview by one its element. For example, "
"if there is a button on a tile, the button needs to be explicitly added "
"to the Tileview to enable the user to scroll the Tileview with the button"
" too."
msgstr ""

#: ../widgets/tileview.md:51
msgid ""
"The scroll propagation feature of page-like objects (like List) can be "
"used very well here. For example, there can be a full-sized List and when"
" it reaches the top or bottom most position the user will scroll the tile"
" view instead."
msgstr ""

#: ../widgets/tileview.md:56
msgid ""
"The animation time of the Tileview can be adjusted with "
"lv_tileview_set_anim_time(tileview, anim_time)."
msgstr ""

#: ../widgets/tileview.md:58
msgid "Animations are applied when"
msgstr ""

#: ../widgets/tileview.md:59
msgid "a new tile is selected with lv_tileview_set_tile_act"
msgstr ""

#: ../widgets/tileview.md:60
msgid ""
"the current tile is scrolled a little and then released (revert the "
"original title)"
msgstr ""

#: ../widgets/tileview.md:61
msgid ""
"the current tile is scrolled more than half size and then released (move "
"to the next tile)"
msgstr ""

#: ../widgets/tileview.md:65
msgid ""
"An \"edge flash\" effect can be added when the tile view reached hits an "
"invalid position or the end of tile view when scrolled."
msgstr ""

#: ../widgets/tileview.md:67
msgid "Use lv_tileview_set_edge_flash(tileview, true) to enable this feature."
msgstr ""

#: ../widgets/tileview.md:71
msgid ""
"LV_EVENT_VALUE_CHANGED Sent when a new tile loaded either with scrolling "
"or lv_tileview_set_act. The event data is set ti the index of the new "
"tile in valid_pos_array (It's type is uint32_t *)"
msgstr ""

#: ../widgets/win.md:4
msgid "Window (lv_win)"
msgstr ""

#: ../widgets/win.md:8
msgid ""
"The Window is container-like objects built from a header with title and "
"button and a content area."
msgstr ""

#: ../widgets/win.md:12
msgid "The main part is LV_WIN_PART_BG which holds the two other real parts:"
msgstr ""

#: ../widgets/win.md:13
msgid ""
"LV_WIN_PART_HEADER: a header Container on the top with a title and "
"control buttons"
msgstr ""

#: ../widgets/win.md:14
msgid ""
"LV_WIN_PART_CONTENT_SCRL the scrollable part of a Page for the content "
"below the header."
msgstr ""

#: ../widgets/win.md:16
msgid ""
"Besides these, LV_WIN_PART_CONTENT_SCRL has a scrollbar part called "
"LV_WIN_PART_CONTENT_SCRL. Read the documentation of Page for more details"
" on the scrollbars."
msgstr ""

#: ../widgets/win.md:19
msgid ""
"All parts supports the typical background properties. The title uses the "
"Text properties of the header part."
msgstr ""

#: ../widgets/win.md:21
msgid ""
"The height of the control buttons is: header height - header padding_top "
"-  header padding_bottom."
msgstr ""

#: ../widgets/win.md:24
msgid "Title"
msgstr ""

#: ../widgets/win.md:25
msgid ""
"On the header, there is a title which can be modified by: "
"lv_win_set_title(win, \"New title\")."
msgstr ""

#: ../widgets/win.md:28
msgid ""
"Control buttons can be added to the right side of the header with: "
"lv_win_add_btn(win, LV_SYMBOL_CLOSE). The second parameter is an Image "
"source so it can be a symbol, a pointer to an lv_img_dsc_t variable or a "
"path to file."
msgstr ""

#: ../widgets/win.md:31
msgid ""
"The width of the buttons can be set with lv_win_set_btn_width(win, w). If"
" w == 0 the buttons will be square-shaped."
msgstr ""

#: ../widgets/win.md:33
msgid ""
"lv_win_close_event_cb can be used as an event callback to close the "
"Window."
msgstr ""

#: ../widgets/win.md:37
msgid ""
"The scrollbar behavior can be set by lv_win_set_scrlbar_mode(win, "
"LV_SCRLBAR_MODE_...). See Page for details."
msgstr ""

#: ../widgets/win.md:40
msgid "Manual scroll and focus"
msgstr ""

#: ../widgets/win.md:41
msgid ""
"To scroll the Window directly you can use lv_win_scroll_hor(win, dist_px)"
" or lv_win_scroll_ver(win, dist_px)."
msgstr ""

#: ../widgets/win.md:43
msgid ""
"To make the Window show an object on it use lv_win_focus(win, child, "
"LV_ANIM_ON/OFF)."
msgstr ""

#: ../widgets/win.md:45
msgid ""
"The time of scroll and focus animations can  be adjusted with "
"lv_win_set_anim_time(win, anim_time_ms)"
msgstr ""

#: ../widgets/win.md:48
msgid ""
"To set a layout for the content use lv_win_set_layout(win, "
"LV_LAYOUT_...). See Container for details."
msgstr ""

