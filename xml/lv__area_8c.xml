<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="lv__area_8c" kind="file" language="C++">
    <compoundname>lv_area.c</compoundname>
    <includes local="yes">../../../lv_conf.h</includes>
    <includes refid="lv__area_8h" local="yes">lv_area.h</includes>
    <includes refid="lv__math_8h" local="yes">lv_math.h</includes>
    <incdepgraph>
      <node id="2542">
        <label>stdbool.h</label>
      </node>
      <node id="2538">
        <label>/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_area.c</label>
        <link refid="lv__area_8c"/>
        <childnode refid="2539" relation="include">
        </childnode>
        <childnode refid="2540" relation="include">
        </childnode>
        <childnode refid="2544" relation="include">
        </childnode>
      </node>
      <node id="2540">
        <label>lv_area.h</label>
        <link refid="lv__area_8h"/>
        <childnode refid="2541" relation="include">
        </childnode>
        <childnode refid="2542" relation="include">
        </childnode>
        <childnode refid="2543" relation="include">
        </childnode>
        <childnode refid="2539" relation="include">
        </childnode>
      </node>
      <node id="2543">
        <label>stdint.h</label>
      </node>
      <node id="2539">
        <label>../../../lv_conf.h</label>
      </node>
      <node id="2541">
        <label>string.h</label>
      </node>
      <node id="2544">
        <label>lv_math.h</label>
        <link refid="lv__math_8h"/>
        <childnode refid="2543" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="lv__area_8c_1a8a6f63df40693641307a31d39f44101d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_area_set</definition>
        <argsstring>(lv_area_t *area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2)</argsstring>
        <name>lv_area_set</name>
        <param>
          <type><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>area_p</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>y2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize an area <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>area_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x1</parametername>
</parameternamelist>
<parameterdescription>
<para>left coordinate of the area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y1</parametername>
</parameternamelist>
<parameterdescription>
<para>top coordinate of the area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x2</parametername>
</parameternamelist>
<parameterdescription>
<para>right coordinate of the area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y2</parametername>
</parameternamelist>
<parameterdescription>
<para>bottom coordinate of the area </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_area.c" line="50" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_area.c" bodystart="50" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8c_1a7cd8866c2312050e4541d5cdd862ed4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_area_set_width</definition>
        <argsstring>(lv_area_t *area_p, lv_coord_t w)</argsstring>
        <name>lv_area_set_width</name>
        <param>
          <type><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>area_p</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the width of an area <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>area_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>the new width of the area (w == 1 makes x1 == x2) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_area.c" line="63" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_area.c" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8c_1a092d265b43760f45dded850e64c175c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_area_set_height</definition>
        <argsstring>(lv_area_t *area_p, lv_coord_t h)</argsstring>
        <name>lv_area_set_height</name>
        <param>
          <type><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>area_p</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the height of an area <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>area_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>the new height of the area (h == 1 makes y1 == y2) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_area.c" line="73" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_area.c" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8c_1aa746f39b483e5368cabd6c56ea9f5736" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_area_set_pos</definition>
        <argsstring>(lv_area_t *area_p, lv_coord_t x, lv_coord_t y)</argsstring>
        <name>lv_area_set_pos</name>
        <param>
          <type><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>area_p</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the position of an area (width and height will be kept) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>area_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the new x coordinate of the area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the new y coordinate of the area </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_area.c" line="84" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_area.c" bodystart="84" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8c_1a71b2b35191f41ba629245399ce5aaf39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t lv_area_get_size</definition>
        <argsstring>(const lv_area_t *area_p)</argsstring>
        <name>lv_area_get_size</name>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>area_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return with area of an area (x * y) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>area_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>size of area </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_area.c" line="99" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_area.c" bodystart="99" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8c_1aebf8be947f901f46693b4c2956a805a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_area_intersect</definition>
        <argsstring>(lv_area_t *res_p, const lv_area_t *a1_p, const lv_area_t *a2_p)</argsstring>
        <name>lv_area_intersect</name>
        <param>
          <type><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>res_p</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>a1_p</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>a2_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the common parts of two areas <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>res_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area, the result will be stored here </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a1_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the first area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a2_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the second area </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false: the two area has NO common parts, res_p is invalid </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_area.c" line="115" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_area.c" bodystart="115" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8c_1a5624f73deeed656fe3d830694f1095df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_area_join</definition>
        <argsstring>(lv_area_t *a_res_p, const lv_area_t *a1_p, const lv_area_t *a2_p)</argsstring>
        <name>lv_area_join</name>
        <param>
          <type><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>a_res_p</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>a1_p</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>a2_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Join two areas into a third which involves the other two <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>res_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area, the result will be stored here </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a1_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the first area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a2_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the second area </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_area.c" line="137" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_area.c" bodystart="137" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8c_1a5d63e038e924a898118c841d61d2a9f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_area_is_point_on</definition>
        <argsstring>(const lv_area_t *a_p, const lv_point_t *p_p)</argsstring>
        <name>lv_area_is_point_on</name>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>a_p</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__point__t" kindref="compound">lv_point_t</ref> *</type>
          <declname>p_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if a point is on an area <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a point </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false:the point is out of the area </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_area.c" line="151" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_area.c" bodystart="151" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8c_1aa2a98c824a46cad50e1b5fa75fbaee10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_area_is_on</definition>
        <argsstring>(const lv_area_t *a1_p, const lv_area_t *a2_p)</argsstring>
        <name>lv_area_is_on</name>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>a1_p</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>a2_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if two area has common parts <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a1_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a2_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an other area </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false: a1_p and a2_p has no common parts </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_area.c" line="168" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_area.c" bodystart="168" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8c_1aca2cfda730417164f24a6120ca80cbc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_area_is_in</definition>
        <argsstring>(const lv_area_t *ain_p, const lv_area_t *aholder_p)</argsstring>
        <name>lv_area_is_in</name>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>ain_p</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>aholder_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if an area is fully on an other <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ain_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area which could be in &apos;aholder_p&apos; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aholder</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area which could involve &apos;ain_p&apos; </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_area.c" line="183" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_area.c" bodystart="183" bodyend="193"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>INCLUDES</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LV_CONF_INCLUDE_SIMPLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;lv_conf.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../../lv_conf.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lv__area_8h" kindref="compound">lv_area.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lv__math_8h" kindref="compound">lv_math.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>DEFINES</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>TYPEDEFS</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/>STATIC<sp/>PROTOTYPES</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/>STATIC<sp/>VARIABLES</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>MACROS</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/><sp/><sp/>GLOBAL<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__area_8c_1a8a6f63df40693641307a31d39f44101d" kindref="member">lv_area_set</ref>(<ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>area_p,<sp/>lv_coord_t<sp/>x1,<sp/>lv_coord_t<sp/>y1,<sp/>lv_coord_t<sp/>x2,<sp/>lv_coord_t<sp/>y2)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>area_p-&gt;<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref><sp/>=<sp/>x1;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>area_p-&gt;<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref><sp/>=<sp/>y1;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>area_p-&gt;<ref refid="structlv__area__t_1aec0405ee6e0fa96f922fee6851240081" kindref="member">x2</ref><sp/>=<sp/>x2;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>area_p-&gt;<ref refid="structlv__area__t_1ac3da01ffe2d07a8e446684160dd1f7fc" kindref="member">y2</ref><sp/>=<sp/>y2;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__area_8c_1a7cd8866c2312050e4541d5cdd862ed4a" kindref="member">lv_area_set_width</ref>(<ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>area_p,<sp/>lv_coord_t<sp/>w)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>area_p-&gt;<ref refid="structlv__area__t_1aec0405ee6e0fa96f922fee6851240081" kindref="member">x2</ref><sp/>=<sp/>area_p-&gt;<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref><sp/>+<sp/>w<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__area_8c_1a092d265b43760f45dded850e64c175c7" kindref="member">lv_area_set_height</ref>(<ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>area_p,<sp/>lv_coord_t<sp/>h)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>area_p-&gt;<ref refid="structlv__area__t_1ac3da01ffe2d07a8e446684160dd1f7fc" kindref="member">y2</ref><sp/>=<sp/>area_p-&gt;<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref><sp/>+<sp/>h<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__area_8c_1aa746f39b483e5368cabd6c56ea9f5736" kindref="member">lv_area_set_pos</ref>(<ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>area_p,<sp/>lv_coord_t<sp/>x,<sp/>lv_coord_t<sp/>y)</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_coord_t<sp/>w<sp/>=<sp/>lv_area_get_width(area_p);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_coord_t<sp/>h<sp/>=<sp/>lv_area_get_height(area_p);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>area_p-&gt;<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref><sp/><sp/><sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>area_p-&gt;<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref><sp/><sp/><sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__area_8c_1a7cd8866c2312050e4541d5cdd862ed4a" kindref="member">lv_area_set_width</ref>(area_p,<sp/>w);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__area_8c_1a092d265b43760f45dded850e64c175c7" kindref="member">lv_area_set_height</ref>(area_p,<sp/>h);</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">uint32_t<sp/><ref refid="lv__area_8c_1a71b2b35191f41ba629245399ce5aaf39" kindref="member">lv_area_get_size</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>area_p)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>size;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>=<sp/>(uint32_t)(area_p-&gt;<ref refid="structlv__area__t_1aec0405ee6e0fa96f922fee6851240081" kindref="member">x2</ref><sp/>-<sp/>area_p-&gt;<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref><sp/>+<sp/>1)<sp/>*<sp/>(area_p-&gt;<ref refid="structlv__area__t_1ac3da01ffe2d07a8e446684160dd1f7fc" kindref="member">y2</ref><sp/>-<sp/>area_p-&gt;<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__area_8c_1aebf8be947f901f46693b4c2956a805a0" kindref="member">lv_area_intersect</ref>(<ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>res_p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>a1_p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>a2_p)</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>smaller<sp/>area<sp/>from<sp/>&apos;a1_p&apos;<sp/>and<sp/>&apos;a2_p&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>res_p-&gt;<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref><sp/>=<sp/><ref refid="lv__math_8h_1ae532fd7eb3f50c685401c8ddc49755aa" kindref="member">LV_MATH_MAX</ref>(a1_p-&gt;<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref>,<sp/>a2_p-&gt;<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>res_p-&gt;<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref><sp/>=<sp/><ref refid="lv__math_8h_1ae532fd7eb3f50c685401c8ddc49755aa" kindref="member">LV_MATH_MAX</ref>(a1_p-&gt;<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref>,<sp/>a2_p-&gt;<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>res_p-&gt;<ref refid="structlv__area__t_1aec0405ee6e0fa96f922fee6851240081" kindref="member">x2</ref><sp/>=<sp/><ref refid="lv__math_8h_1a820d36c04e90020db62f563358910807" kindref="member">LV_MATH_MIN</ref>(a1_p-&gt;<ref refid="structlv__area__t_1aec0405ee6e0fa96f922fee6851240081" kindref="member">x2</ref>,<sp/>a2_p-&gt;<ref refid="structlv__area__t_1aec0405ee6e0fa96f922fee6851240081" kindref="member">x2</ref>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>res_p-&gt;<ref refid="structlv__area__t_1ac3da01ffe2d07a8e446684160dd1f7fc" kindref="member">y2</ref><sp/>=<sp/><ref refid="lv__math_8h_1a820d36c04e90020db62f563358910807" kindref="member">LV_MATH_MIN</ref>(a1_p-&gt;<ref refid="structlv__area__t_1ac3da01ffe2d07a8e446684160dd1f7fc" kindref="member">y2</ref>,<sp/>a2_p-&gt;<ref refid="structlv__area__t_1ac3da01ffe2d07a8e446684160dd1f7fc" kindref="member">y2</ref>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*If<sp/>x1<sp/>or<sp/>y1<sp/>greater<sp/>then<sp/>x2<sp/>or<sp/>y2<sp/>then<sp/>the<sp/>areas<sp/>union<sp/>is<sp/>empty*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>union_ok<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((res_p-&gt;<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref><sp/>&gt;<sp/>res_p-&gt;<ref refid="structlv__area__t_1aec0405ee6e0fa96f922fee6851240081" kindref="member">x2</ref>)<sp/>||<sp/>(res_p-&gt;<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref><sp/>&gt;<sp/>res_p-&gt;<ref refid="structlv__area__t_1ac3da01ffe2d07a8e446684160dd1f7fc" kindref="member">y2</ref>))<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>union_ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>union_ok;</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__area_8c_1a5624f73deeed656fe3d830694f1095df" kindref="member">lv_area_join</ref>(<ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>a_res_p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>a1_p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>a2_p)</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>a_res_p-&gt;<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref><sp/>=<sp/><ref refid="lv__math_8h_1a820d36c04e90020db62f563358910807" kindref="member">LV_MATH_MIN</ref>(a1_p-&gt;<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref>,<sp/>a2_p-&gt;<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>a_res_p-&gt;<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref><sp/>=<sp/><ref refid="lv__math_8h_1a820d36c04e90020db62f563358910807" kindref="member">LV_MATH_MIN</ref>(a1_p-&gt;<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref>,<sp/>a2_p-&gt;<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>a_res_p-&gt;<ref refid="structlv__area__t_1aec0405ee6e0fa96f922fee6851240081" kindref="member">x2</ref><sp/>=<sp/><ref refid="lv__math_8h_1ae532fd7eb3f50c685401c8ddc49755aa" kindref="member">LV_MATH_MAX</ref>(a1_p-&gt;<ref refid="structlv__area__t_1aec0405ee6e0fa96f922fee6851240081" kindref="member">x2</ref>,<sp/>a2_p-&gt;<ref refid="structlv__area__t_1aec0405ee6e0fa96f922fee6851240081" kindref="member">x2</ref>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>a_res_p-&gt;<ref refid="structlv__area__t_1ac3da01ffe2d07a8e446684160dd1f7fc" kindref="member">y2</ref><sp/>=<sp/><ref refid="lv__math_8h_1ae532fd7eb3f50c685401c8ddc49755aa" kindref="member">LV_MATH_MAX</ref>(a1_p-&gt;<ref refid="structlv__area__t_1ac3da01ffe2d07a8e446684160dd1f7fc" kindref="member">y2</ref>,<sp/>a2_p-&gt;<ref refid="structlv__area__t_1ac3da01ffe2d07a8e446684160dd1f7fc" kindref="member">y2</ref>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__area_8c_1a5d63e038e924a898118c841d61d2a9f7" kindref="member">lv_area_is_point_on</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>a_p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__point__t" kindref="compound">lv_point_t</ref><sp/>*<sp/>p_p)</highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_on<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((p_p-&gt;<ref refid="structlv__point__t_1adfa12860a9e02d054107cfcd4fde3d9e" kindref="member">x</ref><sp/>&gt;=<sp/>a_p-&gt;<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref><sp/>&amp;&amp;<sp/>p_p-&gt;<ref refid="structlv__point__t_1adfa12860a9e02d054107cfcd4fde3d9e" kindref="member">x</ref><sp/>&lt;=<sp/>a_p-&gt;<ref refid="structlv__area__t_1aec0405ee6e0fa96f922fee6851240081" kindref="member">x2</ref>)<sp/>&amp;&amp;<sp/>((p_p-&gt;<ref refid="structlv__point__t_1a4f11b93689ca9ee0e57734726cf187c0" kindref="member">y</ref><sp/>&gt;=<sp/>a_p-&gt;<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref><sp/>&amp;&amp;<sp/>p_p-&gt;<ref refid="structlv__point__t_1a4f11b93689ca9ee0e57734726cf187c0" kindref="member">y</ref><sp/>&lt;=<sp/>a_p-&gt;<ref refid="structlv__area__t_1ac3da01ffe2d07a8e446684160dd1f7fc" kindref="member">y2</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_on<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_on;</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__area_8c_1aa2a98c824a46cad50e1b5fa75fbaee10" kindref="member">lv_area_is_on</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>a1_p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>a2_p)</highlight></codeline>
<codeline lineno="169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((a1_p-&gt;<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref><sp/>&lt;=<sp/>a2_p-&gt;<ref refid="structlv__area__t_1aec0405ee6e0fa96f922fee6851240081" kindref="member">x2</ref>)<sp/>&amp;&amp;<sp/>(a1_p-&gt;<ref refid="structlv__area__t_1aec0405ee6e0fa96f922fee6851240081" kindref="member">x2</ref><sp/>&gt;=<sp/>a2_p-&gt;<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref>)<sp/>&amp;&amp;<sp/>(a1_p-&gt;<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref><sp/>&lt;=<sp/>a2_p-&gt;<ref refid="structlv__area__t_1ac3da01ffe2d07a8e446684160dd1f7fc" kindref="member">y2</ref>)<sp/>&amp;&amp;<sp/>(a1_p-&gt;<ref refid="structlv__area__t_1ac3da01ffe2d07a8e446684160dd1f7fc" kindref="member">y2</ref><sp/>&gt;=<sp/>a2_p-&gt;<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref>))<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__area_8c_1aca2cfda730417164f24a6120ca80cbc3" kindref="member">lv_area_is_in</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>ain_p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>aholder_p)</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_in<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ain_p-&gt;<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref><sp/>&gt;=<sp/>aholder_p-&gt;<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref><sp/>&amp;&amp;<sp/>ain_p-&gt;<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref><sp/>&gt;=<sp/>aholder_p-&gt;<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref><sp/>&amp;&amp;<sp/>ain_p-&gt;<ref refid="structlv__area__t_1aec0405ee6e0fa96f922fee6851240081" kindref="member">x2</ref><sp/>&lt;=<sp/>aholder_p-&gt;<ref refid="structlv__area__t_1aec0405ee6e0fa96f922fee6851240081" kindref="member">x2</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ain_p-&gt;<ref refid="structlv__area__t_1ac3da01ffe2d07a8e446684160dd1f7fc" kindref="member">y2</ref><sp/>&lt;=<sp/>aholder_p-&gt;<ref refid="structlv__area__t_1ac3da01ffe2d07a8e446684160dd1f7fc" kindref="member">y2</ref>)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_in<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_in;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/>*<sp/><sp/><sp/>STATIC<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_area.c"/>
  </compounddef>
</doxygen>
