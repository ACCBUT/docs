<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="lv__draw__basic_8c" kind="file" language="C++">
    <compoundname>lv_draw_basic.c</compoundname>
    <includes refid="lv__draw__basic_8h" local="yes">lv_draw_basic.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="lv__refr_8h" local="yes">../lv_core/lv_refr.h</includes>
    <includes refid="lv__hal_8h" local="yes">../lv_hal/lv_hal.h</includes>
    <includes refid="lv__font_8h" local="yes">../lv_font/lv_font.h</includes>
    <includes refid="lv__area_8h" local="yes">../lv_misc/lv_area.h</includes>
    <includes refid="lv__color_8h" local="yes">../lv_misc/lv_color.h</includes>
    <includes refid="lv__log_8h" local="yes">../lv_misc/lv_log.h</includes>
    <includes local="no">stddef.h</includes>
    <includes refid="lv__draw_8h" local="yes">lv_draw.h</includes>
    <incdepgraph>
      <node id="869">
        <label>stdbool.h</label>
      </node>
      <node id="870">
        <label>lv_symbol_def.h</label>
        <link refid="lv__symbol__def_8h"/>
        <childnode refid="865" relation="include">
        </childnode>
      </node>
      <node id="872">
        <label>../lv_misc/lv_area.h</label>
        <link refid="lv__area_8h"/>
        <childnode refid="873" relation="include">
        </childnode>
        <childnode refid="869" relation="include">
        </childnode>
        <childnode refid="867" relation="include">
        </childnode>
        <childnode refid="865" relation="include">
        </childnode>
      </node>
      <node id="883">
        <label>lv_hal_disp.h</label>
        <link refid="lv__hal__disp_8h"/>
        <childnode refid="867" relation="include">
        </childnode>
        <childnode refid="869" relation="include">
        </childnode>
        <childnode refid="882" relation="include">
        </childnode>
        <childnode refid="871" relation="include">
        </childnode>
        <childnode refid="872" relation="include">
        </childnode>
        <childnode refid="881" relation="include">
        </childnode>
        <childnode refid="884" relation="include">
        </childnode>
      </node>
      <node id="888">
        <label>../lv_misc/lv_txt.h</label>
        <link refid="lv__txt_8h"/>
        <childnode refid="865" relation="include">
        </childnode>
        <childnode refid="869" relation="include">
        </childnode>
        <childnode refid="872" relation="include">
        </childnode>
        <childnode refid="866" relation="include">
        </childnode>
      </node>
      <node id="896">
        <label>lv_draw_arc.h</label>
        <link refid="lv__draw__arc_8h"/>
        <childnode refid="887" relation="include">
        </childnode>
      </node>
      <node id="877">
        <label>../lv_misc/lv_anim.h</label>
        <link refid="lv__anim_8h"/>
        <childnode refid="865" relation="include">
        </childnode>
        <childnode refid="867" relation="include">
        </childnode>
        <childnode refid="869" relation="include">
        </childnode>
        <childnode refid="873" relation="include">
        </childnode>
      </node>
      <node id="886">
        <label>lv_hal_tick.h</label>
        <link refid="lv__hal__tick_8h"/>
        <childnode refid="865" relation="include">
        </childnode>
        <childnode refid="867" relation="include">
        </childnode>
        <childnode refid="869" relation="include">
        </childnode>
      </node>
      <node id="867">
        <label>stdint.h</label>
      </node>
      <node id="890">
        <label>../lv_misc/lv_fs.h</label>
        <link refid="lv__fs_8h"/>
        <childnode refid="865" relation="include">
        </childnode>
        <childnode refid="867" relation="include">
        </childnode>
        <childnode refid="869" relation="include">
        </childnode>
        <childnode refid="879" relation="include">
        </childnode>
      </node>
      <node id="882">
        <label>../lv_hal/lv_hal.h</label>
        <link refid="lv__hal_8h"/>
        <childnode refid="883" relation="include">
        </childnode>
        <childnode refid="885" relation="include">
        </childnode>
        <childnode refid="886" relation="include">
        </childnode>
      </node>
      <node id="881">
        <label>../lv_misc/lv_ll.h</label>
        <link refid="lv__ll_8h"/>
        <childnode refid="879" relation="include">
        </childnode>
        <childnode refid="867" relation="include">
        </childnode>
        <childnode refid="868" relation="include">
        </childnode>
        <childnode refid="869" relation="include">
        </childnode>
      </node>
      <node id="885">
        <label>lv_hal_indev.h</label>
        <link refid="lv__hal__indev_8h"/>
        <childnode refid="865" relation="include">
        </childnode>
        <childnode refid="869" relation="include">
        </childnode>
        <childnode refid="867" relation="include">
        </childnode>
        <childnode refid="872" relation="include">
        </childnode>
        <childnode refid="884" relation="include">
        </childnode>
      </node>
      <node id="876">
        <label>lv_style.h</label>
        <link refid="lv__style_8h"/>
        <childnode refid="869" relation="include">
        </childnode>
        <childnode refid="866" relation="include">
        </childnode>
        <childnode refid="871" relation="include">
        </childnode>
        <childnode refid="872" relation="include">
        </childnode>
        <childnode refid="877" relation="include">
        </childnode>
      </node>
      <node id="866">
        <label>../lv_font/lv_font.h</label>
        <link refid="lv__font_8h"/>
        <childnode refid="865" relation="include">
        </childnode>
        <childnode refid="867" relation="include">
        </childnode>
        <childnode refid="868" relation="include">
        </childnode>
        <childnode refid="869" relation="include">
        </childnode>
        <childnode refid="870" relation="include">
        </childnode>
      </node>
      <node id="875">
        <label>lv_obj.h</label>
        <link refid="lv__obj_8h"/>
        <childnode refid="865" relation="include">
        </childnode>
        <childnode refid="868" relation="include">
        </childnode>
        <childnode refid="869" relation="include">
        </childnode>
        <childnode refid="876" relation="include">
        </childnode>
        <childnode refid="878" relation="include">
        </childnode>
        <childnode refid="872" relation="include">
        </childnode>
        <childnode refid="879" relation="include">
        </childnode>
        <childnode refid="881" relation="include">
        </childnode>
        <childnode refid="871" relation="include">
        </childnode>
        <childnode refid="880" relation="include">
        </childnode>
        <childnode refid="882" relation="include">
        </childnode>
      </node>
      <node id="868">
        <label>stddef.h</label>
      </node>
      <node id="895">
        <label>lv_draw_triangle.h</label>
        <link refid="lv__draw__triangle_8h"/>
        <childnode refid="887" relation="include">
        </childnode>
      </node>
      <node id="865">
        <label>../../../lv_conf.h</label>
      </node>
      <node id="887">
        <label>lv_draw.h</label>
        <link refid="lv__draw_8h"/>
        <childnode refid="865" relation="include">
        </childnode>
        <childnode refid="876" relation="include">
        </childnode>
        <childnode refid="888" relation="include">
        </childnode>
        <childnode refid="889" relation="include">
        </childnode>
        <childnode refid="864" relation="include">
        </childnode>
        <childnode refid="891" relation="include">
        </childnode>
        <childnode refid="892" relation="include">
        </childnode>
        <childnode refid="893" relation="include">
        </childnode>
        <childnode refid="894" relation="include">
        </childnode>
        <childnode refid="895" relation="include">
        </childnode>
        <childnode refid="896" relation="include">
        </childnode>
      </node>
      <node id="884">
        <label>../lv_misc/lv_task.h</label>
        <link refid="lv__task_8h"/>
        <childnode refid="865" relation="include">
        </childnode>
        <childnode refid="867" relation="include">
        </childnode>
        <childnode refid="869" relation="include">
        </childnode>
        <childnode refid="879" relation="include">
        </childnode>
        <childnode refid="881" relation="include">
        </childnode>
      </node>
      <node id="891">
        <label>lv_draw_rect.h</label>
        <link refid="lv__draw__rect_8h"/>
        <childnode refid="887" relation="include">
        </childnode>
      </node>
      <node id="873">
        <label>string.h</label>
      </node>
      <node id="871">
        <label>../lv_misc/lv_color.h</label>
        <link refid="lv__color_8h"/>
        <childnode refid="865" relation="include">
        </childnode>
        <childnode refid="867" relation="include">
        </childnode>
      </node>
      <node id="880">
        <label>lv_log.h</label>
        <link refid="lv__log_8h"/>
        <childnode refid="865" relation="include">
        </childnode>
        <childnode refid="867" relation="include">
        </childnode>
      </node>
      <node id="893">
        <label>lv_draw_img.h</label>
        <link refid="lv__draw__img_8h"/>
        <childnode refid="887" relation="include">
        </childnode>
        <childnode refid="889" relation="include">
        </childnode>
      </node>
      <node id="874">
        <label>../lv_core/lv_refr.h</label>
        <link refid="lv__refr_8h"/>
        <childnode refid="875" relation="include">
        </childnode>
        <childnode refid="869" relation="include">
        </childnode>
      </node>
      <node id="889">
        <label>lv_img_decoder.h</label>
        <link refid="lv__img__decoder_8h"/>
        <childnode refid="865" relation="include">
        </childnode>
        <childnode refid="867" relation="include">
        </childnode>
        <childnode refid="890" relation="include">
        </childnode>
        <childnode refid="878" relation="include">
        </childnode>
        <childnode refid="872" relation="include">
        </childnode>
        <childnode refid="876" relation="include">
        </childnode>
      </node>
      <node id="863">
        <label>/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_draw/lv_draw_basic.c</label>
        <link refid="lv__draw__basic_8c"/>
        <childnode refid="864" relation="include">
        </childnode>
        <childnode refid="869" relation="include">
        </childnode>
        <childnode refid="867" relation="include">
        </childnode>
        <childnode refid="873" relation="include">
        </childnode>
        <childnode refid="874" relation="include">
        </childnode>
        <childnode refid="882" relation="include">
        </childnode>
        <childnode refid="866" relation="include">
        </childnode>
        <childnode refid="872" relation="include">
        </childnode>
        <childnode refid="871" relation="include">
        </childnode>
        <childnode refid="880" relation="include">
        </childnode>
        <childnode refid="868" relation="include">
        </childnode>
        <childnode refid="887" relation="include">
        </childnode>
      </node>
      <node id="864">
        <label>lv_draw_basic.h</label>
        <link refid="lv__draw__basic_8h"/>
        <childnode refid="865" relation="include">
        </childnode>
        <childnode refid="866" relation="include">
        </childnode>
        <childnode refid="871" relation="include">
        </childnode>
        <childnode refid="872" relation="include">
        </childnode>
      </node>
      <node id="878">
        <label>../lv_misc/lv_types.h</label>
        <link refid="lv__types_8h"/>
      </node>
      <node id="894">
        <label>lv_draw_line.h</label>
        <link refid="lv__draw__line_8h"/>
      </node>
      <node id="892">
        <label>lv_draw_label.h</label>
        <link refid="lv__draw__label_8h"/>
        <childnode refid="887" relation="include">
        </childnode>
      </node>
      <node id="879">
        <label>../lv_misc/lv_mem.h</label>
        <link refid="lv__mem_8h"/>
        <childnode refid="865" relation="include">
        </childnode>
        <childnode refid="867" relation="include">
        </childnode>
        <childnode refid="868" relation="include">
        </childnode>
        <childnode refid="880" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="lv__draw__basic_8c_1a37ad84d4b6bc4980ee706f8a2adf7195" prot="public" static="no">
        <name>VFILL_HW_ACC_SIZE_LIMIT</name>
        <initializer>50</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_draw/lv_draw_basic.c" line="31" column="9" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_draw/lv_draw_basic.c" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="lv__draw__basic_8c_1aba6eabb7da74f1d4daa1a70a82b16ad4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void sw_mem_blend</definition>
        <argsstring>(lv_color_t *dest, const lv_color_t *src, uint32_t length, lv_opa_t opa)</argsstring>
        <name>sw_mem_blend</name>
        <param>
          <type><ref refid="lv__color_8h_1afef849f6369f1a4e8c6e2cdc8108d492" kindref="member">lv_color_t</ref> *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const <ref refid="lv__color_8h_1afef849f6369f1a4e8c6e2cdc8108d492" kindref="member">lv_color_t</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type><ref refid="lv__color_8h_1acdb0f6245624d86b1cb002186fd6cf96" kindref="member">lv_opa_t</ref></type>
          <declname>opa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Blend pixels to destination memory using opacity <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dest</parametername>
</parameternamelist>
<parameterdescription>
<para>a memory address. Copy &apos;src&apos; here. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to pixel map. Copy it to &apos;dest&apos;. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>number of pixels in &apos;src&apos; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>opa</parametername>
</parameternamelist>
<parameterdescription>
<para>opacity (0, LV_OPA_TRANSP: transparent ... 255, LV_OPA_COVER, fully cover) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_draw/lv_draw_basic.c" line="44" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_draw/lv_draw_basic.c" bodystart="542" bodyend="552"/>
      </memberdef>
      <memberdef kind="function" id="lv__draw__basic_8c_1a02584594490a01a7c078c3a9afa80ff1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void sw_color_fill</definition>
        <argsstring>(lv_color_t *mem, lv_coord_t mem_width, const lv_area_t *fill_area, lv_color_t color, lv_opa_t opa)</argsstring>
        <name>sw_color_fill</name>
        <param>
          <type><ref refid="lv__color_8h_1afef849f6369f1a4e8c6e2cdc8108d492" kindref="member">lv_color_t</ref> *</type>
          <declname>mem</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>mem_width</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>fill_area</declname>
        </param>
        <param>
          <type><ref refid="lv__color_8h_1afef849f6369f1a4e8c6e2cdc8108d492" kindref="member">lv_color_t</ref></type>
          <declname>color</declname>
        </param>
        <param>
          <type><ref refid="lv__color_8h_1acdb0f6245624d86b1cb002186fd6cf96" kindref="member">lv_opa_t</ref></type>
          <declname>opa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fill an area with a color <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mem</parametername>
</parameternamelist>
<parameterdescription>
<para>a memory address. Considered to a rectangular window according to &apos;mem_area&apos; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mem_width</parametername>
</parameternamelist>
<parameterdescription>
<para>width of the &apos;mem&apos; buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fill_area</parametername>
</parameternamelist>
<parameterdescription>
<para>coordinates of an area to fill. Relative to &apos;mem_area&apos;. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>fill color </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>opa</parametername>
</parameternamelist>
<parameterdescription>
<para>opacity (0, LV_OPA_TRANSP: transparent ... 255, LV_OPA_COVER, fully cover) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_draw/lv_draw_basic.c" line="45" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_draw/lv_draw_basic.c" bodystart="562" bodyend="623"/>
      </memberdef>
      <memberdef kind="function" id="lv__draw__basic_8c_1abb80916f2f6d5bba58c0e11c79c870e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_draw_px</definition>
        <argsstring>(lv_coord_t x, lv_coord_t y, const lv_area_t *mask_p, lv_color_t color, lv_opa_t opa)</argsstring>
        <name>lv_draw_px</name>
        <param>
          <type>lv_coord_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>mask_p</declname>
        </param>
        <param>
          <type><ref refid="lv__color_8h_1afef849f6369f1a4e8c6e2cdc8108d492" kindref="member">lv_color_t</ref></type>
          <declname>color</declname>
        </param>
        <param>
          <type><ref refid="lv__color_8h_1acdb0f6245624d86b1cb002186fd6cf96" kindref="member">lv_opa_t</ref></type>
          <declname>opa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Put a pixel in the Virtual Display Buffer <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>pixel x coordinate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>pixel y coordinate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask_p</parametername>
</parameternamelist>
<parameterdescription>
<para>fill only on this mask (truncated to VDB area) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>pixel color </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>opa</parametername>
</parameternamelist>
<parameterdescription>
<para>opacity of the area (0..255) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_draw/lv_draw_basic.c" line="72" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_draw/lv_draw_basic.c" bodystart="72" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="lv__draw__basic_8c_1a7d1a50ea5f87cda9e005547c57c4bb17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_draw_fill</definition>
        <argsstring>(const lv_area_t *cords_p, const lv_area_t *mask_p, lv_color_t color, lv_opa_t opa)</argsstring>
        <name>lv_draw_fill</name>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>cords_p</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>mask_p</declname>
        </param>
        <param>
          <type><ref refid="lv__color_8h_1afef849f6369f1a4e8c6e2cdc8108d492" kindref="member">lv_color_t</ref></type>
          <declname>color</declname>
        </param>
        <param>
          <type><ref refid="lv__color_8h_1acdb0f6245624d86b1cb002186fd6cf96" kindref="member">lv_opa_t</ref></type>
          <declname>opa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fill an area in the Virtual Display Buffer <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cords_p</parametername>
</parameternamelist>
<parameterdescription>
<para>coordinates of the area to fill </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask_p</parametername>
</parameternamelist>
<parameterdescription>
<para>fill only o this mask (truncated to VDB area) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>fill color </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>opa</parametername>
</parameternamelist>
<parameterdescription>
<para>opacity of the area (0..255) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_draw/lv_draw_basic.c" line="114" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_draw/lv_draw_basic.c" bodystart="114" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="lv__draw__basic_8c_1af302316a9eef761ddbf4df006b8e1ac9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_draw_letter</definition>
        <argsstring>(const lv_point_t *pos_p, const lv_area_t *mask_p, const lv_font_t *font_p, uint32_t letter, lv_color_t color, lv_opa_t opa)</argsstring>
        <name>lv_draw_letter</name>
        <param>
          <type>const <ref refid="structlv__point__t" kindref="compound">lv_point_t</ref> *</type>
          <declname>pos_p</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>mask_p</declname>
        </param>
        <param>
          <type>const <ref refid="lv__font_8h_1aa379967edc40a171f22ab760d1292cf0" kindref="member">lv_font_t</ref> *</type>
          <declname>font_p</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>letter</declname>
        </param>
        <param>
          <type><ref refid="lv__color_8h_1afef849f6369f1a4e8c6e2cdc8108d492" kindref="member">lv_color_t</ref></type>
          <declname>color</declname>
        </param>
        <param>
          <type><ref refid="lv__color_8h_1acdb0f6245624d86b1cb002186fd6cf96" kindref="member">lv_opa_t</ref></type>
          <declname>opa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Draw a letter in the Virtual Display Buffer <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos_p</parametername>
</parameternamelist>
<parameterdescription>
<para>left-top coordinate of the latter </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask_p</parametername>
</parameternamelist>
<parameterdescription>
<para>the letter will be drawn only on this area (truncated to VDB area) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>font_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to font </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>letter</parametername>
</parameternamelist>
<parameterdescription>
<para>a letter to draw </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>color of letter </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>opa</parametername>
</parameternamelist>
<parameterdescription>
<para>opacity of letter (0..255) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_draw/lv_draw_basic.c" line="224" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_draw/lv_draw_basic.c" bodystart="224" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="lv__draw__basic_8c_1aa1df70455a5d975506fdedb02c186235" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_draw_map</definition>
        <argsstring>(const lv_area_t *cords_p, const lv_area_t *mask_p, const uint8_t *map_p, lv_opa_t opa, bool chroma_key, bool alpha_byte, lv_color_t recolor, lv_opa_t recolor_opa)</argsstring>
        <name>lv_draw_map</name>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>cords_p</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>mask_p</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>map_p</declname>
        </param>
        <param>
          <type><ref refid="lv__color_8h_1acdb0f6245624d86b1cb002186fd6cf96" kindref="member">lv_opa_t</ref></type>
          <declname>opa</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>chroma_key</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>alpha_byte</declname>
        </param>
        <param>
          <type><ref refid="lv__color_8h_1afef849f6369f1a4e8c6e2cdc8108d492" kindref="member">lv_color_t</ref></type>
          <declname>recolor</declname>
        </param>
        <param>
          <type><ref refid="lv__color_8h_1acdb0f6245624d86b1cb002186fd6cf96" kindref="member">lv_opa_t</ref></type>
          <declname>recolor_opa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Draw a color map to the display (image) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cords_p</parametername>
</parameternamelist>
<parameterdescription>
<para>coordinates the color map </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask_p</parametername>
</parameternamelist>
<parameterdescription>
<para>the map will drawn only on this area (truncated to VDB area) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>map_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a lv_color_t array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>opa</parametername>
</parameternamelist>
<parameterdescription>
<para>opacity of the map </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chroma_keyed</parametername>
</parameternamelist>
<parameterdescription>
<para>true: enable transparency of LV_IMG_LV_COLOR_TRANSP color pixels </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alpha_byte</parametername>
</parameternamelist>
<parameterdescription>
<para>true: extra alpha byte is inserted for every pixel </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>recolor</parametername>
</parameternamelist>
<parameterdescription>
<para>mix the pixels with this color </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>recolor_opa</parametername>
</parameternamelist>
<parameterdescription>
<para>the intense of recoloring </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_draw/lv_draw_basic.c" line="370" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_draw/lv_draw_basic.c" bodystart="370" bodyend="529"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lv__draw__basic_8h" kindref="compound">lv_draw_basic.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_core/lv_refr.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_hal/lv_hal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_font/lv_font.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_misc/lv_area.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_misc/lv_color.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_misc/lv_log.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lv__draw_8h" kindref="compound">lv_draw.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>INCLUDES</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>DEFINES</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*Always<sp/>fill<sp/>&lt;<sp/>50<sp/>px<sp/>with<sp/>&apos;sw_color_fill&apos;<sp/>because<sp/>of<sp/>the<sp/>hw.<sp/>init<sp/>overhead*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VFILL_HW_ACC_SIZE_LIMIT<sp/>50</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LV_ATTRIBUTE_MEM_ALIGN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_ATTRIBUTE_MEM_ALIGN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>TYPEDEFS</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/><sp/>STATIC<sp/>PROTOTYPES</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sw_mem_blend(<ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>*<sp/>dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>*<sp/>src,<sp/>uint32_t<sp/>length,<sp/><ref refid="lv__color_8h_1acdb0f6245624d86b1cb002186fd6cf96" kindref="member">lv_opa_t</ref><sp/>opa);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sw_color_fill(<ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>*<sp/>mem,<sp/>lv_coord_t<sp/>mem_width,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>fill_area,<sp/><ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>color,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__color_8h_1acdb0f6245624d86b1cb002186fd6cf96" kindref="member">lv_opa_t</ref><sp/>opa);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_COLOR_SCREEN_TRANSP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>color_mix_2_alpha(<ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>bg_color,<sp/><ref refid="lv__color_8h_1acdb0f6245624d86b1cb002186fd6cf96" kindref="member">lv_opa_t</ref><sp/>bg_opa,<sp/><ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>fg_color,<sp/><ref refid="lv__color_8h_1acdb0f6245624d86b1cb002186fd6cf96" kindref="member">lv_opa_t</ref><sp/>fg_opa);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/><sp/>STATIC<sp/>VARIABLES</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>MACROS</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/><sp/><sp/>GLOBAL<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__draw__basic_8c_1abb80916f2f6d5bba58c0e11c79c870e0" kindref="member">lv_draw_px</ref>(lv_coord_t<sp/>x,<sp/>lv_coord_t<sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>mask_p,<sp/><ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>color,<sp/><ref refid="lv__color_8h_1acdb0f6245624d86b1cb002186fd6cf96" kindref="member">lv_opa_t</ref><sp/>opa)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(opa<sp/>&lt;<sp/><ref refid="lv__color_8h_1ac614bb0f5acc68f3b921f3213d46ac0f" kindref="member">LV_OPA_MIN</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(opa<sp/>&gt;<sp/><ref refid="lv__color_8h_1aea67a137776de380296f660cf9543e42" kindref="member">LV_OPA_MAX</ref>)<sp/>opa<sp/>=<sp/><ref refid="lv__color_8h_1aabfcbcb5ac86a1edac4035264bc7d2b8a13cdfbbe767edf76dc4f53389dfeca4a" kindref="member">LV_OPA_COVER</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Pixel<sp/>out<sp/>of<sp/>the<sp/>mask*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>&lt;<sp/>mask_p-&gt;x1<sp/>||<sp/>x<sp/>&gt;<sp/>mask_p-&gt;<ref refid="structlv__area__t_1aec0405ee6e0fa96f922fee6851240081" kindref="member">x2</ref><sp/>||<sp/>y<sp/>&lt;<sp/>mask_p-&gt;y1<sp/>||<sp/>y<sp/>&gt;<sp/>mask_p-&gt;<ref refid="structlv__area__t_1ac3da01ffe2d07a8e446684160dd1f7fc" kindref="member">y2</ref>)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__disp__t" kindref="compound">lv_disp_t</ref><sp/>*<sp/>disp<sp/><sp/><sp/><sp/>=<sp/><ref refid="lv__refr_8c_1af56ba8e546734a5760a5d7bbc965788e" kindref="member">lv_refr_get_disp_refreshing</ref>();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__disp__buf__t" kindref="compound">lv_disp_buf_t</ref><sp/>*<sp/>vdb<sp/>=<sp/><ref refid="lv__hal__disp_8c_1a0d9d997c562ee17f4bd2519e6a99de0f" kindref="member">lv_disp_get_buf</ref>(disp);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>vdb_width<sp/><sp/>=<sp/>lv_area_get_width(&amp;vdb-&gt;<ref refid="structlv__disp__buf__t_1af316716d5d23347cf1a13d43bbfc65b0" kindref="member">area</ref>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Make<sp/>the<sp/>coordinates<sp/>relative<sp/>to<sp/>VDB*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>-=<sp/>vdb-&gt;<ref refid="structlv__disp__buf__t_1af316716d5d23347cf1a13d43bbfc65b0" kindref="member">area</ref>.<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>-=<sp/>vdb-&gt;<ref refid="structlv__disp__buf__t_1af316716d5d23347cf1a13d43bbfc65b0" kindref="member">area</ref>.<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(disp-&gt;<ref refid="struct__disp__t_1a41b2d7b8aece123e730aba6de4737040" kindref="member">driver</ref>.<ref refid="struct__disp__drv__t_1a96466fc0be03f5b3526d382f2c4568bd" kindref="member">set_px_cb</ref>)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disp-&gt;<ref refid="struct__disp__t_1a41b2d7b8aece123e730aba6de4737040" kindref="member">driver</ref>.<ref refid="struct__disp__drv__t_1a96466fc0be03f5b3526d382f2c4568bd" kindref="member">set_px_cb</ref>(&amp;disp-&gt;<ref refid="struct__disp__t_1a41b2d7b8aece123e730aba6de4737040" kindref="member">driver</ref>,<sp/>(uint8_t<sp/>*)vdb-&gt;<ref refid="structlv__disp__buf__t_1ae4f48a9bc71d13eb18552a4b9ca5c711" kindref="member">buf_act</ref>,<sp/>vdb_width,<sp/>x,<sp/>y,<sp/>color,<sp/>opa);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>*<sp/>vdb_px_p<sp/>=<sp/>vdb-&gt;<ref refid="structlv__disp__buf__t_1ae4f48a9bc71d13eb18552a4b9ca5c711" kindref="member">buf_act</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vdb_px_p<sp/>+=<sp/>y<sp/>*<sp/>vdb_width<sp/>+<sp/>x;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_COLOR_SCREEN_TRANSP<sp/>==<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(opa<sp/>==<sp/><ref refid="lv__color_8h_1aabfcbcb5ac86a1edac4035264bc7d2b8a13cdfbbe767edf76dc4f53389dfeca4a" kindref="member">LV_OPA_COVER</ref>)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*vdb_px_p<sp/>=<sp/>color;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*vdb_px_p<sp/>=<sp/>lv_color_mix(color,<sp/>*vdb_px_p,<sp/>opa);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*vdb_px_p<sp/>=<sp/>color_mix_2_alpha(*vdb_px_p,<sp/>(*vdb_px_p).<ref refid="unionlv__color32__t_1a5519a07b8b8d309f06683f2110d0c8e0" kindref="member">alpha</ref>,<sp/>color,<sp/>opa);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__draw__basic_8c_1a7d1a50ea5f87cda9e005547c57c4bb17" kindref="member">lv_draw_fill</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>cords_p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>mask_p,<sp/><ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>color,<sp/><ref refid="lv__color_8h_1acdb0f6245624d86b1cb002186fd6cf96" kindref="member">lv_opa_t</ref><sp/>opa)</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(opa<sp/>&lt;<sp/><ref refid="lv__color_8h_1ac614bb0f5acc68f3b921f3213d46ac0f" kindref="member">LV_OPA_MIN</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(opa<sp/>&gt;<sp/><ref refid="lv__color_8h_1aea67a137776de380296f660cf9543e42" kindref="member">LV_OPA_MAX</ref>)<sp/>opa<sp/>=<sp/><ref refid="lv__color_8h_1aabfcbcb5ac86a1edac4035264bc7d2b8a13cdfbbe767edf76dc4f53389dfeca4a" kindref="member">LV_OPA_COVER</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>res_a;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>union_ok;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Get<sp/>the<sp/>union<sp/>of<sp/>cord<sp/>and<sp/>mask*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>mask<sp/>is<sp/>already<sp/>truncated<sp/>to<sp/>the<sp/>vdb<sp/>size</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>in<sp/>&apos;lv_refr_area_with_vdb&apos;<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>union_ok<sp/>=<sp/><ref refid="lv__area_8c_1aebf8be947f901f46693b4c2956a805a0" kindref="member">lv_area_intersect</ref>(&amp;res_a,<sp/>cords_p,<sp/>mask_p);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*If<sp/>there<sp/>are<sp/>common<sp/>part<sp/>of<sp/>the<sp/>three<sp/>area<sp/>then<sp/>draw<sp/>to<sp/>the<sp/>vdb*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(union_ok<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__disp__t" kindref="compound">lv_disp_t</ref><sp/>*<sp/>disp<sp/><sp/><sp/><sp/>=<sp/><ref refid="lv__refr_8c_1af56ba8e546734a5760a5d7bbc965788e" kindref="member">lv_refr_get_disp_refreshing</ref>();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__disp__buf__t" kindref="compound">lv_disp_buf_t</ref><sp/>*<sp/>vdb<sp/>=<sp/><ref refid="lv__hal__disp_8c_1a0d9d997c562ee17f4bd2519e6a99de0f" kindref="member">lv_disp_get_buf</ref>(disp);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>vdb_rel_a;<sp/></highlight><highlight class="comment">/*Stores<sp/>relative<sp/>coordinates<sp/>on<sp/>vdb*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>vdb_rel_a.<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref><sp/>=<sp/>res_a.<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref><sp/>-<sp/>vdb-&gt;<ref refid="structlv__disp__buf__t_1af316716d5d23347cf1a13d43bbfc65b0" kindref="member">area</ref>.<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>vdb_rel_a.<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref><sp/>=<sp/>res_a.<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref><sp/>-<sp/>vdb-&gt;<ref refid="structlv__disp__buf__t_1af316716d5d23347cf1a13d43bbfc65b0" kindref="member">area</ref>.<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>vdb_rel_a.<ref refid="structlv__area__t_1aec0405ee6e0fa96f922fee6851240081" kindref="member">x2</ref><sp/>=<sp/>res_a.<ref refid="structlv__area__t_1aec0405ee6e0fa96f922fee6851240081" kindref="member">x2</ref><sp/>-<sp/>vdb-&gt;<ref refid="structlv__disp__buf__t_1af316716d5d23347cf1a13d43bbfc65b0" kindref="member">area</ref>.<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>vdb_rel_a.<ref refid="structlv__area__t_1ac3da01ffe2d07a8e446684160dd1f7fc" kindref="member">y2</ref><sp/>=<sp/>res_a.<ref refid="structlv__area__t_1ac3da01ffe2d07a8e446684160dd1f7fc" kindref="member">y2</ref><sp/>-<sp/>vdb-&gt;<ref refid="structlv__disp__buf__t_1af316716d5d23347cf1a13d43bbfc65b0" kindref="member">area</ref>.<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>*<sp/>vdb_buf_tmp<sp/>=<sp/>vdb-&gt;<ref refid="structlv__disp__buf__t_1ae4f48a9bc71d13eb18552a4b9ca5c711" kindref="member">buf_act</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>vdb_width<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>lv_area_get_width(&amp;vdb-&gt;<ref refid="structlv__disp__buf__t_1af316716d5d23347cf1a13d43bbfc65b0" kindref="member">area</ref>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Move<sp/>the<sp/>vdb_tmp<sp/>to<sp/>the<sp/>first<sp/>row*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>vdb_buf_tmp<sp/>+=<sp/>vdb_width<sp/>*<sp/>vdb_rel_a.<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="lv__conf__checker_8h_1a6b77dcb22fcdc624952dc307331e5db6" kindref="member">LV_ATTRIBUTE_MEM_ALIGN</ref><sp/><ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>color_array_tmp[<ref refid="lv__conf__checker_8h_1abbfac4b79524137bb1386b9fff5eb8ad" kindref="member">LV_HOR_RES_MAX</ref>];<sp/></highlight><highlight class="comment">/*Used<sp/>by<sp/>&apos;lv_disp_mem_blend&apos;*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>lv_coord_t<sp/>last_width<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_coord_t<sp/>w<sp/>=<sp/>lv_area_get_width(&amp;vdb_rel_a);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Don&apos;t<sp/>use<sp/>hw.<sp/>acc.<sp/>for<sp/>every<sp/>small<sp/>fill<sp/>(because<sp/>of<sp/>the<sp/>init<sp/>overhead)*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(w<sp/>&lt;<sp/><ref refid="lv__draw__basic_8c_1a37ad84d4b6bc4980ee706f8a2adf7195" kindref="member">VFILL_HW_ACC_SIZE_LIMIT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sw_color_fill(vdb-&gt;<ref refid="structlv__disp__buf__t_1ae4f48a9bc71d13eb18552a4b9ca5c711" kindref="member">buf_act</ref>,<sp/>vdb_width,<sp/>&amp;vdb_rel_a,<sp/>color,<sp/>opa);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Not<sp/>opaque<sp/>fill*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(opa<sp/>==<sp/><ref refid="lv__color_8h_1aabfcbcb5ac86a1edac4035264bc7d2b8a13cdfbbe767edf76dc4f53389dfeca4a" kindref="member">LV_OPA_COVER</ref>)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Use<sp/>hw<sp/>fill<sp/>if<sp/>present*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(disp-&gt;<ref refid="struct__disp__t_1a41b2d7b8aece123e730aba6de4737040" kindref="member">driver</ref>.<ref refid="struct__disp__drv__t_1a6a683cded8dc5ce2e3f5c5ecb6385214" kindref="member">mem_fill_cb</ref>)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disp-&gt;<ref refid="struct__disp__t_1a41b2d7b8aece123e730aba6de4737040" kindref="member">driver</ref>.<ref refid="struct__disp__drv__t_1a6a683cded8dc5ce2e3f5c5ecb6385214" kindref="member">mem_fill_cb</ref>(&amp;disp-&gt;<ref refid="struct__disp__t_1a41b2d7b8aece123e730aba6de4737040" kindref="member">driver</ref>,<sp/>vdb-&gt;<ref refid="structlv__disp__buf__t_1ae4f48a9bc71d13eb18552a4b9ca5c711" kindref="member">buf_act</ref>,<sp/>vdb_width,<sp/>&amp;vdb_rel_a,<sp/>color);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Use<sp/>hw<sp/>blend<sp/>if<sp/>present<sp/>and<sp/>the<sp/>area<sp/>is<sp/>not<sp/>too<sp/>small*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lv_area_get_height(&amp;vdb_rel_a)<sp/>&gt;<sp/><ref refid="lv__draw__basic_8c_1a37ad84d4b6bc4980ee706f8a2adf7195" kindref="member">VFILL_HW_ACC_SIZE_LIMIT</ref><sp/>&amp;&amp;<sp/>disp-&gt;<ref refid="struct__disp__t_1a41b2d7b8aece123e730aba6de4737040" kindref="member">driver</ref>.<ref refid="struct__disp__drv__t_1a732a8c8650321db570f0f19fff6c007f" kindref="member">mem_blend_cb</ref>)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Fill<sp/>a<sp/><sp/>one<sp/>line<sp/>sized<sp/>buffer<sp/>with<sp/>a<sp/>color<sp/>and<sp/>blend<sp/>this<sp/>later*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(color_array_tmp[0].full<sp/>!=<sp/>color.<ref refid="unionlv__color32__t_1a724212bffcd824d555e7842b4d3a88c6" kindref="member">full</ref><sp/>||<sp/>last_width<sp/>!=<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>i;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>w;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color_array_tmp[i].full<sp/>=<sp/>color.<ref refid="unionlv__color32__t_1a724212bffcd824d555e7842b4d3a88c6" kindref="member">full</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_width<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Blend<sp/>the<sp/>filled<sp/>line<sp/>to<sp/>every<sp/>line<sp/>VDB<sp/>line-by-line*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lv_coord_t<sp/>row;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(row<sp/>=<sp/>vdb_rel_a.<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref>;<sp/>row<sp/>&lt;=<sp/>vdb_rel_a.<ref refid="structlv__area__t_1ac3da01ffe2d07a8e446684160dd1f7fc" kindref="member">y2</ref>;<sp/>row++)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disp-&gt;<ref refid="struct__disp__t_1a41b2d7b8aece123e730aba6de4737040" kindref="member">driver</ref>.<ref refid="struct__disp__drv__t_1a732a8c8650321db570f0f19fff6c007f" kindref="member">mem_blend_cb</ref>(&amp;disp-&gt;<ref refid="struct__disp__t_1a41b2d7b8aece123e730aba6de4737040" kindref="member">driver</ref>,<sp/>&amp;vdb_buf_tmp[vdb_rel_a.<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref>],<sp/>color_array_tmp,<sp/>w,<sp/>opa);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vdb_buf_tmp<sp/>+=<sp/>vdb_width;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Else<sp/>use<sp/>sw<sp/>fill<sp/>if<sp/>no<sp/>better<sp/>option*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sw_color_fill(vdb-&gt;<ref refid="structlv__disp__buf__t_1ae4f48a9bc71d13eb18552a4b9ca5c711" kindref="member">buf_act</ref>,<sp/>vdb_width,<sp/>&amp;vdb_rel_a,<sp/>color,<sp/>opa);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Fill<sp/>with<sp/>opacity*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Use<sp/>hw<sp/>blend<sp/>if<sp/>present*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(disp-&gt;<ref refid="struct__disp__t_1a41b2d7b8aece123e730aba6de4737040" kindref="member">driver</ref>.<ref refid="struct__disp__drv__t_1a732a8c8650321db570f0f19fff6c007f" kindref="member">mem_blend_cb</ref>)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(color_array_tmp[0].full<sp/>!=<sp/>color.<ref refid="unionlv__color32__t_1a724212bffcd824d555e7842b4d3a88c6" kindref="member">full</ref><sp/>||<sp/>last_width<sp/>!=<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>i;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>w;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color_array_tmp[i].full<sp/>=<sp/>color.<ref refid="unionlv__color32__t_1a724212bffcd824d555e7842b4d3a88c6" kindref="member">full</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_width<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lv_coord_t<sp/>row;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(row<sp/>=<sp/>vdb_rel_a.<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref>;<sp/>row<sp/>&lt;=<sp/>vdb_rel_a.<ref refid="structlv__area__t_1ac3da01ffe2d07a8e446684160dd1f7fc" kindref="member">y2</ref>;<sp/>row++)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disp-&gt;<ref refid="struct__disp__t_1a41b2d7b8aece123e730aba6de4737040" kindref="member">driver</ref>.<ref refid="struct__disp__drv__t_1a732a8c8650321db570f0f19fff6c007f" kindref="member">mem_blend_cb</ref>(&amp;disp-&gt;<ref refid="struct__disp__t_1a41b2d7b8aece123e730aba6de4737040" kindref="member">driver</ref>,<sp/>&amp;vdb_buf_tmp[vdb_rel_a.<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref>],<sp/>color_array_tmp,<sp/>w,<sp/>opa);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vdb_buf_tmp<sp/>+=<sp/>vdb_width;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Use<sp/>sw<sp/>fill<sp/>with<sp/>opa<sp/>if<sp/>no<sp/>better<sp/>option*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sw_color_fill(vdb-&gt;<ref refid="structlv__disp__buf__t_1ae4f48a9bc71d13eb18552a4b9ca5c711" kindref="member">buf_act</ref>,<sp/>vdb_width,<sp/>&amp;vdb_rel_a,<sp/>color,<sp/>opa);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>sw_color_fill(vdb-&gt;<ref refid="structlv__disp__buf__t_1ae4f48a9bc71d13eb18552a4b9ca5c711" kindref="member">buf_act</ref>,<sp/>vdb_width,<sp/>&amp;vdb_rel_a,<sp/>color,<sp/>opa);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__draw__basic_8c_1af302316a9eef761ddbf4df006b8e1ac9" kindref="member">lv_draw_letter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__point__t" kindref="compound">lv_point_t</ref><sp/>*<sp/>pos_p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>mask_p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__font__struct" kindref="compound">lv_font_t</ref><sp/>*<sp/>font_p,<sp/>uint32_t<sp/>letter,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>color,<sp/><ref refid="lv__color_8h_1acdb0f6245624d86b1cb002186fd6cf96" kindref="member">lv_opa_t</ref><sp/>opa)</highlight></codeline>
<codeline lineno="226"><highlight class="normal">{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*clang-format<sp/>off*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>bpp1_opa_table[2]<sp/><sp/>=<sp/>{0,<sp/>255};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Opacity<sp/>mapping<sp/>with<sp/>bpp<sp/>=<sp/>1<sp/>(Just<sp/>for<sp/>compatibility)*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>bpp2_opa_table[4]<sp/><sp/>=<sp/>{0,<sp/>85,<sp/>170,<sp/>255};<sp/></highlight><highlight class="comment">/*Opacity<sp/>mapping<sp/>with<sp/>bpp<sp/>=<sp/>2*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>bpp4_opa_table[16]<sp/>=<sp/>{0,<sp/><sp/>17,<sp/>34,<sp/><sp/>51,<sp/><sp/></highlight><highlight class="comment">/*Opacity<sp/>mapping<sp/>with<sp/>bpp<sp/>=<sp/>4*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>68,<sp/>85,<sp/>102,<sp/>119,<sp/>136,<sp/>153,<sp/>170,<sp/>187,<sp/>204,<sp/>221,<sp/>238,<sp/>255};</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*clang-format<sp/>on*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(opa<sp/>&lt;<sp/><ref refid="lv__color_8h_1ac614bb0f5acc68f3b921f3213d46ac0f" kindref="member">LV_OPA_MIN</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(opa<sp/>&gt;<sp/><ref refid="lv__color_8h_1aea67a137776de380296f660cf9543e42" kindref="member">LV_OPA_MAX</ref>)<sp/>opa<sp/>=<sp/><ref refid="lv__color_8h_1aabfcbcb5ac86a1edac4035264bc7d2b8a13cdfbbe767edf76dc4f53389dfeca4a" kindref="member">LV_OPA_COVER</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(font_p<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__log_8h_1a232c937133a815f441846f086f6aeb9b" kindref="member">LV_LOG_WARN</ref>(</highlight><highlight class="stringliteral">&quot;Font:<sp/>character&apos;s<sp/>bitmap<sp/>not<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__font__glyph__dsc__t" kindref="compound">lv_font_glyph_dsc_t</ref><sp/>g;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>g_ret<sp/>=<sp/><ref refid="lv__font_8c_1aa897fa5163ec801be9417f17bbc312c3" kindref="member">lv_font_get_glyph_dsc</ref>(font_p,<sp/>&amp;g,<sp/>letter,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(g_ret<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_coord_t<sp/>pos_x<sp/>=<sp/>pos_p-&gt;<ref refid="structlv__point__t_1adfa12860a9e02d054107cfcd4fde3d9e" kindref="member">x</ref><sp/>+<sp/>g.<ref refid="structlv__font__glyph__dsc__t_1a7dfed1ac8b3f543b7df6d28ba9d8fa79" kindref="member">ofs_x</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_coord_t<sp/>pos_y<sp/>=<sp/>pos_p-&gt;<ref refid="structlv__point__t_1a4f11b93689ca9ee0e57734726cf187c0" kindref="member">y</ref><sp/>+<sp/>(font_p-&gt;<ref refid="struct__lv__font__struct_1a052a0dc1565c8ad5bcccbf15a1f9541b" kindref="member">line_height</ref><sp/>-<sp/>font_p-&gt;<ref refid="struct__lv__font__struct_1a46c1ebfb964b60abfb453b4132432a57" kindref="member">base_line</ref>)<sp/>-<sp/>g.<ref refid="structlv__font__glyph__dsc__t_1a755c65c2c6d9a790d726e67dbcc0df3d" kindref="member">box_h</ref><sp/>-<sp/>g.<ref refid="structlv__font__glyph__dsc__t_1ad23c3c4fe94d93c3b27571d80b043293" kindref="member">ofs_y</ref>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*<sp/>bpp_opa_table;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>bitmask_init;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>bitmask;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(g.<ref refid="structlv__font__glyph__dsc__t_1aeeddfdcd24731d3b4e7cab1284368c52" kindref="member">bpp</ref>)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpp_opa_table<sp/>=<sp/>bpp1_opa_table;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmask_init<sp/><sp/>=<sp/>0x80;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpp_opa_table<sp/>=<sp/>bpp2_opa_table;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmask_init<sp/><sp/>=<sp/>0xC0;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpp_opa_table<sp/>=<sp/>bpp4_opa_table;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmask_init<sp/><sp/>=<sp/>0xF0;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpp_opa_table<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmask_init<sp/><sp/>=<sp/>0xFF;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*No<sp/>opa<sp/>table,<sp/>pixel<sp/>value<sp/>will<sp/>be<sp/>used<sp/>directly*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*Invalid<sp/>bpp.<sp/>Can&apos;t<sp/>render<sp/>the<sp/>letter*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*<sp/>map_p<sp/>=<sp/><ref refid="lv__font_8c_1a5a577dddaf2edce4a198d973e4b7d840" kindref="member">lv_font_get_glyph_bitmap</ref>(font_p,<sp/>letter);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(map_p<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*If<sp/>the<sp/>letter<sp/>is<sp/>completely<sp/>out<sp/>of<sp/>mask<sp/>don&apos;t<sp/>draw<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pos_x<sp/>+<sp/>g.<ref refid="structlv__font__glyph__dsc__t_1a46cc6fdf09582367cb0f0b2f12343196" kindref="member">box_w</ref><sp/>&lt;<sp/>mask_p-&gt;<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref><sp/>||<sp/>pos_x<sp/>&gt;<sp/>mask_p-&gt;<ref refid="structlv__area__t_1aec0405ee6e0fa96f922fee6851240081" kindref="member">x2</ref><sp/>||<sp/>pos_y<sp/>+<sp/>g.<ref refid="structlv__font__glyph__dsc__t_1a755c65c2c6d9a790d726e67dbcc0df3d" kindref="member">box_h</ref><sp/>&lt;<sp/>mask_p-&gt;<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref><sp/>||<sp/>pos_y<sp/>&gt;<sp/>mask_p-&gt;<ref refid="structlv__area__t_1ac3da01ffe2d07a8e446684160dd1f7fc" kindref="member">y2</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__disp__t" kindref="compound">lv_disp_t</ref><sp/>*<sp/>disp<sp/><sp/><sp/><sp/>=<sp/><ref refid="lv__refr_8c_1af56ba8e546734a5760a5d7bbc965788e" kindref="member">lv_refr_get_disp_refreshing</ref>();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__disp__buf__t" kindref="compound">lv_disp_buf_t</ref><sp/>*<sp/>vdb<sp/>=<sp/><ref refid="lv__hal__disp_8c_1a0d9d997c562ee17f4bd2519e6a99de0f" kindref="member">lv_disp_get_buf</ref>(disp);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_coord_t<sp/>vdb_width<sp/><sp/><sp/><sp/><sp/>=<sp/>lv_area_get_width(&amp;vdb-&gt;<ref refid="structlv__disp__buf__t_1af316716d5d23347cf1a13d43bbfc65b0" kindref="member">area</ref>);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>*<sp/>vdb_buf_tmp<sp/>=<sp/>vdb-&gt;<ref refid="structlv__disp__buf__t_1ae4f48a9bc71d13eb18552a4b9ca5c711" kindref="member">buf_act</ref>;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_coord_t<sp/>col,<sp/>row;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>width_byte_scr<sp/>=<sp/>g.<ref refid="structlv__font__glyph__dsc__t_1a46cc6fdf09582367cb0f0b2f12343196" kindref="member">box_w</ref><sp/>&gt;&gt;<sp/>3;<sp/></highlight><highlight class="comment">/*Width<sp/>in<sp/>bytes<sp/>(on<sp/>the<sp/>screen<sp/>finally)<sp/>(e.g.<sp/>w<sp/>=<sp/>11<sp/>-&gt;<sp/>2<sp/>bytes<sp/>wide)*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(g.<ref refid="structlv__font__glyph__dsc__t_1a46cc6fdf09582367cb0f0b2f12343196" kindref="member">box_w</ref><sp/>&amp;<sp/>0x7)<sp/>width_byte_scr++;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>width_bit<sp/>=<sp/>g.<ref refid="structlv__font__glyph__dsc__t_1a46cc6fdf09582367cb0f0b2f12343196" kindref="member">box_w</ref><sp/>*<sp/>g.<ref refid="structlv__font__glyph__dsc__t_1aeeddfdcd24731d3b4e7cab1284368c52" kindref="member">bpp</ref>;<sp/></highlight><highlight class="comment">/*Letter<sp/>width<sp/>in<sp/>bits*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>the<sp/>col/row<sp/>start/end<sp/>on<sp/>the<sp/>map*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_coord_t<sp/>col_start<sp/>=<sp/>pos_x<sp/>&gt;=<sp/>mask_p-&gt;<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref><sp/>?<sp/>0<sp/>:<sp/>mask_p-&gt;<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref><sp/>-<sp/>pos_x;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_coord_t<sp/>col_end<sp/><sp/><sp/>=<sp/>pos_x<sp/>+<sp/>g.<ref refid="structlv__font__glyph__dsc__t_1a46cc6fdf09582367cb0f0b2f12343196" kindref="member">box_w</ref><sp/>&lt;=<sp/>mask_p-&gt;<ref refid="structlv__area__t_1aec0405ee6e0fa96f922fee6851240081" kindref="member">x2</ref><sp/>?<sp/>g.<ref refid="structlv__font__glyph__dsc__t_1a46cc6fdf09582367cb0f0b2f12343196" kindref="member">box_w</ref><sp/>:<sp/>mask_p-&gt;<ref refid="structlv__area__t_1aec0405ee6e0fa96f922fee6851240081" kindref="member">x2</ref><sp/>-<sp/>pos_x<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_coord_t<sp/>row_start<sp/>=<sp/>pos_y<sp/>&gt;=<sp/>mask_p-&gt;<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref><sp/>?<sp/>0<sp/>:<sp/>mask_p-&gt;<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref><sp/>-<sp/>pos_y;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_coord_t<sp/>row_end<sp/><sp/><sp/>=<sp/>pos_y<sp/>+<sp/>g.<ref refid="structlv__font__glyph__dsc__t_1a755c65c2c6d9a790d726e67dbcc0df3d" kindref="member">box_h</ref><sp/>&lt;=<sp/>mask_p-&gt;<ref refid="structlv__area__t_1ac3da01ffe2d07a8e446684160dd1f7fc" kindref="member">y2</ref><sp/>?<sp/>g.<ref refid="structlv__font__glyph__dsc__t_1a755c65c2c6d9a790d726e67dbcc0df3d" kindref="member">box_h</ref><sp/>:<sp/>mask_p-&gt;<ref refid="structlv__area__t_1ac3da01ffe2d07a8e446684160dd1f7fc" kindref="member">y2</ref><sp/>-<sp/>pos_y<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Set<sp/>a<sp/>pointer<sp/>on<sp/>VDB<sp/>to<sp/>the<sp/>first<sp/>pixel<sp/>of<sp/>the<sp/>letter*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>vdb_buf_tmp<sp/>+=<sp/>((pos_y<sp/>-<sp/>vdb-&gt;<ref refid="structlv__disp__buf__t_1af316716d5d23347cf1a13d43bbfc65b0" kindref="member">area</ref>.<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref>)<sp/>*<sp/>vdb_width)<sp/>+<sp/>pos_x<sp/>-<sp/>vdb-&gt;<ref refid="structlv__disp__buf__t_1af316716d5d23347cf1a13d43bbfc65b0" kindref="member">area</ref>.<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*If<sp/>the<sp/>letter<sp/>is<sp/>partially<sp/>out<sp/>of<sp/>mask<sp/>the<sp/>move<sp/>there<sp/>on<sp/>VDB*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>vdb_buf_tmp<sp/>+=<sp/>(row_start<sp/>*<sp/>vdb_width)<sp/>+<sp/>col_start;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Move<sp/>on<sp/>the<sp/>map<sp/>too*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>bit_ofs<sp/>=<sp/>(row_start<sp/>*<sp/>width_bit)<sp/>+<sp/>(col_start<sp/>*<sp/>g.<ref refid="structlv__font__glyph__dsc__t_1aeeddfdcd24731d3b4e7cab1284368c52" kindref="member">bpp</ref>);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>map_p<sp/>+=<sp/>bit_ofs<sp/>&gt;&gt;<sp/>3;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>letter_px;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__color_8h_1acdb0f6245624d86b1cb002186fd6cf96" kindref="member">lv_opa_t</ref><sp/>px_opa;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>col_bit;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>col_bit<sp/>=<sp/>bit_ofs<sp/>&amp;<sp/>0x7;<sp/></highlight><highlight class="comment">/*<sp/>&quot;&amp;<sp/>0x7&quot;<sp/>equals<sp/>to<sp/>&quot;%<sp/>8&quot;<sp/>just<sp/>faster<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(row<sp/>=<sp/>row_start;<sp/>row<sp/>&lt;<sp/>row_end;<sp/>row++)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmask<sp/>=<sp/>bitmask_init<sp/>&gt;&gt;<sp/>col_bit;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(col<sp/>=<sp/>col_start;<sp/>col<sp/>&lt;<sp/>col_end;<sp/>col++)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>letter_px<sp/>=<sp/>(*map_p<sp/>&amp;<sp/>bitmask)<sp/>&gt;&gt;<sp/>(8<sp/>-<sp/>col_bit<sp/>-<sp/>g.<ref refid="structlv__font__glyph__dsc__t_1aeeddfdcd24731d3b4e7cab1284368c52" kindref="member">bpp</ref>);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(letter_px<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(opa<sp/>==<sp/><ref refid="lv__color_8h_1aabfcbcb5ac86a1edac4035264bc7d2b8a13cdfbbe767edf76dc4f53389dfeca4a" kindref="member">LV_OPA_COVER</ref>)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>px_opa<sp/>=<sp/>g.<ref refid="structlv__font__glyph__dsc__t_1aeeddfdcd24731d3b4e7cab1284368c52" kindref="member">bpp</ref><sp/>==<sp/>8<sp/>?<sp/>letter_px<sp/>:<sp/>bpp_opa_table[letter_px];</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>px_opa<sp/>=<sp/>g.<ref refid="structlv__font__glyph__dsc__t_1aeeddfdcd24731d3b4e7cab1284368c52" kindref="member">bpp</ref><sp/>==<sp/>8<sp/>?<sp/>(uint16_t)((uint16_t)letter_px<sp/>*<sp/>opa)<sp/>&gt;&gt;<sp/>8</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(uint16_t)((uint16_t)bpp_opa_table[letter_px]<sp/>*<sp/>opa)<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(disp-&gt;<ref refid="struct__disp__t_1a41b2d7b8aece123e730aba6de4737040" kindref="member">driver</ref>.<ref refid="struct__disp__drv__t_1a96466fc0be03f5b3526d382f2c4568bd" kindref="member">set_px_cb</ref>)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disp-&gt;<ref refid="struct__disp__t_1a41b2d7b8aece123e730aba6de4737040" kindref="member">driver</ref>.<ref refid="struct__disp__drv__t_1a96466fc0be03f5b3526d382f2c4568bd" kindref="member">set_px_cb</ref>(&amp;disp-&gt;<ref refid="struct__disp__t_1a41b2d7b8aece123e730aba6de4737040" kindref="member">driver</ref>,<sp/>(uint8_t<sp/>*)vdb-&gt;<ref refid="structlv__disp__buf__t_1ae4f48a9bc71d13eb18552a4b9ca5c711" kindref="member">buf_act</ref>,<sp/>vdb_width,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(col<sp/>+<sp/>pos_x)<sp/>-<sp/>vdb-&gt;<ref refid="structlv__disp__buf__t_1af316716d5d23347cf1a13d43bbfc65b0" kindref="member">area</ref>.<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref>,<sp/>(row<sp/>+<sp/>pos_y)<sp/>-<sp/>vdb-&gt;<ref refid="structlv__disp__buf__t_1af316716d5d23347cf1a13d43bbfc65b0" kindref="member">area</ref>.<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref>,<sp/>color,<sp/>px_opa);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vdb_buf_tmp-&gt;<ref refid="unionlv__color32__t_1a724212bffcd824d555e7842b4d3a88c6" kindref="member">full</ref><sp/>!=<sp/>color.<ref refid="unionlv__color32__t_1a724212bffcd824d555e7842b4d3a88c6" kindref="member">full</ref>)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(px_opa<sp/>&gt;<sp/><ref refid="lv__color_8h_1aea67a137776de380296f660cf9543e42" kindref="member">LV_OPA_MAX</ref>)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*vdb_buf_tmp<sp/>=<sp/>color;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(px_opa<sp/>&gt;<sp/><ref refid="lv__color_8h_1ac614bb0f5acc68f3b921f3213d46ac0f" kindref="member">LV_OPA_MIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_COLOR_SCREEN_TRANSP<sp/>==<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*vdb_buf_tmp<sp/>=<sp/>lv_color_mix(color,<sp/>*vdb_buf_tmp,<sp/>px_opa);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*vdb_buf_tmp<sp/>=<sp/>color_mix_2_alpha(*vdb_buf_tmp,<sp/>(*vdb_buf_tmp).<ref refid="unionlv__color32__t_1a5519a07b8b8d309f06683f2110d0c8e0" kindref="member">alpha</ref>,<sp/>color,<sp/>px_opa);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vdb_buf_tmp++;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(col_bit<sp/>&lt;<sp/>8<sp/>-<sp/>g.<ref refid="structlv__font__glyph__dsc__t_1aeeddfdcd24731d3b4e7cab1284368c52" kindref="member">bpp</ref>)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_bit<sp/>+=<sp/>g.<ref refid="structlv__font__glyph__dsc__t_1aeeddfdcd24731d3b4e7cab1284368c52" kindref="member">bpp</ref>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmask<sp/>=<sp/>bitmask<sp/>&gt;&gt;<sp/>g.<ref refid="structlv__font__glyph__dsc__t_1aeeddfdcd24731d3b4e7cab1284368c52" kindref="member">bpp</ref>;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_bit<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmask<sp/>=<sp/>bitmask_init;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map_p++;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_bit<sp/>+=<sp/>((g.<ref refid="structlv__font__glyph__dsc__t_1a46cc6fdf09582367cb0f0b2f12343196" kindref="member">box_w</ref><sp/>-<sp/>col_end)<sp/>+<sp/>col_start)<sp/>*<sp/>g.<ref refid="structlv__font__glyph__dsc__t_1aeeddfdcd24731d3b4e7cab1284368c52" kindref="member">bpp</ref>;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map_p<sp/>+=<sp/>(col_bit<sp/>&gt;&gt;<sp/>3);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_bit<sp/>=<sp/>col_bit<sp/>&amp;<sp/>0x7;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vdb_buf_tmp<sp/>+=<sp/>vdb_width<sp/>-<sp/>(col_end<sp/>-<sp/>col_start);<sp/></highlight><highlight class="comment">/*Next<sp/>row<sp/>in<sp/>VDB*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__draw__basic_8c_1aa1df70455a5d975506fdedb02c186235" kindref="member">lv_draw_map</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>cords_p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>mask_p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*<sp/>map_p,<sp/><ref refid="lv__color_8h_1acdb0f6245624d86b1cb002186fd6cf96" kindref="member">lv_opa_t</ref><sp/>opa,</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>chroma_key,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alpha_byte,<sp/><ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>recolor,<sp/><ref refid="lv__color_8h_1acdb0f6245624d86b1cb002186fd6cf96" kindref="member">lv_opa_t</ref><sp/>recolor_opa)</highlight></codeline>
<codeline lineno="372"><highlight class="normal">{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(opa<sp/>&lt;<sp/><ref refid="lv__color_8h_1ac614bb0f5acc68f3b921f3213d46ac0f" kindref="member">LV_OPA_MIN</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(opa<sp/>&gt;<sp/><ref refid="lv__color_8h_1aea67a137776de380296f660cf9543e42" kindref="member">LV_OPA_MAX</ref>)<sp/>opa<sp/>=<sp/><ref refid="lv__color_8h_1aabfcbcb5ac86a1edac4035264bc7d2b8a13cdfbbe767edf76dc4f53389dfeca4a" kindref="member">LV_OPA_COVER</ref>;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>masked_a;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>union_ok;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Get<sp/>the<sp/>union<sp/>of<sp/>map<sp/>size<sp/>and<sp/>mask*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>mask<sp/>is<sp/>already<sp/>truncated<sp/>to<sp/>the<sp/>vdb<sp/>size</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>in<sp/>&apos;lv_refr_area_with_vdb&apos;<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>union_ok<sp/>=<sp/><ref refid="lv__area_8c_1aebf8be947f901f46693b4c2956a805a0" kindref="member">lv_area_intersect</ref>(&amp;masked_a,<sp/>cords_p,<sp/>mask_p);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*If<sp/>there<sp/>are<sp/>common<sp/>part<sp/>of<sp/>the<sp/>three<sp/>area<sp/>then<sp/>draw<sp/>to<sp/>the<sp/>vdb*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(union_ok<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*The<sp/>pixel<sp/>size<sp/>in<sp/>byte<sp/>is<sp/>different<sp/>if<sp/>an<sp/>alpha<sp/>byte<sp/>is<sp/>added<sp/>too*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>px_size_byte<sp/>=<sp/>alpha_byte<sp/>?<sp/><ref refid="lv__img__decoder_8h_1afcd8da034fac14905f604cf04e75c122" kindref="member">LV_IMG_PX_SIZE_ALPHA_BYTE</ref><sp/>:<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="lv__color_8h_1afef849f6369f1a4e8c6e2cdc8108d492" kindref="member">lv_color_t</ref>);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*If<sp/>the<sp/>map<sp/>starts<sp/>OUT<sp/>of<sp/>the<sp/>masked<sp/>area<sp/>then<sp/>calc.<sp/>the<sp/>first<sp/>pixel*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_coord_t<sp/>map_width<sp/>=<sp/>lv_area_get_width(cords_p);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cords_p-&gt;<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref><sp/>&lt;<sp/>masked_a.<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref>)<sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map_p<sp/>+=<sp/>(uint32_t)map_width<sp/>*<sp/>((masked_a.<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref><sp/>-<sp/>cords_p-&gt;<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref>))<sp/>*<sp/>px_size_byte;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cords_p-&gt;<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref><sp/>&lt;<sp/>masked_a.<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref>)<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map_p<sp/>+=<sp/>(masked_a.<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref><sp/>-<sp/>cords_p-&gt;<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref>)<sp/>*<sp/>px_size_byte;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__disp__t" kindref="compound">lv_disp_t</ref><sp/>*<sp/>disp<sp/><sp/><sp/><sp/>=<sp/><ref refid="lv__refr_8c_1af56ba8e546734a5760a5d7bbc965788e" kindref="member">lv_refr_get_disp_refreshing</ref>();</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__disp__buf__t" kindref="compound">lv_disp_buf_t</ref><sp/>*<sp/>vdb<sp/>=<sp/><ref refid="lv__hal__disp_8c_1a0d9d997c562ee17f4bd2519e6a99de0f" kindref="member">lv_disp_get_buf</ref>(disp);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Stores<sp/>coordinates<sp/>relative<sp/>to<sp/>the<sp/>current<sp/>VDB*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>masked_a.<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref><sp/>=<sp/>masked_a.<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref><sp/>-<sp/>vdb-&gt;<ref refid="structlv__disp__buf__t_1af316716d5d23347cf1a13d43bbfc65b0" kindref="member">area</ref>.<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref>;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>masked_a.<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref><sp/>=<sp/>masked_a.<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref><sp/>-<sp/>vdb-&gt;<ref refid="structlv__disp__buf__t_1af316716d5d23347cf1a13d43bbfc65b0" kindref="member">area</ref>.<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref>;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>masked_a.<ref refid="structlv__area__t_1aec0405ee6e0fa96f922fee6851240081" kindref="member">x2</ref><sp/>=<sp/>masked_a.<ref refid="structlv__area__t_1aec0405ee6e0fa96f922fee6851240081" kindref="member">x2</ref><sp/>-<sp/>vdb-&gt;<ref refid="structlv__disp__buf__t_1af316716d5d23347cf1a13d43bbfc65b0" kindref="member">area</ref>.<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref>;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>masked_a.<ref refid="structlv__area__t_1ac3da01ffe2d07a8e446684160dd1f7fc" kindref="member">y2</ref><sp/>=<sp/>masked_a.<ref refid="structlv__area__t_1ac3da01ffe2d07a8e446684160dd1f7fc" kindref="member">y2</ref><sp/>-<sp/>vdb-&gt;<ref refid="structlv__disp__buf__t_1af316716d5d23347cf1a13d43bbfc65b0" kindref="member">area</ref>.<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref>;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_coord_t<sp/>vdb_width<sp/><sp/><sp/><sp/><sp/>=<sp/>lv_area_get_width(&amp;vdb-&gt;<ref refid="structlv__disp__buf__t_1af316716d5d23347cf1a13d43bbfc65b0" kindref="member">area</ref>);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>*<sp/>vdb_buf_tmp<sp/>=<sp/>vdb-&gt;<ref refid="structlv__disp__buf__t_1ae4f48a9bc71d13eb18552a4b9ca5c711" kindref="member">buf_act</ref>;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>vdb_buf_tmp<sp/>+=<sp/>(uint32_t)vdb_width<sp/>*<sp/>masked_a.<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref>;<sp/></highlight><highlight class="comment">/*Move<sp/>to<sp/>the<sp/>first<sp/>row*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>vdb_buf_tmp<sp/>+=<sp/>(uint32_t)masked_a.<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Move<sp/>to<sp/>the<sp/>first<sp/>col*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_coord_t<sp/>row;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_coord_t<sp/>map_useful_w<sp/>=<sp/>lv_area_get_width(&amp;masked_a);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*The<sp/>simplest<sp/>case<sp/>just<sp/>copy<sp/>the<sp/>pixels<sp/>into<sp/>the<sp/>VDB*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(chroma_key<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>alpha_byte<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>opa<sp/>==<sp/><ref refid="lv__color_8h_1aabfcbcb5ac86a1edac4035264bc7d2b8a13cdfbbe767edf76dc4f53389dfeca4a" kindref="member">LV_OPA_COVER</ref><sp/>&amp;&amp;<sp/>recolor_opa<sp/>==<sp/><ref refid="lv__color_8h_1aabfcbcb5ac86a1edac4035264bc7d2b8ac5670b24820d02ac0fe11ff8a1ad00c0" kindref="member">LV_OPA_TRANSP</ref>)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Use<sp/>the<sp/>custom<sp/>VDB<sp/>write<sp/>function<sp/>is<sp/>exists*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(disp-&gt;<ref refid="struct__disp__t_1a41b2d7b8aece123e730aba6de4737040" kindref="member">driver</ref>.<ref refid="struct__disp__drv__t_1a96466fc0be03f5b3526d382f2c4568bd" kindref="member">set_px_cb</ref>)<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lv_coord_t<sp/>col;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(row<sp/>=<sp/>masked_a.<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref>;<sp/>row<sp/>&lt;=<sp/>masked_a.<ref refid="structlv__area__t_1ac3da01ffe2d07a8e446684160dd1f7fc" kindref="member">y2</ref>;<sp/>row++)<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(col<sp/>=<sp/>0;<sp/>col<sp/>&lt;<sp/>map_useful_w;<sp/>col++)<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>px_color<sp/>=<sp/>*((<ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>*)&amp;map_p[(uint32_t)col<sp/>*<sp/>px_size_byte]);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disp-&gt;<ref refid="struct__disp__t_1a41b2d7b8aece123e730aba6de4737040" kindref="member">driver</ref>.<ref refid="struct__disp__drv__t_1a96466fc0be03f5b3526d382f2c4568bd" kindref="member">set_px_cb</ref>(&amp;disp-&gt;<ref refid="struct__disp__t_1a41b2d7b8aece123e730aba6de4737040" kindref="member">driver</ref>,<sp/>(uint8_t<sp/>*)vdb-&gt;<ref refid="structlv__disp__buf__t_1ae4f48a9bc71d13eb18552a4b9ca5c711" kindref="member">buf_act</ref>,<sp/>vdb_width,<sp/>col<sp/>+<sp/>masked_a.<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref>,<sp/>row,</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>px_color,<sp/>opa);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map_p<sp/>+=<sp/>map_width<sp/>*<sp/>px_size_byte;<sp/></highlight><highlight class="comment">/*Next<sp/>row<sp/>on<sp/>the<sp/>map*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Normal<sp/>native<sp/>VDB*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(row<sp/>=<sp/>masked_a.<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref>;<sp/>row<sp/>&lt;=<sp/>masked_a.<ref refid="structlv__area__t_1ac3da01ffe2d07a8e446684160dd1f7fc" kindref="member">y2</ref>;<sp/>row++)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(disp-&gt;<ref refid="struct__disp__t_1a41b2d7b8aece123e730aba6de4737040" kindref="member">driver</ref>.<ref refid="struct__disp__drv__t_1a732a8c8650321db570f0f19fff6c007f" kindref="member">mem_blend_cb</ref><sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sw_mem_blend(vdb_buf_tmp,<sp/>(<ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>*)map_p,<sp/>map_useful_w,<sp/>opa);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disp-&gt;<ref refid="struct__disp__t_1a41b2d7b8aece123e730aba6de4737040" kindref="member">driver</ref>.<ref refid="struct__disp__drv__t_1a732a8c8650321db570f0f19fff6c007f" kindref="member">mem_blend_cb</ref>(&amp;disp-&gt;<ref refid="struct__disp__t_1a41b2d7b8aece123e730aba6de4737040" kindref="member">driver</ref>,<sp/>vdb_buf_tmp,<sp/>(<ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>*)map_p,<sp/>map_useful_w,<sp/>opa);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sw_mem_blend(vdb_buf_tmp,<sp/>(<ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>*)map_p,<sp/>map_useful_w,<sp/>opa);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map_p<sp/>+=<sp/>map_width<sp/>*<sp/>px_size_byte;<sp/></highlight><highlight class="comment">/*Next<sp/>row<sp/>on<sp/>the<sp/>map*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vdb_buf_tmp<sp/>+=<sp/>vdb_width;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Next<sp/>row<sp/>on<sp/>the<sp/>VDB*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*In<sp/>the<sp/>other<sp/>cases<sp/>every<sp/>pixel<sp/>need<sp/>to<sp/>be<sp/>checked<sp/>one-by-one*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lv_coord_t<sp/>col;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>last_img_px<sp/><sp/>=<sp/><ref refid="lv__color_8h_1a83eb8a8c5be43ccebee4acc1da5a0d47" kindref="member">LV_COLOR_BLACK</ref>;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>recolored_px<sp/>=<sp/>lv_color_mix(recolor,<sp/>last_img_px,<sp/>recolor_opa);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(row<sp/>=<sp/>masked_a.<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref>;<sp/>row<sp/>&lt;=<sp/>masked_a.<ref refid="structlv__area__t_1ac3da01ffe2d07a8e446684160dd1f7fc" kindref="member">y2</ref>;<sp/>row++)<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(col<sp/>=<sp/>0;<sp/>col<sp/>&lt;<sp/>map_useful_w;<sp/>col++)<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__color_8h_1acdb0f6245624d86b1cb002186fd6cf96" kindref="member">lv_opa_t</ref><sp/>opa_result<sp/><sp/>=<sp/>opa;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*<sp/>px_color_p<sp/>=<sp/>(uint8_t<sp/>*)&amp;map_p[(uint32_t)col<sp/>*<sp/>px_size_byte];</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>px_color;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Calculate<sp/>with<sp/>the<sp/>pixel<sp/>level<sp/>alpha*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(alpha_byte)<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_COLOR_DEPTH<sp/>==<sp/>8<sp/>||<sp/>LV_COLOR_DEPTH<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>px_color.<ref refid="unionlv__color32__t_1a724212bffcd824d555e7842b4d3a88c6" kindref="member">full</ref><sp/>=<sp/>px_color_p[0];</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>LV_COLOR_DEPTH<sp/>==<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Because<sp/>of<sp/>Alpha<sp/>byte<sp/>16<sp/>bit<sp/>color<sp/>can<sp/>start<sp/>on<sp/>odd<sp/>address<sp/>which<sp/>can<sp/>cause</highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>crash*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>px_color.<ref refid="unionlv__color32__t_1a724212bffcd824d555e7842b4d3a88c6" kindref="member">full</ref><sp/>=<sp/>px_color_p[0]<sp/>+<sp/>(px_color_p[1]<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>LV_COLOR_DEPTH<sp/>==<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>px_color<sp/>=<sp/>*((<ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>*)px_color_p);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__color_8h_1acdb0f6245624d86b1cb002186fd6cf96" kindref="member">lv_opa_t</ref><sp/>px_opa<sp/>=<sp/>*(px_color_p<sp/>+<sp/><ref refid="lv__img__decoder_8h_1afcd8da034fac14905f604cf04e75c122" kindref="member">LV_IMG_PX_SIZE_ALPHA_BYTE</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(px_opa<sp/>==<sp/><ref refid="lv__color_8h_1aabfcbcb5ac86a1edac4035264bc7d2b8ac5670b24820d02ac0fe11ff8a1ad00c0" kindref="member">LV_OPA_TRANSP</ref>)</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(px_opa<sp/>!=<sp/><ref refid="lv__color_8h_1aabfcbcb5ac86a1edac4035264bc7d2b8a13cdfbbe767edf76dc4f53389dfeca4a" kindref="member">LV_OPA_COVER</ref>)</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opa_result<sp/>=<sp/>(uint32_t)((uint32_t)px_opa<sp/>*<sp/>opa_result)<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>px_color<sp/>=<sp/>*((<ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>*)px_color_p);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Handle<sp/>chroma<sp/>key*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(chroma_key<sp/>&amp;&amp;<sp/>px_color.full<sp/>==<sp/>disp-&gt;<ref refid="struct__disp__t_1a41b2d7b8aece123e730aba6de4737040" kindref="member">driver</ref>.<ref refid="struct__disp__drv__t_1afcc099f8594a566b712353afc37b578d" kindref="member">color_chroma_key</ref>.<ref refid="unionlv__color32__t_1a724212bffcd824d555e7842b4d3a88c6" kindref="member">full</ref>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Re-color<sp/>the<sp/>pixel<sp/>if<sp/>required*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(recolor_opa<sp/>!=<sp/><ref refid="lv__color_8h_1aabfcbcb5ac86a1edac4035264bc7d2b8ac5670b24820d02ac0fe11ff8a1ad00c0" kindref="member">LV_OPA_TRANSP</ref>)<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(last_img_px.<ref refid="unionlv__color32__t_1a724212bffcd824d555e7842b4d3a88c6" kindref="member">full</ref><sp/>!=<sp/>px_color.full)<sp/>{<sp/></highlight><highlight class="comment">/*Minor<sp/>acceleration:<sp/>calculate<sp/>only<sp/>for</highlight></codeline>
<codeline lineno="487"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new<sp/>colors<sp/>(save<sp/>the<sp/>last)*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_img_px<sp/><sp/>=<sp/>px_color;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recolored_px<sp/>=<sp/>lv_color_mix(recolor,<sp/>last_img_px,<sp/>recolor_opa);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Handle<sp/>custom<sp/>VDB<sp/>write<sp/>is<sp/>present*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(disp-&gt;<ref refid="struct__disp__t_1a41b2d7b8aece123e730aba6de4737040" kindref="member">driver</ref>.<ref refid="struct__disp__drv__t_1a96466fc0be03f5b3526d382f2c4568bd" kindref="member">set_px_cb</ref>)<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disp-&gt;<ref refid="struct__disp__t_1a41b2d7b8aece123e730aba6de4737040" kindref="member">driver</ref>.<ref refid="struct__disp__drv__t_1a96466fc0be03f5b3526d382f2c4568bd" kindref="member">set_px_cb</ref>(&amp;disp-&gt;<ref refid="struct__disp__t_1a41b2d7b8aece123e730aba6de4737040" kindref="member">driver</ref>,<sp/>(uint8_t<sp/>*)vdb-&gt;<ref refid="structlv__disp__buf__t_1ae4f48a9bc71d13eb18552a4b9ca5c711" kindref="member">buf_act</ref>,<sp/>vdb_width,<sp/>col<sp/>+<sp/>masked_a.<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref>,</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row,<sp/>recolored_px,<sp/>opa_result);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Normal<sp/>native<sp/>VDB<sp/>write*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(opa_result<sp/>==<sp/><ref refid="lv__color_8h_1aabfcbcb5ac86a1edac4035264bc7d2b8a13cdfbbe767edf76dc4f53389dfeca4a" kindref="member">LV_OPA_COVER</ref>)</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vdb_buf_tmp[col].<ref refid="unionlv__color32__t_1a724212bffcd824d555e7842b4d3a88c6" kindref="member">full</ref><sp/>=<sp/>recolored_px.<ref refid="unionlv__color32__t_1a724212bffcd824d555e7842b4d3a88c6" kindref="member">full</ref>;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vdb_buf_tmp[col]<sp/>=<sp/>lv_color_mix(recolored_px,<sp/>vdb_buf_tmp[col],<sp/>opa_result);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Handle<sp/>custom<sp/>VDB<sp/>write<sp/>is<sp/>present*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(disp-&gt;<ref refid="struct__disp__t_1a41b2d7b8aece123e730aba6de4737040" kindref="member">driver</ref>.<ref refid="struct__disp__drv__t_1a96466fc0be03f5b3526d382f2c4568bd" kindref="member">set_px_cb</ref>)<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disp-&gt;<ref refid="struct__disp__t_1a41b2d7b8aece123e730aba6de4737040" kindref="member">driver</ref>.<ref refid="struct__disp__drv__t_1a96466fc0be03f5b3526d382f2c4568bd" kindref="member">set_px_cb</ref>(&amp;disp-&gt;<ref refid="struct__disp__t_1a41b2d7b8aece123e730aba6de4737040" kindref="member">driver</ref>,<sp/>(uint8_t<sp/>*)vdb-&gt;<ref refid="structlv__disp__buf__t_1ae4f48a9bc71d13eb18552a4b9ca5c711" kindref="member">buf_act</ref>,<sp/>vdb_width,<sp/>col<sp/>+<sp/>masked_a.<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref>,</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row,<sp/>px_color,<sp/>opa_result);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Normal<sp/>native<sp/>VDB<sp/>write*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(opa_result<sp/>==<sp/><ref refid="lv__color_8h_1aabfcbcb5ac86a1edac4035264bc7d2b8a13cdfbbe767edf76dc4f53389dfeca4a" kindref="member">LV_OPA_COVER</ref>)</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vdb_buf_tmp[col]<sp/>=<sp/>px_color;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_COLOR_SCREEN_TRANSP<sp/>==<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vdb_buf_tmp[col]<sp/>=<sp/>lv_color_mix(px_color,<sp/>vdb_buf_tmp[col],<sp/>opa_result);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vdb_buf_tmp[col]<sp/>=</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color_mix_2_alpha(vdb_buf_tmp[col],<sp/>vdb_buf_tmp[col].alpha,<sp/>px_color,<sp/>opa_result);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map_p<sp/>+=<sp/>map_width<sp/>*<sp/>px_size_byte;<sp/></highlight><highlight class="comment">/*Next<sp/>row<sp/>on<sp/>the<sp/>map*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vdb_buf_tmp<sp/>+=<sp/>vdb_width;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Next<sp/>row<sp/>on<sp/>the<sp/>VDB*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal">}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="532"><highlight class="comment"><sp/>*<sp/><sp/><sp/>STATIC<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="533"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sw_mem_blend(<ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>*<sp/>dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>*<sp/>src,<sp/>uint32_t<sp/>length,<sp/><ref refid="lv__color_8h_1acdb0f6245624d86b1cb002186fd6cf96" kindref="member">lv_opa_t</ref><sp/>opa)</highlight></codeline>
<codeline lineno="543"><highlight class="normal">{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(opa<sp/>==<sp/><ref refid="lv__color_8h_1aabfcbcb5ac86a1edac4035264bc7d2b8a13cdfbbe767edf76dc4f53389dfeca4a" kindref="member">LV_OPA_COVER</ref>)<sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(dest,<sp/>src,<sp/>length<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref>));</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>col;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(col<sp/>=<sp/>0;<sp/>col<sp/>&lt;<sp/>length;<sp/>col++)<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest[col]<sp/>=<sp/>lv_color_mix(src[col],<sp/>dest[col],<sp/>opa);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sw_color_fill(<ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>*<sp/>mem,<sp/>lv_coord_t<sp/>mem_width,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>fill_area,<sp/><ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>color,</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__color_8h_1acdb0f6245624d86b1cb002186fd6cf96" kindref="member">lv_opa_t</ref><sp/>opa)</highlight></codeline>
<codeline lineno="564"><highlight class="normal">{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Set<sp/>all<sp/>row<sp/>in<sp/>vdb<sp/>to<sp/>the<sp/>given<sp/>color*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_coord_t<sp/>row;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_coord_t<sp/>col;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__disp__t" kindref="compound">lv_disp_t</ref><sp/>*<sp/>disp<sp/>=<sp/><ref refid="lv__refr_8c_1af56ba8e546734a5760a5d7bbc965788e" kindref="member">lv_refr_get_disp_refreshing</ref>();</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(disp-&gt;<ref refid="struct__disp__t_1a41b2d7b8aece123e730aba6de4737040" kindref="member">driver</ref>.<ref refid="struct__disp__drv__t_1a96466fc0be03f5b3526d382f2c4568bd" kindref="member">set_px_cb</ref>)<sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(col<sp/>=<sp/>fill_area-&gt;<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref>;<sp/>col<sp/>&lt;=<sp/>fill_area-&gt;x2;<sp/>col++)<sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(row<sp/>=<sp/>fill_area-&gt;<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref>;<sp/>row<sp/>&lt;=<sp/>fill_area-&gt;y2;<sp/>row++)<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disp-&gt;<ref refid="struct__disp__t_1a41b2d7b8aece123e730aba6de4737040" kindref="member">driver</ref>.<ref refid="struct__disp__drv__t_1a96466fc0be03f5b3526d382f2c4568bd" kindref="member">set_px_cb</ref>(&amp;disp-&gt;<ref refid="struct__disp__t_1a41b2d7b8aece123e730aba6de4737040" kindref="member">driver</ref>,<sp/>(uint8_t<sp/>*)mem,<sp/>mem_width,<sp/>col,<sp/>row,<sp/>color,<sp/>opa);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem<sp/>+=<sp/>fill_area-&gt;<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref><sp/>*<sp/>mem_width;<sp/></highlight><highlight class="comment">/*Go<sp/>to<sp/>the<sp/>first<sp/>row*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Run<sp/>simpler<sp/>function<sp/>without<sp/>opacity*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(opa<sp/>==<sp/><ref refid="lv__color_8h_1aabfcbcb5ac86a1edac4035264bc7d2b8a13cdfbbe767edf76dc4f53389dfeca4a" kindref="member">LV_OPA_COVER</ref>)<sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Fill<sp/>the<sp/>first<sp/>row<sp/>with<sp/>&apos;color&apos;*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(col<sp/>=<sp/>fill_area-&gt;<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref>;<sp/>col<sp/>&lt;=<sp/>fill_area-&gt;x2;<sp/>col++)<sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem[col]<sp/>=<sp/>color;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Copy<sp/>the<sp/>first<sp/>row<sp/>to<sp/>all<sp/>other<sp/>rows*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>*<sp/>mem_first<sp/>=<sp/>&amp;mem[fill_area-&gt;<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref>];</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lv_coord_t<sp/>copy_size<sp/><sp/><sp/>=<sp/>(fill_area-&gt;<ref refid="structlv__area__t_1aec0405ee6e0fa96f922fee6851240081" kindref="member">x2</ref><sp/>-<sp/>fill_area-&gt;<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref><sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref>);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem<sp/>+=<sp/>mem_width;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(row<sp/>=<sp/>fill_area-&gt;<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref><sp/>+<sp/>1;<sp/>row<sp/>&lt;=<sp/>fill_area-&gt;y2;<sp/>row++)<sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;mem[fill_area-&gt;<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref>],<sp/>mem_first,<sp/>copy_size);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem<sp/>+=<sp/>mem_width;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Calculate<sp/>with<sp/>alpha<sp/>too*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_COLOR_SCREEN_TRANSP<sp/>==<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>bg_tmp<sp/><sp/>=<sp/><ref refid="lv__color_8h_1a83eb8a8c5be43ccebee4acc1da5a0d47" kindref="member">LV_COLOR_BLACK</ref>;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>opa_tmp<sp/>=<sp/>lv_color_mix(color,<sp/>bg_tmp,<sp/>opa);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(row<sp/>=<sp/>fill_area-&gt;<ref refid="structlv__area__t_1a8e6b43ed9ab280f66ae4e00af312ca27" kindref="member">y1</ref>;<sp/>row<sp/>&lt;=<sp/>fill_area-&gt;y2;<sp/>row++)<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(col<sp/>=<sp/>fill_area-&gt;<ref refid="structlv__area__t_1a56d2e4d92428979499ff6a06e3d23cba" kindref="member">x1</ref>;<sp/>col<sp/>&lt;=<sp/>fill_area-&gt;x2;<sp/>col++)<sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_COLOR_SCREEN_TRANSP<sp/>==<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*If<sp/>the<sp/>bg<sp/>color<sp/>changed<sp/>recalculate<sp/>the<sp/>result<sp/>color*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mem[col].full<sp/>!=<sp/>bg_tmp.<ref refid="unionlv__color32__t_1a724212bffcd824d555e7842b4d3a88c6" kindref="member">full</ref>)<sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bg_tmp<sp/><sp/>=<sp/>mem[col];</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opa_tmp<sp/>=<sp/>lv_color_mix(color,<sp/>bg_tmp,<sp/>opa);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem[col]<sp/>=<sp/>opa_tmp;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem[col]<sp/>=<sp/>color_mix_2_alpha(mem[col],<sp/>mem[col].alpha,<sp/>color,<sp/>opa);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem<sp/>+=<sp/>mem_width;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal">}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_COLOR_SCREEN_TRANSP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>color_mix_2_alpha(<ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>bg_color,<sp/><ref refid="lv__color_8h_1acdb0f6245624d86b1cb002186fd6cf96" kindref="member">lv_opa_t</ref><sp/>bg_opa,<sp/><ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>fg_color,<sp/><ref refid="lv__color_8h_1acdb0f6245624d86b1cb002186fd6cf96" kindref="member">lv_opa_t</ref><sp/>fg_opa)</highlight></codeline>
<codeline lineno="636"><highlight class="normal">{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pick<sp/>the<sp/>foreground<sp/>if<sp/>it&apos;s<sp/>fully<sp/>opaque<sp/>or<sp/>the<sp/>Background<sp/>is<sp/>fully<sp/>transparent*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fg_opa<sp/>==<sp/><ref refid="lv__color_8h_1aabfcbcb5ac86a1edac4035264bc7d2b8a13cdfbbe767edf76dc4f53389dfeca4a" kindref="member">LV_OPA_COVER</ref><sp/>||<sp/>bg_opa<sp/>&lt;=<sp/><ref refid="lv__color_8h_1ac614bb0f5acc68f3b921f3213d46ac0f" kindref="member">LV_OPA_MIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fg_color.<ref refid="unionlv__color32__t_1adb1ece455971b67ce2cb11ccf175510d" kindref="member">ch</ref>.<ref refid="unionlv__color32__t_1a5519a07b8b8d309f06683f2110d0c8e0" kindref="member">alpha</ref><sp/>=<sp/>fg_opa;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fg_color;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Transparent<sp/>foreground:<sp/>use<sp/>the<sp/>Background*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fg_opa<sp/>&lt;=<sp/><ref refid="lv__color_8h_1ac614bb0f5acc68f3b921f3213d46ac0f" kindref="member">LV_OPA_MIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bg_color;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Opaque<sp/>background:<sp/>use<sp/>simple<sp/>mix*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bg_opa<sp/>&gt;=<sp/><ref refid="lv__color_8h_1aea67a137776de380296f660cf9543e42" kindref="member">LV_OPA_MAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lv_color_mix(fg_color,<sp/>bg_color,<sp/>fg_opa);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Both<sp/>colors<sp/>have<sp/>alpha.<sp/>Expensive<sp/>calculation<sp/>need<sp/>to<sp/>be<sp/>applied*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Save<sp/>the<sp/>parameters<sp/>and<sp/>the<sp/>result.<sp/>If<sp/>they<sp/>will<sp/>be<sp/>asked<sp/>again<sp/>don&apos;t<sp/>compute<sp/>again*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="lv__color_8h_1acdb0f6245624d86b1cb002186fd6cf96" kindref="member">lv_opa_t</ref><sp/>fg_opa_save<sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="lv__color_8h_1acdb0f6245624d86b1cb002186fd6cf96" kindref="member">lv_opa_t</ref><sp/>bg_opa_save<sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>fg_color_save<sp/>=<sp/>{{0}};</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>bg_color_save<sp/>=<sp/>{{0}};</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="unionlv__color32__t" kindref="compound">lv_color_t</ref><sp/>c<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{{0}};</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fg_opa<sp/>!=<sp/>fg_opa_save<sp/>||<sp/>bg_opa<sp/>!=<sp/>bg_opa_save<sp/>||<sp/>fg_color.<ref refid="unionlv__color32__t_1a724212bffcd824d555e7842b4d3a88c6" kindref="member">full</ref><sp/>!=<sp/>fg_color_save.<ref refid="unionlv__color32__t_1a724212bffcd824d555e7842b4d3a88c6" kindref="member">full</ref><sp/>||</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bg_color.<ref refid="unionlv__color32__t_1a724212bffcd824d555e7842b4d3a88c6" kindref="member">full</ref><sp/>!=<sp/>bg_color_save.<ref refid="unionlv__color32__t_1a724212bffcd824d555e7842b4d3a88c6" kindref="member">full</ref>)<sp/>{</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fg_opa_save<sp/><sp/><sp/>=<sp/>fg_opa;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bg_opa_save<sp/><sp/><sp/>=<sp/>bg_opa;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fg_color.<ref refid="unionlv__color32__t_1a724212bffcd824d555e7842b4d3a88c6" kindref="member">full</ref><sp/>=<sp/>fg_color_save.<ref refid="unionlv__color32__t_1a724212bffcd824d555e7842b4d3a88c6" kindref="member">full</ref>;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bg_color.<ref refid="unionlv__color32__t_1a724212bffcd824d555e7842b4d3a88c6" kindref="member">full</ref><sp/>=<sp/>bg_color_save.<ref refid="unionlv__color32__t_1a724212bffcd824d555e7842b4d3a88c6" kindref="member">full</ref>;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Info:</highlight></codeline>
<codeline lineno="666"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>https://en.wikipedia.org/wiki/Alpha_compositing#Analytical_derivation_of_the_over_operator*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__color_8h_1acdb0f6245624d86b1cb002186fd6cf96" kindref="member">lv_opa_t</ref><sp/>alpha_res<sp/>=<sp/>255<sp/>-<sp/>((uint16_t)((uint16_t)(255<sp/>-<sp/>fg_opa)<sp/>*<sp/>(255<sp/>-<sp/>bg_opa))<sp/>&gt;&gt;<sp/>8);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(alpha_res<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1)</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__color_8h_1acdb0f6245624d86b1cb002186fd6cf96" kindref="member">lv_opa_t</ref><sp/>ratio<sp/>=<sp/>(uint16_t)((uint16_t)fg_opa<sp/>*<sp/>255)<sp/>/<sp/>alpha_res;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>lv_color_mix(fg_color,<sp/>bg_color,<sp/>ratio);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.<ref refid="unionlv__color32__t_1adb1ece455971b67ce2cb11ccf175510d" kindref="member">ch</ref>.<ref refid="unionlv__color32__t_1a5519a07b8b8d309f06683f2110d0c8e0" kindref="member">alpha</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>alpha_res;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="678"><highlight class="normal">}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*LV_COLOR_SCREEN_TRANSP*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_draw/lv_draw_basic.c"/>
  </compounddef>
</doxygen>
